{"version":3,"names":["cov_9c2ir1l0x","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/interfaces/IAnalyticsService.ts"],"sourcesContent":["/**\n * Analytics Service Interface\n * Contract para servi√ßos de analytics e tracking\n */\n\nimport { IBaseService } from './IBaseService';\n\nexport interface AnalyticsEvent {\n  name: string;\n  parameters?: Record<string, any>;\n  timestamp?: Date;\n  userId?: string;\n  sessionId?: string;\n}\n\nexport interface AnalyticsPageView {\n  page: string;\n  title?: string;\n  referrer?: string;\n  timestamp?: Date;\n}\n\nexport interface AnalyticsUserProperties {\n  userId: string;\n  properties: Record<string, any>;\n}\n\nexport interface AnalyticsMetrics {\n  totalEvents: number;\n  uniqueUsers: number;\n  pageViews: number;\n  sessionDuration: number;\n  conversionRate?: number;\n}\n\nexport interface IAnalyticsService extends IBaseService {\n  // Event tracking\n  track(event: AnalyticsEvent): Promise<void>;\n  trackPageView(pageView: AnalyticsPageView): Promise<void>;\n  \n  // User management\n  setUserProperties(userProps: AnalyticsUserProperties): Promise<void>;\n  setUserId(userId: string): Promise<void>;\n  \n  // Session management\n  startSession(): Promise<string>;\n  endSession(sessionId: string): Promise<void>;\n  \n  // Data retrieval\n  getMetrics(timeRange?: { start: Date; end: Date }): Promise<AnalyticsMetrics>;\n  getEvents(filters?: Record<string, any>): Promise<AnalyticsEvent[]>;\n  \n  // Configuration\n  configure(config: AnalyticsConfig): Promise<void>;\n  isEnabled(): boolean;\n}\n\nexport interface AnalyticsConfig {\n  trackingId?: string;\n  clarityProjectId?: string;\n  tallyFormIds?: {\n    feedback?: string;\n    nps?: string;\n    features?: string;\n    bugs?: string;\n  };\n  enabled: boolean;\n  debug?: boolean;\n  sampleRate?: number;\n} "],"mappings":";;AAAA;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAAtB,IAAA;EAAA;EAAA,IAAAuB,QAAA,GAAAtB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAoB,QAAA,CAAAxB,IAAA,KAAAwB,QAAA,CAAAxB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAuB,QAAA,CAAAxB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAoB,cAAA,GAAAD,QAAA,CAAAxB,IAAA;EAAA","ignoreList":[]}