{"version":3,"names":["cov_1isii2qjm9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","LearningRecoveryService","constructor","knownLearnings","Map","initializeLearningDatabase","learnings","id","category","decision","reasoning","implementation","impact","currentStatus","discoveredAt","Date","now","forEach","learning","set","getLostLearnings","Array","from","values","filter","l","getHighImpactLearnings","generateReport","total","length","implemented","lost","recommendations","map","exports","learningRecoveryService"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/learningRecoveryService.ts"],"sourcesContent":["/**\n * Learning Recovery Service - Sistema para capturar e aplicar aprendizados perdidos\n */\n\ninterface HistoricalLearning {\n  id: string;\n  version: string;\n  category: 'ux' | 'performance' | 'architecture' | 'user_behavior';\n  decision: string;\n  reasoning: string;\n  implementation: string;\n  impact: 'high' | 'medium' | 'low';\n  currentStatus: 'implemented' | 'lost' | 'partially_implemented';\n  discoveredAt: number;\n}\n\nclass LearningRecoveryService {\n  private knownLearnings: Map<string, HistoricalLearning> = new Map();\n\n  constructor() {\n    this.initializeLearningDatabase();\n  }\n\n  private initializeLearningDatabase(): void {\n    const learnings: HistoricalLearning[] = [\n      {\n        id: 'v4_1_direct_access',\n        version: 'V4.1',\n        category: 'ux',\n        decision: 'Página principal deve ser o gerador diretamente',\n        reasoning: 'Usuários querem acesso imediato à funcionalidade principal',\n        implementation: 'Route \"/\" → GeneratorPage',\n        impact: 'high',\n        currentStatus: 'implemented',\n        discoveredAt: Date.now()\n      },\n      {\n        id: 'v4_nomenclature',\n        version: 'V4.1',\n        category: 'ux',\n        decision: 'Nome consistente: \"Roteirar IA\"',\n        reasoning: 'Eliminar confusão de branding',\n        implementation: 'Global nomenclature standardization',\n        impact: 'medium',\n        currentStatus: 'partially_implemented',\n        discoveredAt: Date.now()\n      }\n    ];\n\n    learnings.forEach(learning => {\n      this.knownLearnings.set(learning.id, learning);\n    });\n  }\n\n  public getLostLearnings(): HistoricalLearning[] {\n    return Array.from(this.knownLearnings.values())\n      .filter(l => l.currentStatus === 'lost');\n  }\n\n  public getHighImpactLearnings(): HistoricalLearning[] {\n    return Array.from(this.knownLearnings.values())\n      .filter(l => l.impact === 'high');\n  }\n\n  public generateReport() {\n    const learnings = Array.from(this.knownLearnings.values());\n    return {\n      total: learnings.length,\n      implemented: learnings.filter(l => l.currentStatus === 'implemented').length,\n      lost: learnings.filter(l => l.currentStatus === 'lost').length,\n      recommendations: this.getLostLearnings().map(l => l.decision)\n    };\n  }\n}\n\nexport const learningRecoveryService = new LearningRecoveryService();\n"],"mappings":"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","ignoreList":[]}