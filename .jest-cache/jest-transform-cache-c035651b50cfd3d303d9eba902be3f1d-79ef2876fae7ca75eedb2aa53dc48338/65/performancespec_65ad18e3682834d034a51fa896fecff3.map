{"file":"/Users/rogerioresende/Desktop/Roteirar-ia/tests/e2e/performance.spec.ts","mappings":"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","names":[],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/tests/e2e/performance.spec.ts"],"sourcesContent":["import { test, expect } from '@playwright/test';\nimport { TestHelpers } from './helpers';\n\ntest.describe('Performance e Responsividade', () => {\n  let helpers: TestHelpers;\n\n  test.beforeEach(async ({ page }) => {\n    helpers = new TestHelpers(page);\n  });\n\n  test.afterEach(async ({ page }) => {\n    if (helpers) {\n      await helpers.cleanup();\n    }\n  });\n\n  test.describe('Responsividade Mobile', () => {\n    test('TC009 - Mobile responsivo completo', async ({ page }) => {\n      // Dado que estou em dispositivo mobile\n      await helpers.setMobileViewport();\n      \n      // Quando navego pelo aplicativo\n      await helpers.goToHome();\n      \n      // Então todos os elementos são clicáveis\n      const clickableElements = page.locator('button, a, input, select, textarea');\n      const count = await clickableElements.count();\n      \n      if (count > 0) {\n        for (let i = 0; i < Math.min(count, 5); i++) {\n          const element = clickableElements.nth(i);\n          await expect(element).toBeVisible();\n          \n          const boundingBox = await element.boundingBox();\n          if (boundingBox) {\n            // Elementos devem ter tamanho mínimo para touch\n            expect(boundingBox.width).toBeGreaterThan(20);\n            expect(boundingBox.height).toBeGreaterThan(20);\n          }\n        }\n      }\n\n      // E a interface se adapta corretamente\n      const viewport = page.viewportSize();\n      expect(viewport?.width).toBe(375);\n      expect(viewport?.height).toBe(667);\n    });\n\n    test('TC009.1 - Navegação mobile entre páginas', async ({ page }) => {\n      await helpers.setMobileViewport();\n\n      const pages = [\n        { name: 'Home', action: () => helpers.goToHome() },\n        { name: 'Login', action: () => helpers.goToLogin() },\n        { name: 'Signup', action: () => helpers.goToSignup() }\n      ];\n\n      for (const pageInfo of pages) {\n        await test.step(`Testando ${pageInfo.name} em mobile`, async () => {\n          await pageInfo.action();\n          await page.waitForTimeout(1000);\n          \n          // Verifica se página carregou sem overflow horizontal\n          const bodyWidth = await page.evaluate(() => document.body.scrollWidth);\n          const viewportWidth = page.viewportSize()?.width || 375;\n          \n          // Pequena tolerância para scrollbars\n          expect(bodyWidth).toBeLessThanOrEqual(viewportWidth + 20);\n        });\n      }\n    });\n\n    test('TC009.2 - Formulários responsivos', async ({ page }) => {\n      await helpers.setMobileViewport();\n      await helpers.goToLogin();\n\n      // Testa campos de input em mobile\n      const inputs = page.locator('input, textarea, select');\n      const inputCount = await inputs.count();\n\n      if (inputCount > 0) {\n        for (let i = 0; i < Math.min(inputCount, 3); i++) {\n          const input = inputs.nth(i);\n          await expect(input).toBeVisible();\n          \n          // Testa se campo é focalizável\n          await input.click();\n          await expect(input).toBeFocused();\n          \n          // Testa se consegue digitar\n          await input.fill('teste mobile');\n          const value = await input.inputValue();\n          expect(value).toBe('teste mobile');\n          \n          await input.clear();\n        }\n      }\n    });\n  });\n\n  test.describe('Performance e Carregamento', () => {\n    test('TC010 - Performance de carregamento', async ({ page }) => {\n      // Mede tempo de carregamento\n      const startTime = Date.now();\n      \n      await helpers.goToHome();\n      \n      const loadTime = Date.now() - startTime;\n      \n      // Deve carregar em menos de 5 segundos (tolerante para testes)\n      expect(loadTime).toBeLessThan(5000);\n      console.log(`Tempo de carregamento da home: ${loadTime}ms`);\n    });\n\n    test('TC010.1 - Performance do gerador', async ({ page }) => {\n      // Faz login primeiro\n      await helpers.goToLogin();\n      await page.fill('[data-testid=\"email-input\"], input[name=\"email\"], input[type=\"email\"]', 'demo@roteirizar.com');\n      await page.fill('[data-testid=\"password-input\"], input[name=\"password\"], input[type=\"password\"]', 'demo123');\n      await page.click('[data-testid=\"login-button\"], button[type=\"submit\"], button:has-text(\"Entrar\")');\n      await page.waitForTimeout(2000);\n\n      // Mede carregamento do gerador\n      const startTime = Date.now();\n      await helpers.goToGenerator();\n      const loadTime = Date.now() - startTime;\n\n      expect(loadTime).toBeLessThan(3000);\n      console.log(`Tempo de carregamento do gerador: ${loadTime}ms`);\n    });\n\n    test('TC010.2 - Recursos de página', async ({ page }) => {\n      // Monitora requests da página\n      const responses: any[] = [];\n      \n      page.on('response', (response) => {\n        responses.push({\n          url: response.url(),\n          status: response.status(),\n          size: response.headers()['content-length']\n        });\n      });\n\n      await helpers.goToHome();\n      await page.waitForTimeout(3000);\n\n      // Verifica se não há muitos recursos falhando\n      const failedRequests = responses.filter(r => r.status >= 400);\n      const failedRatio = failedRequests.length / responses.length;\n      \n      expect(failedRatio).toBeLessThan(0.1); // Menos de 10% de falhas\n      console.log(`Total de requests: ${responses.length}, falhas: ${failedRequests.length}`);\n    });\n  });\n\n  test.describe('Acessibilidade Básica', () => {\n    test('TC010.3 - Navegação por teclado', async ({ page }) => {\n      await helpers.goToHome();\n\n      // Testa navegação por Tab\n      const focusableElements = page.locator('button, a, input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      const count = await focusableElements.count();\n\n      if (count > 0) {\n        // Foca primeiro elemento\n        await page.keyboard.press('Tab');\n        \n        const firstFocused = await page.evaluate(() => document.activeElement?.tagName);\n        expect(firstFocused).toBeTruthy();\n\n        // Testa alguns tabs\n        for (let i = 0; i < Math.min(count, 5); i++) {\n          await page.keyboard.press('Tab');\n          await page.waitForTimeout(100);\n        }\n\n        // Verifica se ainda há elemento focado\n        const lastFocused = await page.evaluate(() => document.activeElement?.tagName);\n        expect(lastFocused).toBeTruthy();\n      }\n    });\n\n    test('TC010.4 - Imagens com alt text', async ({ page }) => {\n      await helpers.goToHome();\n\n      const images = page.locator('img');\n      const imageCount = await images.count();\n\n      if (imageCount > 0) {\n        for (let i = 0; i < imageCount; i++) {\n          const img = images.nth(i);\n          const alt = await img.getAttribute('alt');\n          const src = await img.getAttribute('src');\n          \n          // Imagens devem ter alt text (ou ser decorativas)\n          if (src && !src.includes('data:image')) {\n            expect(alt).toBeTruthy();\n          }\n        }\n      }\n    });\n\n    test('TC010.5 - Contraste e legibilidade', async ({ page }) => {\n      await helpers.goToHome();\n\n      // Verifica se texto é legível (básico)\n      const textElements = page.locator('p, h1, h2, h3, h4, h5, h6, span, div').filter({ hasText: /.+/ });\n      const textCount = await textElements.count();\n\n      if (textCount > 0) {\n        for (let i = 0; i < Math.min(textCount, 5); i++) {\n          const element = textElements.nth(i);\n          \n          if (await element.isVisible()) {\n            const styles = await element.evaluate((el) => {\n              const computed = window.getComputedStyle(el);\n              return {\n                fontSize: computed.fontSize,\n                color: computed.color,\n                backgroundColor: computed.backgroundColor\n              };\n            });\n\n            // Font size mínimo\n            const fontSize = parseInt(styles.fontSize);\n            expect(fontSize).toBeGreaterThan(10);\n          }\n        }\n      }\n    });\n  });\n\n  test.describe('Cross-Browser Compatibility', () => {\n    test('TC010.6 - Funcionalidade básica em diferentes browsers', async ({ page }) => {\n      // Este teste roda automaticamente em diferentes browsers via playwright.config.ts\n      await helpers.goToHome();\n\n      // Verifica se elementos básicos funcionam\n      const basicElements = [\n        'title',\n        'h1, h2, h3',\n        'button, a',\n        'main, .main, .content'\n      ];\n\n      for (const selector of basicElements) {\n        const element = page.locator(selector);\n        if (await element.count() > 0) {\n          await expect(element.first()).toBeVisible();\n        }\n      }\n    });\n  });\n\n  test.describe('Múltiplos Viewports', () => {\n    test('TC009.3 - Desktop, Tablet e Mobile', async ({ page }) => {\n      const viewports = [\n        { name: 'Desktop', width: 1280, height: 720 },\n        { name: 'Tablet', width: 768, height: 1024 },\n        { name: 'Mobile', width: 375, height: 667 }\n      ];\n\n      for (const viewport of viewports) {\n        await test.step(`Testando viewport ${viewport.name}`, async () => {\n          await page.setViewportSize({ width: viewport.width, height: viewport.height });\n          await helpers.goToHome();\n          await page.waitForTimeout(1000);\n\n          // Verifica se página é responsiva\n          const bodyWidth = await page.evaluate(() => document.body.scrollWidth);\n          expect(bodyWidth).toBeLessThanOrEqual(viewport.width + 50); // Tolerância\n\n          // Verifica se elementos principais estão visíveis\n          const mainContent = page.locator('main, .main, .content, body > div');\n          if (await mainContent.count() > 0) {\n            await expect(mainContent.first()).toBeVisible();\n          }\n        });\n      }\n    });\n  });\n}); "],"version":3}