{"file":"/Users/rogerioresende/Desktop/Roteirar-ia/tests/e2e/dashboard-integration.spec.ts","mappings":"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","names":[],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/tests/e2e/dashboard-integration.spec.ts"],"sourcesContent":["import { test, expect, Page } from '@playwright/test';\n\n/**\n * End-to-End Integration Tests for Phase 2 Dashboard System\n * Tests all advanced features implemented in Days 1-4:\n * - Advanced Filters with Persistence\n * - Tag Management with Auto-Suggestions\n * - Search Performance and Caching\n * - User Experience Enhancements\n */\n\ntest.describe('Dashboard Integration - Phase 2', () => {\n  let page: Page;\n\n  test.beforeEach(async ({ browser }) => {\n    page = await browser.newPage();\n    \n    // Mock user authentication\n    await page.goto('/');\n    await page.evaluate(() => {\n      localStorage.setItem('authUser', JSON.stringify({\n        uid: 'test-user-123',\n        email: 'test@example.com',\n        displayName: 'Test User'\n      }));\n    });\n  });\n\n  test.describe('Advanced Filters System', () => {\n    test('should load and persist filter preferences', async () => {\n      await page.goto('/dashboard');\n      \n      // Wait for dashboard to load\n      await expect(page.locator('[data-testid=\"dashboard-header\"]')).toBeVisible();\n      \n      // Navigate to projects tab\n      await page.click('button:has-text(\"Projetos\")');\n      \n      // Verify advanced filters are loaded\n      await expect(page.locator('[data-testid=\"dashboard-filters\"]')).toBeVisible();\n      \n      // Test filter expansion\n      await page.click('[data-testid=\"expand-filters\"]');\n      await expect(page.locator('[data-testid=\"platform-filter\"]')).toBeVisible();\n      \n      // Apply platform filter\n      await page.click('[data-testid=\"platform-instagram\"]');\n      \n      // Verify filter is applied\n      await expect(page.locator('[data-testid=\"active-filters\"]')).toContainText('Instagram');\n      \n      // Test filter persistence\n      await page.reload();\n      await expect(page.locator('[data-testid=\"active-filters\"]')).toContainText('Instagram');\n    });\n\n    test('should use filter presets effectively', async () => {\n      await page.goto('/dashboard');\n      await page.click('button:has-text(\"Projetos\")');\n      \n      // Open filter presets\n      await page.click('[data-testid=\"filter-presets-trigger\"]');\n      \n      // Verify presets dropdown is visible\n      await expect(page.locator('[data-testid=\"presets-dropdown\"]')).toBeVisible();\n      \n      // Apply \"Favoritos\" preset\n      await page.click('text=Favoritos');\n      \n      // Verify favorite filter is applied\n      await expect(page.locator('[data-testid=\"favorite-filter\"]')).toBeChecked();\n      \n      // Save current filters as new preset\n      await page.click('[data-testid=\"save-preset-trigger\"]');\n      await page.fill('[data-testid=\"preset-name-input\"]', 'Test Preset');\n      await page.fill('[data-testid=\"preset-description-input\"]', 'Test automation preset');\n      await page.click('[data-testid=\"save-preset-confirm\"]');\n      \n      // Verify preset was saved\n      await page.click('[data-testid=\"filter-presets-trigger\"]');\n      await expect(page.locator('text=Test Preset')).toBeVisible();\n    });\n\n    test('should perform fast searches with caching', async () => {\n      await page.goto('/dashboard');\n      await page.click('button:has-text(\"Projetos\")');\n      \n      // Measure search performance\n      const startTime = Date.now();\n      \n      // Perform search\n      await page.fill('[data-testid=\"search-input\"]', 'tutorial');\n      \n      // Wait for search results\n      await page.waitForLoadState('networkidle');\n      const searchTime = Date.now() - startTime;\n      \n      // Verify search completed within performance targets (<300ms)\n      expect(searchTime).toBeLessThan(300);\n      \n      // Verify search results are displayed\n      await expect(page.locator('[data-testid=\"project-card\"]').first()).toBeVisible();\n      \n      // Test cache hit on repeated search\n      const cacheStartTime = Date.now();\n      await page.fill('[data-testid=\"search-input\"]', '');\n      await page.fill('[data-testid=\"search-input\"]', 'tutorial');\n      \n      await page.waitForLoadState('networkidle');\n      const cacheSearchTime = Date.now() - cacheStartTime;\n      \n      // Cache hit should be significantly faster (<50ms)\n      expect(cacheSearchTime).toBeLessThan(50);\n    });\n  });\n\n  test.describe('Tag Management System', () => {\n    test('should manage tags with full CRUD operations', async () => {\n      await page.goto('/dashboard');\n      \n      // Navigate to tags tab\n      await page.click('button:has-text(\"Tags\")');\n      \n      // Wait for TagManager to load\n      await expect(page.locator('[data-testid=\"tag-manager\"]')).toBeVisible();\n      \n      // Create new tag\n      await page.click('[data-testid=\"create-tag-button\"]');\n      await page.fill('[data-testid=\"tag-name-input\"]', 'E2E Test Tag');\n      await page.click('[data-testid=\"tag-color-blue\"]');\n      await page.fill('[data-testid=\"tag-description-input\"]', 'Created by E2E test');\n      await page.click('[data-testid=\"save-tag-button\"]');\n      \n      // Verify tag was created\n      await expect(page.locator('text=E2E Test Tag')).toBeVisible();\n      \n      // Test tag editing\n      await page.click('[data-testid=\"tag-menu-E2E Test Tag\"]');\n      await page.click('text=Editar');\n      await page.fill('[data-testid=\"edit-tag-name\"]', 'Updated E2E Tag');\n      await page.click('[data-testid=\"save-tag-edit\"]');\n      \n      // Verify tag was updated\n      await expect(page.locator('text=Updated E2E Tag')).toBeVisible();\n      \n      // Test bulk operations\n      await page.click('[data-testid=\"select-tag-Updated E2E Tag\"]');\n      await page.click('[data-testid=\"bulk-delete-button\"]');\n      await page.click('[data-testid=\"confirm-bulk-delete\"]');\n      \n      // Verify tag was deleted\n      await expect(page.locator('text=Updated E2E Tag')).not.toBeVisible();\n    });\n\n    test('should provide analytics and usage statistics', async () => {\n      await page.goto('/dashboard');\n      await page.click('button:has-text(\"Tags\")');\n      \n      // Open analytics modal\n      await page.click('[data-testid=\"tag-analytics-button\"]');\n      \n      // Verify analytics modal is displayed\n      await expect(page.locator('[data-testid=\"tag-analytics-modal\"]')).toBeVisible();\n      \n      // Verify analytics content\n      await expect(page.locator('[data-testid=\"most-used-tags\"]')).toBeVisible();\n      await expect(page.locator('[data-testid=\"usage-statistics\"]')).toBeVisible();\n      \n      // Test analytics data visualization\n      await expect(page.locator('[data-testid=\"usage-chart\"]')).toBeVisible();\n    });\n  });\n\n  test.describe('Auto-Suggestions System', () => {\n    test('should provide intelligent tag suggestions in ScriptForm', async () => {\n      await page.goto('/generator');\n      \n      // Fill form to trigger suggestions\n      await page.selectOption('[data-testid=\"platform-select\"]', 'instagram');\n      await page.selectOption('[data-testid=\"format-select\"]', 'reel');\n      await page.fill('[data-testid=\"video-topic\"]', 'Como fazer um tutorial de marketing digital para iniciantes');\n      await page.selectOption('[data-testid=\"video-goal\"]', 'Educar audiência');\n      \n      // Wait for auto-suggestions to appear\n      await expect(page.locator('[data-testid=\"tag-suggestions\"]')).toBeVisible();\n      \n      // Verify suggestion quality\n      await expect(page.locator('[data-testid=\"suggestion-marketing\"]')).toBeVisible();\n      await expect(page.locator('[data-testid=\"suggestion-educational\"]')).toBeVisible();\n      \n      // Test applying suggestions\n      await page.click('[data-testid=\"suggestion-marketing\"]');\n      \n      // Verify tag was applied\n      await expect(page.locator('[data-testid=\"selected-tag-marketing\"]')).toBeVisible();\n      \n      // Test confidence scoring\n      const confidenceText = await page.locator('[data-testid=\"suggestion-confidence\"]').first().textContent();\n      expect(confidenceText).toMatch(/\\d+%/);\n    });\n\n    test('should update suggestions based on platform changes', async () => {\n      await page.goto('/generator');\n      \n      // Fill initial content\n      await page.fill('[data-testid=\"video-topic\"]', 'Professional networking tips');\n      \n      // Select LinkedIn platform\n      await page.selectOption('[data-testid=\"platform-select\"]', 'linkedin');\n      \n      // Wait for platform-specific suggestions\n      await expect(page.locator('[data-testid=\"tag-suggestions\"]')).toBeVisible();\n      await expect(page.locator('text=profissional')).toBeVisible();\n      \n      // Change to Instagram\n      await page.selectOption('[data-testid=\"platform-select\"]', 'instagram');\n      \n      // Verify suggestions updated\n      await expect(page.locator('text=story')).toBeVisible();\n    });\n  });\n\n  test.describe('Performance and User Experience', () => {\n    test('should meet performance benchmarks', async () => {\n      // Measure page load time\n      const startTime = Date.now();\n      await page.goto('/dashboard');\n      await page.waitForLoadState('networkidle');\n      const loadTime = Date.now() - startTime;\n      \n      // Dashboard should load within 2 seconds\n      expect(loadTime).toBeLessThan(2000);\n      \n      // Test lazy loading performance\n      await page.click('button:has-text(\"Tags\")');\n      const tagLoadStart = Date.now();\n      await expect(page.locator('[data-testid=\"tag-manager\"]')).toBeVisible();\n      const tagLoadTime = Date.now() - tagLoadStart;\n      \n      // Lazy loaded components should appear within 500ms\n      expect(tagLoadTime).toBeLessThan(500);\n    });\n\n    test('should provide responsive design across devices', async () => {\n      // Test mobile viewport\n      await page.setViewportSize({ width: 375, height: 667 });\n      await page.goto('/dashboard');\n      \n      // Verify mobile-friendly layout\n      await expect(page.locator('[data-testid=\"mobile-menu\"]')).toBeVisible();\n      await expect(page.locator('[data-testid=\"desktop-sidebar\"]')).not.toBeVisible();\n      \n      // Test tablet viewport\n      await page.setViewportSize({ width: 768, height: 1024 });\n      await page.reload();\n      \n      // Verify tablet layout\n      await expect(page.locator('[data-testid=\"responsive-grid\"]')).toHaveClass(/md:grid-cols-2/);\n      \n      // Test desktop viewport\n      await page.setViewportSize({ width: 1920, height: 1080 });\n      await page.reload();\n      \n      // Verify desktop layout\n      await expect(page.locator('[data-testid=\"responsive-grid\"]')).toHaveClass(/lg:grid-cols-3/);\n    });\n\n    test('should handle error states gracefully', async () => {\n      // Simulate network error\n      await page.route('**/api/**', route => route.abort());\n      \n      await page.goto('/dashboard');\n      \n      // Verify error handling\n      await expect(page.locator('[data-testid=\"error-message\"]')).toBeVisible();\n      await expect(page.locator('[data-testid=\"retry-button\"]')).toBeVisible();\n      \n      // Test retry functionality\n      await page.unroute('**/api/**');\n      await page.click('[data-testid=\"retry-button\"]');\n      \n      // Verify recovery\n      await expect(page.locator('[data-testid=\"dashboard-content\"]')).toBeVisible();\n    });\n  });\n\n  test.describe('Integration Workflow', () => {\n    test('should complete full user workflow', async () => {\n      // 1. Navigate to dashboard\n      await page.goto('/dashboard');\n      \n      // 2. Create and apply filter preset\n      await page.click('button:has-text(\"Projetos\")');\n      await page.click('[data-testid=\"expand-filters\"]');\n      await page.click('[data-testid=\"platform-instagram\"]');\n      await page.click('[data-testid=\"save-preset-trigger\"]');\n      await page.fill('[data-testid=\"preset-name-input\"]', 'Instagram Content');\n      await page.click('[data-testid=\"save-preset-confirm\"]');\n      \n      // 3. Navigate to tag management\n      await page.click('button:has-text(\"Tags\")');\n      await page.click('[data-testid=\"create-tag-button\"]');\n      await page.fill('[data-testid=\"tag-name-input\"]', 'Content Strategy');\n      await page.click('[data-testid=\"save-tag-button\"]');\n      \n      // 4. Create new project with auto-suggestions\n      await page.goto('/generator');\n      await page.selectOption('[data-testid=\"platform-select\"]', 'instagram');\n      await page.fill('[data-testid=\"video-topic\"]', 'Content strategy for small businesses');\n      \n      // 5. Apply auto-suggested tags\n      await expect(page.locator('[data-testid=\"tag-suggestions\"]')).toBeVisible();\n      await page.click('[data-testid=\"suggestion-content-strategy\"]');\n      \n      // 6. Generate script\n      await page.click('[data-testid=\"generate-script-button\"]');\n      \n      // 7. Verify workflow completion\n      await expect(page.locator('[data-testid=\"generated-script\"]')).toBeVisible();\n      \n      // 8. Return to dashboard and verify project appears\n      await page.goto('/dashboard');\n      await page.click('button:has-text(\"Projetos\")');\n      await expect(page.locator('text=Content strategy')).toBeVisible();\n    });\n  });\n\n  test.afterEach(async () => {\n    await page.close();\n  });\n}); "],"version":3}