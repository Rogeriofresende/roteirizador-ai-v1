0390b72aeb3885e6a1778945c551a48a
"use strict";

// Application Layer Interfaces - Clean Architecture V6.4
// Central interfaces for application layer contracts
/* istanbul ignore next */
function cov_22ak6yb8uq() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/application/interfaces/index.ts";
  var hash = "3bf51edd3fdb2b5ac984f3a700cbbb0e23125952";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/application/interfaces/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 42
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 32,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/application/interfaces/index.ts",
      mappings: ";AAAA,yDAAyD;AACzD,qDAAqD;;;AA0crD,oCAAoC;AAEvB,QAAA,wBAAwB,GAAuB;IAC1D,WAAW,EAAE;QACX,UAAU,EAAE,GAAG,EAAE,YAAY;QAC7B,eAAe,EAAE,IAAI,EAAE,aAAa;QACpC,iBAAiB,EAAE,IAAI,EAAE,SAAS;QAClC,aAAa,EAAE,GAAG,EAAE,aAAa;KAClC;IACD,mBAAmB,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,cAAc,EAAE,IAAI,EAAE,UAAU;QAChC,iBAAiB,EAAE,EAAE,EAAE,aAAa;QACpC,eAAe,EAAE,CAAC;KACnB;IACD,eAAe,EAAE;QACf,cAAc,EAAE,IAAI;QACpB,SAAS,EAAE,GAAG;QACd,aAAa,EAAE,KAAK,EAAE,aAAa;QACnC,aAAa,EAAE,GAAG;KACnB;IACD,QAAQ,EAAE;QACR,UAAU,EAAE,CAAC;QACb,SAAS,EAAE,KAAK,EAAE,aAAa;QAC/B,SAAS,EAAE,IAAI;QACf,WAAW,EAAE,GAAG;KACjB;CACF,CAAC",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/application/interfaces/index.ts"],
      sourcesContent: ["// Application Layer Interfaces - Clean Architecture V6.4\n// Central interfaces for application layer contracts\n\nimport { \n  CreateScriptDTO, \n  UpdateScriptDTO, \n  ScriptResponseDTO,\n  CreateUserDTO,\n  UpdateUserPreferencesDTO,\n  UserResponseDTO,\n  CreateTemplateDTO,\n  TemplateResponseDTO,\n  CreateCollaborationSessionDTO,\n  JoinCollaborationSessionDTO,\n  CollaborationSessionResponseDTO,\n  ApiResponse\n} from '../dto';\n\n// ===== GENERIC TYPES SYSTEM =====\n\n// Base Entity Interface\nexport interface BaseEntity {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Generic Repository Interface\nexport interface IRepository<TEntity extends BaseEntity, TCreateDTO, TUpdateDTO> {\n  findById(id: string): Promise<TEntity | null>;\n  create(data: TCreateDTO): Promise<TEntity>;\n  update(id: string, data: TUpdateDTO): Promise<TEntity>;\n  delete(id: string): Promise<void>;\n  findAll(filters?: Record<string, unknown>): Promise<TEntity[]>;\n}\n\n// Generic Service Interface\nexport interface IService<TInput, TOutput> {\n  execute(input: TInput): Promise<ApiResponse<TOutput>>;\n}\n\n// Generic Use Case Interface\nexport interface IUseCase<TInput, TOutput> {\n  execute(input: TInput): Promise<ApiResponse<TOutput>>;\n  validateInput(input: TInput): { isValid: boolean; errors: string[] };\n}\n\n// ===== DOMAIN ENTITY TYPES =====\n\n// User Entity Type\nexport interface UserEntity extends BaseEntity {\n  email: string;\n  displayName?: string;\n  photoURL?: string;\n  emailVerified: boolean;\n  role: 'user' | 'admin';\n  isActive: boolean;\n  isBlocked: boolean;\n  lastLoginAt: Date;\n  lastActiveAt: Date;\n  preferences: {\n    theme: 'light' | 'dark' | 'auto';\n    language: string;\n    notifications: boolean;\n    analyticsOptIn: boolean;\n  };\n  subscription: 'free' | 'pro' | 'enterprise';\n}\n\n// Script Entity Type\nexport interface ScriptEntity extends BaseEntity {\n  userId: string;\n  title: string;\n  content: string;\n  status: 'draft' | 'completed' | 'published';\n  tags: string[];\n  folderId?: string;\n  isFavorite: boolean;\n  wordCount: number;\n  version: number;\n  formData: {\n    platform: string;\n    format: string;\n    videoGoal: string;\n    targetAudience: string;\n    toneOfVoice: string;\n    videoTopic: string;\n    duration: string;\n    details: string;\n  };\n}\n\n// Template Entity Type\nexport interface TemplateEntity extends BaseEntity {\n  title: string;\n  description: string;\n  category: 'educational' | 'entertainment' | 'marketing' | 'news' | 'tutorial' | 'review' | 'story';\n  platform: string[];\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  popularity: number;\n  usage: number;\n  rating: number;\n  isPublic: boolean;\n  isPremium: boolean;\n  authorId: string;\n  structure: TemplateSection[];\n  placeholders: TemplatePlaceholder[];\n}\n\n// Template Section Type\nexport interface TemplateSection {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  order: number;\n  duration: number;\n  isRequired: boolean;\n  suggestions: string[];\n}\n\n// Template Placeholder Type\nexport interface TemplatePlaceholder {\n  id: string;\n  name: string;\n  description: string;\n  type: 'text' | 'number' | 'select' | 'multiselect';\n  defaultValue?: unknown;\n  options?: string[];\n  validation?: {\n    required: boolean;\n    minLength?: number;\n    maxLength?: number;\n    pattern?: string;\n  };\n}\n\n// Project Entity Type\nexport interface ProjectEntity extends BaseEntity {\n  userId: string;\n  title: string;\n  description?: string;\n  settings: {\n    isPublic: boolean;\n    allowComments: boolean;\n    allowCollaboration: boolean;\n  };\n  collaborators: ProjectCollaborator[];\n  status: 'active' | 'archived' | 'deleted';\n}\n\n// Project Collaborator Type\nexport interface ProjectCollaborator {\n  userId: string;\n  role: 'owner' | 'editor' | 'commenter' | 'viewer';\n  joinedAt: Date;\n  permissions: string[];\n}\n\n// Collaboration Session Entity Type\nexport interface CollaborationSessionEntity extends BaseEntity {\n  projectId: string;\n  hostUserId: string;\n  participants: SessionParticipant[];\n  status: 'active' | 'paused' | 'ended';\n  settings: {\n    allowEdit: boolean;\n    allowComment: boolean;\n    allowVoiceChat: boolean;\n    maxParticipants: number;\n  };\n  startedAt: Date;\n  endedAt?: Date;\n}\n\n// Session Participant Type\nexport interface SessionParticipant {\n  userId: string;\n  displayName: string;\n  email: string;\n  role: 'owner' | 'editor' | 'commenter' | 'viewer';\n  status: 'online' | 'away' | 'offline';\n  joinedAt: Date;\n}\n\n// ===== USE CASE INTERFACES =====\n\n// Use Case Interfaces\nexport type { IGenerateScriptUseCase } from '../usecases/GenerateScriptUseCase';\nexport type { IManageUserUseCase } from '../usecases/ManageUserUseCase';\nexport type { IManageTemplateUseCase } from '../usecases/ManageTemplateUseCase';\nexport type { ICollaborateOnProjectUseCase } from '../usecases/CollaborateOnProjectUseCase';\n\n// Application Service Interfaces\nexport type { IScriptApplicationService } from '../services/ScriptApplicationService';\n\n// ===== REPOSITORY INTERFACES =====\n\n// Typed Repository Interfaces\nexport interface IUserRepository extends IRepository<UserEntity, CreateUserDTO, UpdateUserPreferencesDTO> {\n  findByEmail(email: string): Promise<UserEntity | null>;\n  updateLastAccess(id: string): Promise<void>;\n  findByRole(role: 'user' | 'admin'): Promise<UserEntity[]>;\n  findActiveUsers(): Promise<UserEntity[]>;\n}\n\nexport interface IScriptRepository extends IRepository<ScriptEntity, CreateScriptDTO, UpdateScriptDTO> {\n  findByUser(userId: string, filters?: { \n    status?: 'draft' | 'completed' | 'published';\n    tags?: string[];\n    folderId?: string;\n  }): Promise<ScriptEntity[]>;\n  findByTitle(title: string): Promise<ScriptEntity[]>;\n  findFavorites(userId: string): Promise<ScriptEntity[]>;\n  updateStatus(id: string, status: 'draft' | 'completed' | 'published'): Promise<ScriptEntity>;\n}\n\nexport interface ITemplateRepository extends IRepository<TemplateEntity, CreateTemplateDTO, Partial<TemplateEntity>> {\n  findByCategory(category: string, options?: { \n    limit?: number; \n    offset?: number;\n    sortBy?: 'popularity' | 'rating' | 'createdAt';\n  }): Promise<TemplateEntity[]>;\n  findFeatured(options?: { limit?: number; offset?: number }): Promise<TemplateEntity[]>;\n  search(params: {\n    query?: string;\n    category?: string;\n    platform?: string;\n    difficulty?: string;\n    isPremium?: boolean;\n    limit?: number;\n    offset?: number;\n  }): Promise<{ templates: TemplateEntity[]; total: number }>;\n  findByAuthor(authorId: string): Promise<TemplateEntity[]>;\n  updateRating(id: string, rating: number): Promise<TemplateEntity>;\n  incrementUsage(id: string): Promise<void>;\n}\n\nexport interface IProjectRepository extends IRepository<ProjectEntity, Omit<ProjectEntity, 'id' | 'createdAt' | 'updatedAt'>, Partial<ProjectEntity>> {\n  findByUser(userId: string, filters?: {\n    status?: 'active' | 'archived' | 'deleted';\n    includeCollaborated?: boolean;\n  }): Promise<ProjectEntity[]>;\n  hasCollaborationAccess(projectId: string, userId: string): Promise<boolean>;\n  hasCollaborationRights(projectId: string, userId: string): Promise<boolean>;\n  addCollaborator(projectId: string, collaborator: Omit<ProjectCollaborator, 'joinedAt'>): Promise<ProjectEntity>;\n  removeCollaborator(projectId: string, userId: string): Promise<ProjectEntity>;\n  updateCollaboratorRole(projectId: string, userId: string, role: ProjectCollaborator['role']): Promise<ProjectEntity>;\n}\n\nexport interface ICollaborationRepository extends IRepository<CollaborationSessionEntity, CreateCollaborationSessionDTO, Partial<CollaborationSessionEntity>> {\n  findActiveByProject(projectId: string): Promise<CollaborationSessionEntity | null>;\n  findByHost(hostUserId: string): Promise<CollaborationSessionEntity[]>;\n  findByParticipant(userId: string): Promise<CollaborationSessionEntity[]>;\n  addParticipant(sessionId: string, participant: Omit<SessionParticipant, 'joinedAt'>): Promise<CollaborationSessionEntity>;\n  removeParticipant(sessionId: string, userId: string): Promise<CollaborationSessionEntity>;\n  updateParticipantStatus(sessionId: string, userId: string, status: SessionParticipant['status']): Promise<CollaborationSessionEntity>;\n  transferOwnership(sessionId: string, newHostId: string): Promise<CollaborationSessionEntity>;\n  endSession(sessionId: string): Promise<CollaborationSessionEntity>;\n}\n\n// ===== SERVICE INTERFACES =====\n\n// AI Service Interface\nexport interface IGeminiService {\n  generateContent(params: {\n    prompt: string;\n    context: {\n      platform: string;\n      audience: string;\n      tone: string;\n      duration: string;\n    };\n    options?: {\n      temperature?: number;\n      maxTokens?: number;\n      topP?: number;\n    };\n  }): Promise<{\n    success: boolean;\n    content?: string;\n    error?: string;\n    metadata?: {\n      tokensUsed: number;\n      model: string;\n      responseTime: number;\n    };\n  }>;\n  \n  enhanceTemplate(params: {\n    templateId: string;\n    improvements: string[];\n    context: {\n      platform: string;\n      category: string;\n    };\n  }): Promise<{\n    success: boolean;\n    enhancedTemplate?: TemplateEntity;\n    error?: string;\n  }>;\n  \n  testConnection(): Promise<{ connected: boolean; latency?: number }>;\n}\n\n// Analytics Service Interface\nexport interface IAnalyticsService {\n  trackEvent(event: {\n    type: string;\n    userId: string;\n    metadata?: Record<string, unknown>;\n    timestamp?: Date;\n  }): Promise<void>;\n  \n  trackError(error: {\n    type: string;\n    userId: string;\n    error: string;\n    metadata?: Record<string, unknown>;\n    timestamp?: Date;\n  }): Promise<void>;\n  \n  initializeUserAnalytics(userId: string): Promise<void>;\n  \n  getUserAnalytics(userId: string, period: {\n    start: Date;\n    end: Date;\n  }): Promise<{\n    events: number;\n    errors: number;\n    mostUsedFeatures: Record<string, number>;\n    performanceMetrics: {\n      avgResponseTime: number;\n      errorRate: number;\n    };\n  }>;\n}\n\n// Cache Service Interface\nexport interface ICacheService {\n  get<T>(key: string): Promise<T | null>;\n  set<T>(key: string, value: T, options?: { \n    ttl?: number; \n    tags?: string[];\n  }): Promise<void>;\n  del(key: string): Promise<void>;\n  invalidatePattern(pattern: string): Promise<void>;\n  invalidateByTag(tag: string): Promise<void>;\n  exists(key: string): Promise<boolean>;\n  getMultiple<T>(keys: string[]): Promise<Record<string, T>>;\n  setMultiple<T>(items: Record<string, T>, options?: { ttl?: number }): Promise<void>;\n}\n\n// Realtime Service Interface\nexport interface IRealtimeService {\n  createRoom(roomId: string, options: {\n    maxParticipants: number;\n    allowVoiceChat: boolean;\n    allowScreenShare: boolean;\n    moderatorId: string;\n  }): Promise<void>;\n  \n  joinRoom(roomId: string, userId: string, userData: {\n    displayName: string;\n    role: 'owner' | 'editor' | 'commenter' | 'viewer';\n  }): Promise<void>;\n  \n  leaveRoom(roomId: string, userId: string): Promise<void>;\n  closeRoom(roomId: string): Promise<void>;\n  \n  sendMessage(roomId: string, userId: string, message: {\n    type: 'text' | 'file' | 'system';\n    content: string;\n    metadata?: Record<string, unknown>;\n  }): Promise<void>;\n  \n  getRoomParticipants(roomId: string): Promise<SessionParticipant[]>;\n}\n\n// Notification Service Interface\nexport interface INotificationService {\n  sendWelcomeEmail(params: { \n    email: string; \n    displayName: string;\n    userId: string;\n  }): Promise<void>;\n  \n  broadcastToSession(sessionId: string, message: {\n    type: 'info' | 'warning' | 'error' | 'success';\n    title: string;\n    content: string;\n    metadata?: Record<string, unknown>;\n  }): Promise<void>;\n  \n  sendCollaborationInvite(params: {\n    projectId: string;\n    inviterUserId: string;\n    inviteeEmail: string;\n    role: 'editor' | 'commenter' | 'viewer';\n  }): Promise<void>;\n  \n  sendScriptCompleted(params: {\n    userId: string;\n    scriptId: string;\n    scriptTitle: string;\n  }): Promise<void>;\n}\n\n// ===== APPLICATION LAYER CONFIGURATION =====\n\nexport interface IApplicationConfig {\n  cacheConfig: {\n    defaultTTL: number;\n    scriptsCacheTTL: number;\n    templatesCacheTTL: number;\n    usersCacheTTL: number;\n  };\n  collaborationConfig: {\n    maxParticipants: number;\n    sessionTimeout: number;\n    heartbeatInterval: number;\n    maxRoomsPerUser: number;\n  };\n  analyticsConfig: {\n    enableTracking: boolean;\n    batchSize: number;\n    flushInterval: number;\n    retentionDays: number;\n  };\n  aiConfig: {\n    maxRetries: number;\n    timeoutMs: number;\n    maxTokens: number;\n    temperature: number;\n  };\n}\n\n// ===== CROSS-CUTTING CONCERNS =====\n\n// Logger Interface\nexport interface ILogger {\n  info(message: string, metadata?: Record<string, unknown>): void;\n  warn(message: string, metadata?: Record<string, unknown>): void;\n  error(message: string, error?: Error, metadata?: Record<string, unknown>): void;\n  debug(message: string, metadata?: Record<string, unknown>): void;\n}\n\n// Validator Interface\nexport interface IValidator {\n  validate<T>(schema: unknown, data: T): { \n    isValid: boolean; \n    errors: Array<{ field: string; message: string; code: string }>;\n  };\n  validateDTO<T>(dto: T, validationRules: Record<string, unknown>): { \n    isValid: boolean; \n    errors: Array<{ field: string; message: string; code: string }>;\n  };\n}\n\n// ===== DEFAULT CONFIGURATION =====\n\nexport const defaultApplicationConfig: IApplicationConfig = {\n  cacheConfig: {\n    defaultTTL: 300, // 5 minutes\n    scriptsCacheTTL: 1800, // 30 minutes\n    templatesCacheTTL: 3600, // 1 hour\n    usersCacheTTL: 600, // 10 minutes\n  },\n  collaborationConfig: {\n    maxParticipants: 10,\n    sessionTimeout: 7200, // 2 hours\n    heartbeatInterval: 30, // 30 seconds\n    maxRoomsPerUser: 3,\n  },\n  analyticsConfig: {\n    enableTracking: true,\n    batchSize: 100,\n    flushInterval: 10000, // 10 seconds\n    retentionDays: 365,\n  },\n  aiConfig: {\n    maxRetries: 3,\n    timeoutMs: 30000, // 30 seconds\n    maxTokens: 2048,\n    temperature: 0.7,\n  },\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3bf51edd3fdb2b5ac984f3a700cbbb0e23125952"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22ak6yb8uq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22ak6yb8uq();
cov_22ak6yb8uq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22ak6yb8uq().s[1]++;
exports.defaultApplicationConfig = void 0;
// ===== DEFAULT CONFIGURATION =====
/* istanbul ignore next */
cov_22ak6yb8uq().s[2]++;
exports.defaultApplicationConfig = {
  cacheConfig: {
    defaultTTL: 300,
    // 5 minutes
    scriptsCacheTTL: 1800,
    // 30 minutes
    templatesCacheTTL: 3600,
    // 1 hour
    usersCacheTTL: 600 // 10 minutes
  },
  collaborationConfig: {
    maxParticipants: 10,
    sessionTimeout: 7200,
    // 2 hours
    heartbeatInterval: 30,
    // 30 seconds
    maxRoomsPerUser: 3
  },
  analyticsConfig: {
    enableTracking: true,
    batchSize: 100,
    flushInterval: 10000,
    // 10 seconds
    retentionDays: 365
  },
  aiConfig: {
    maxRetries: 3,
    timeoutMs: 30000,
    // 30 seconds
    maxTokens: 2048,
    temperature: 0.7
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,