e94f3f283541e40310c1b6304fed5919
"use strict";

// Enhanced Infrastructure Health Monitoring Service
// Week 4.3 Emergency Fixes - IA Charlie System Stabilization
// Real-time health checks with network resilience and fallback mechanisms
/* istanbul ignore next */
function cov_2ig8kbvepn() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/monitoring/enhancedHealthMonitor.ts";
  var hash = "58b5aee3930518b78ddf703825716b9a588f9c45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/monitoring/enhancedHealthMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 110
        }
      },
      "2": {
        start: {
          line: 6,
          column: 91
        },
        end: {
          line: 6,
          column: 106
        }
      },
      "3": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "4": {
        start: {
          line: 8,
          column: 36
        },
        end: {
          line: 8,
          column: 97
        }
      },
      "5": {
        start: {
          line: 8,
          column: 42
        },
        end: {
          line: 8,
          column: 70
        }
      },
      "6": {
        start: {
          line: 8,
          column: 85
        },
        end: {
          line: 8,
          column: 95
        }
      },
      "7": {
        start: {
          line: 9,
          column: 35
        },
        end: {
          line: 9,
          column: 100
        }
      },
      "8": {
        start: {
          line: 9,
          column: 41
        },
        end: {
          line: 9,
          column: 73
        }
      },
      "9": {
        start: {
          line: 9,
          column: 88
        },
        end: {
          line: 9,
          column: 98
        }
      },
      "10": {
        start: {
          line: 10,
          column: 32
        },
        end: {
          line: 10,
          column: 116
        }
      },
      "11": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "12": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "13": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "14": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "15": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 60
        }
      },
      "16": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "17": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "18": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "19": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "20": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "21": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "22": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "23": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "24": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "25": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "26": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 167
        }
      },
      "27": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 83
        }
      },
      "28": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "29": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "30": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "31": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "32": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "33": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "34": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "35": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "36": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "37": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "38": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "39": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "40": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "41": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "42": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 37
        }
      },
      "43": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "44": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 84,
          column: 12
        }
      },
      "45": {
        start: {
          line: 75,
          column: 53
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "46": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "47": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 95,
          column: 12
        }
      },
      "48": {
        start: {
          line: 86,
          column: 56
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "49": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 58
        }
      },
      "50": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "51": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 106,
          column: 12
        }
      },
      "52": {
        start: {
          line: 97,
          column: 52
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "53": {
        start: {
          line: 98,
          column: 34
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "54": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "55": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "56": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "57": {
        start: {
          line: 111,
          column: 31
        },
        end: {
          line: 111,
          column: 77
        }
      },
      "58": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "59": {
        start: {
          line: 114,
          column: 41
        },
        end: {
          line: 114,
          column: 80
        }
      },
      "60": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "61": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 119,
          column: 23
        }
      },
      "62": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "63": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "64": {
        start: {
          line: 124,
          column: 31
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "65": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 162,
          column: 17
        }
      },
      "66": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 126,
          column: 82
        }
      },
      "67": {
        start: {
          line: 127,
          column: 36
        },
        end: {
          line: 127,
          column: 77
        }
      },
      "68": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 129,
          column: 65
        }
      },
      "69": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 74
        }
      },
      "70": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 137,
          column: 22
        }
      },
      "71": {
        start: {
          line: 140,
          column: 44
        },
        end: {
          line: 140,
          column: 90
        }
      },
      "72": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 83
        }
      },
      "73": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "74": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 144,
          column: 90
        }
      },
      "75": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 33
        }
      },
      "76": {
        start: {
          line: 148,
          column: 45
        },
        end: {
          line: 148,
          column: 84
        }
      },
      "77": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "78": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 119
        }
      },
      "79": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "80": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "81": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "82": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "83": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "84": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 102
        }
      },
      "85": {
        start: {
          line: 171,
          column: 47
        },
        end: {
          line: 171,
          column: 65
        }
      },
      "86": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "87": {
        start: {
          line: 173,
          column: 33
        },
        end: {
          line: 178,
          column: 18
        }
      },
      "88": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 40
        }
      },
      "89": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 32
        }
      },
      "90": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 40
        }
      },
      "91": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 28
        }
      },
      "92": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "93": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 30
        }
      },
      "94": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "95": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "96": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "97": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 29
        }
      },
      "98": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "99": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "100": {
        start: {
          line: 202,
          column: 35
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "101": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 98
        }
      },
      "102": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 210,
          column: 14
        }
      },
      "103": {
        start: {
          line: 212,
          column: 32
        },
        end: {
          line: 214,
          column: 44
        }
      },
      "104": {
        start: {
          line: 213,
          column: 34
        },
        end: {
          line: 213,
          column: 63
        }
      },
      "105": {
        start: {
          line: 214,
          column: 31
        },
        end: {
          line: 214,
          column: 43
        }
      },
      "106": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 218,
          column: 15
        }
      },
      "107": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 47
        }
      },
      "108": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "109": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 68
        }
      },
      "110": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 89
        }
      },
      "111": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 233,
          column: 15
        }
      },
      "112": {
        start: {
          line: 231,
          column: 55
        },
        end: {
          line: 231,
          column: 69
        }
      },
      "113": {
        start: {
          line: 232,
          column: 63
        },
        end: {
          line: 232,
          column: 78
        }
      },
      "114": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 41
        }
      },
      "115": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 30
        }
      },
      "116": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 60
        }
      },
      "117": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "118": {
        start: {
          line: 242,
          column: 27
        },
        end: {
          line: 242,
          column: 83
        }
      },
      "119": {
        start: {
          line: 242,
          column: 52
        },
        end: {
          line: 242,
          column: 75
        }
      },
      "120": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 113
        }
      },
      "121": {
        start: {
          line: 245,
          column: 26
        },
        end: {
          line: 245,
          column: 80
        }
      },
      "122": {
        start: {
          line: 245,
          column: 48
        },
        end: {
          line: 245,
          column: 57
        }
      },
      "123": {
        start: {
          line: 245,
          column: 74
        },
        end: {
          line: 245,
          column: 79
        }
      },
      "124": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 60
        }
      },
      "125": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 73
        }
      },
      "126": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 249,
          column: 78
        }
      },
      "127": {
        start: {
          line: 249,
          column: 48
        },
        end: {
          line: 249,
          column: 70
        }
      },
      "128": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 78
        }
      },
      "129": {
        start: {
          line: 250,
          column: 48
        },
        end: {
          line: 250,
          column: 70
        }
      },
      "130": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 251,
          column: 80
        }
      },
      "131": {
        start: {
          line: 251,
          column: 49
        },
        end: {
          line: 251,
          column: 72
        }
      },
      "132": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 129
        }
      },
      "133": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "134": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 55
        }
      },
      "135": {
        start: {
          line: 257,
          column: 13
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "136": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 55
        }
      },
      "137": {
        start: {
          line: 260,
          column: 13
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "138": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 55
        }
      },
      "139": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "140": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 36
        }
      },
      "141": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "142": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 60
        }
      },
      "143": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "144": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 274,
          column: 52
        }
      },
      "145": {
        start: {
          line: 275,
          column: 25
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "146": {
        start: {
          line: 276,
          column: 28
        },
        end: {
          line: 283,
          column: 29
        }
      },
      "147": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "148": {
        start: {
          line: 278,
          column: 32
        },
        end: {
          line: 278,
          column: 49
        }
      },
      "149": {
        start: {
          line: 279,
          column: 32
        },
        end: {
          line: 279,
          column: 48
        }
      },
      "150": {
        start: {
          line: 280,
          column: 33
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "151": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 41
        }
      },
      "152": {
        start: {
          line: 284,
          column: 30
        },
        end: {
          line: 291,
          column: 31
        }
      },
      "153": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 290,
          column: 13
        }
      },
      "154": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 286,
          column: 49
        }
      },
      "155": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 287,
          column: 48
        }
      },
      "156": {
        start: {
          line: 288,
          column: 33
        },
        end: {
          line: 288,
          column: 48
        }
      },
      "157": {
        start: {
          line: 289,
          column: 25
        },
        end: {
          line: 289,
          column: 41
        }
      },
      "158": {
        start: {
          line: 292,
          column: 26
        },
        end: {
          line: 292,
          column: 53
        }
      },
      "159": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "160": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "161": {
        start: {
          line: 296,
          column: 13
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "162": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 63
        }
      },
      "163": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 60
        }
      },
      "164": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "165": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 51
        }
      },
      "166": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 315,
          column: 24
        }
      },
      "167": {
        start: {
          line: 307,
          column: 59
        },
        end: {
          line: 315,
          column: 10
        }
      },
      "168": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 314,
          column: 13
        }
      },
      "169": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 61
        }
      },
      "170": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 83
        }
      },
      "171": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 143
        }
      },
      "172": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 92
        }
      },
      "173": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "174": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 51
        }
      },
      "175": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 43
        }
      },
      "176": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 62
        }
      },
      "177": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 56
        }
      },
      "178": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 48
        }
      },
      "179": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 337,
          column: 10
        }
      },
      "180": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "181": {
        start: {
          line: 342,
          column: 27
        },
        end: {
          line: 342,
          column: 45
        }
      },
      "182": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 74
        }
      },
      "183": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 17
        }
      },
      "184": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "185": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 349,
          column: 47
        }
      },
      "186": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 50
        }
      },
      "187": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 45
        }
      },
      "188": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 24
        }
      },
      "189": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 25
        }
      },
      "190": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 63
        }
      },
      "191": {
        start: {
          line: 359,
          column: 38
        },
        end: {
          line: 359,
          column: 61
        }
      },
      "192": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      },
      "193": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "194": {
        start: {
          line: 366,
          column: 35
        },
        end: {
          line: 366,
          column: 76
        }
      },
      "195": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 369,
          column: 17
        }
      },
      "196": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 92
        }
      },
      "197": {
        start: {
          line: 371,
          column: 42
        },
        end: {
          line: 371,
          column: 104
        }
      },
      "198": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 374,
          column: 19
        }
      },
      "199": {
        start: {
          line: 376,
          column: 37
        },
        end: {
          line: 376,
          column: 92
        }
      },
      "200": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 380,
          column: 19
        }
      },
      "201": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 88
        }
      },
      "202": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 388,
          column: 54
        }
      },
      "203": {
        start: {
          line: 390,
          column: 0
        },
        end: {
          line: 396,
          column: 3
        }
      },
      "204": {
        start: {
          line: 398,
          column: 0
        },
        end: {
          line: 408,
          column: 1
        }
      },
      "205": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 65
        }
      },
      "206": {
        start: {
          line: 402,
          column: 21
        },
        end: {
          line: 402,
          column: 75
        }
      },
      "207": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 70
        }
      },
      "208": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 407,
          column: 7
        }
      },
      "209": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 44
          },
          end: {
            line: 5,
            column: 45
          }
        },
        loc: {
          start: {
            line: 5,
            column: 89
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 18
          }
        },
        loc: {
          start: {
            line: 6,
            column: 26
          },
          end: {
            line: 6,
            column: 112
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 6,
            column: 70
          },
          end: {
            line: 6,
            column: 71
          }
        },
        loc: {
          start: {
            line: 6,
            column: 89
          },
          end: {
            line: 6,
            column: 108
          }
        },
        line: 6
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 7,
            column: 37
          }
        },
        loc: {
          start: {
            line: 7,
            column: 63
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 7
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 8,
            column: 17
          },
          end: {
            line: 8,
            column: 26
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 8,
            column: 99
          }
        },
        line: 8
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 9,
            column: 17
          },
          end: {
            line: 9,
            column: 25
          }
        },
        loc: {
          start: {
            line: 9,
            column: 33
          },
          end: {
            line: 9,
            column: 102
          }
        },
        line: 9
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 10,
            column: 21
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 10,
            column: 118
          }
        },
        line: 10
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 21
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 41
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 28
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 54,
            column: 43
          }
        },
        loc: {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 44
          }
        },
        loc: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 64
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 73
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 75,
            column: 47
          },
          end: {
            line: 75,
            column: 48
          }
        },
        loc: {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 84,
            column: 10
          }
        },
        line: 75
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 75,
            column: 85
          },
          end: {
            line: 75,
            column: 86
          }
        },
        loc: {
          start: {
            line: 75,
            column: 98
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 75
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 86,
            column: 50
          },
          end: {
            line: 86,
            column: 51
          }
        },
        loc: {
          start: {
            line: 86,
            column: 56
          },
          end: {
            line: 95,
            column: 10
          }
        },
        line: 86
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 86,
            column: 88
          },
          end: {
            line: 86,
            column: 89
          }
        },
        loc: {
          start: {
            line: 86,
            column: 101
          },
          end: {
            line: 95,
            column: 9
          }
        },
        line: 86
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 97,
            column: 46
          },
          end: {
            line: 97,
            column: 47
          }
        },
        loc: {
          start: {
            line: 97,
            column: 52
          },
          end: {
            line: 106,
            column: 10
          }
        },
        line: 97
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 97,
            column: 84
          },
          end: {
            line: 97,
            column: 85
          }
        },
        loc: {
          start: {
            line: 97,
            column: 97
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 97
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 49
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 108
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 109,
            column: 47
          },
          end: {
            line: 109,
            column: 48
          }
        },
        loc: {
          start: {
            line: 109,
            column: 60
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 109
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 39
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 168
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 48
          }
        },
        loc: {
          start: {
            line: 169,
            column: 60
          },
          end: {
            line: 186,
            column: 9
          }
        },
        line: 169
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 171,
            column: 41
          },
          end: {
            line: 171,
            column: 42
          }
        },
        loc: {
          start: {
            line: 171,
            column: 47
          },
          end: {
            line: 171,
            column: 65
          }
        },
        line: 171
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 45
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 188
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 38
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 200
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 201,
            column: 47
          },
          end: {
            line: 201,
            column: 48
          }
        },
        loc: {
          start: {
            line: 201,
            column: 60
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 201
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 25
          }
        },
        loc: {
          start: {
            line: 213,
            column: 34
          },
          end: {
            line: 213,
            column: 63
          }
        },
        line: 213
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 214,
            column: 21
          },
          end: {
            line: 214,
            column: 22
          }
        },
        loc: {
          start: {
            line: 214,
            column: 31
          },
          end: {
            line: 214,
            column: 43
          }
        },
        line: 214
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 216,
            column: 33
          }
        },
        loc: {
          start: {
            line: 216,
            column: 41
          },
          end: {
            line: 218,
            column: 13
          }
        },
        line: 216
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 231,
            column: 50
          },
          end: {
            line: 231,
            column: 51
          }
        },
        loc: {
          start: {
            line: 231,
            column: 55
          },
          end: {
            line: 231,
            column: 69
          }
        },
        line: 231
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 232,
            column: 51
          },
          end: {
            line: 232,
            column: 52
          }
        },
        loc: {
          start: {
            line: 232,
            column: 63
          },
          end: {
            line: 232,
            column: 78
          }
        },
        line: 232
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 50
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 237
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 242,
            column: 47
          },
          end: {
            line: 242,
            column: 48
          }
        },
        loc: {
          start: {
            line: 242,
            column: 52
          },
          end: {
            line: 242,
            column: 75
          }
        },
        line: 242
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 245,
            column: 43
          },
          end: {
            line: 245,
            column: 44
          }
        },
        loc: {
          start: {
            line: 245,
            column: 48
          },
          end: {
            line: 245,
            column: 57
          }
        },
        line: 245
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 245,
            column: 64
          },
          end: {
            line: 245,
            column: 65
          }
        },
        loc: {
          start: {
            line: 245,
            column: 74
          },
          end: {
            line: 245,
            column: 79
          }
        },
        line: 245
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 249,
            column: 43
          },
          end: {
            line: 249,
            column: 44
          }
        },
        loc: {
          start: {
            line: 249,
            column: 48
          },
          end: {
            line: 249,
            column: 70
          }
        },
        line: 249
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 250,
            column: 43
          },
          end: {
            line: 250,
            column: 44
          }
        },
        loc: {
          start: {
            line: 250,
            column: 48
          },
          end: {
            line: 250,
            column: 70
          }
        },
        line: 250
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 251,
            column: 44
          },
          end: {
            line: 251,
            column: 45
          }
        },
        loc: {
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 72
          }
        },
        line: 251
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 27
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 269
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 43
          }
        },
        loc: {
          start: {
            line: 276,
            column: 54
          },
          end: {
            line: 283,
            column: 9
          }
        },
        line: 276
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 284,
            column: 46
          },
          end: {
            line: 284,
            column: 47
          }
        },
        loc: {
          start: {
            line: 284,
            column: 58
          },
          end: {
            line: 291,
            column: 9
          }
        },
        line: 284
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 50
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 303
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 307,
            column: 53
          },
          end: {
            line: 307,
            column: 54
          }
        },
        loc: {
          start: {
            line: 307,
            column: 59
          },
          end: {
            line: 315,
            column: 10
          }
        },
        line: 307
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 307,
            column: 91
          },
          end: {
            line: 307,
            column: 92
          }
        },
        loc: {
          start: {
            line: 307,
            column: 104
          },
          end: {
            line: 315,
            column: 9
          }
        },
        line: 307
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 31
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 318
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 26
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 325
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 33
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 328
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 33
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 331
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 26
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 340
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 30
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 347
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 14
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 358
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 359,
            column: 28
          }
        },
        loc: {
          start: {
            line: 359,
            column: 38
          },
          end: {
            line: 359,
            column: 61
          }
        },
        line: 359
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 35
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 362
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 363,
            column: 47
          },
          end: {
            line: 363,
            column: 48
          }
        },
        loc: {
          start: {
            line: 363,
            column: 60
          },
          end: {
            line: 385,
            column: 9
          }
        },
        line: 363
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 405,
            column: 44
          },
          end: {
            line: 405,
            column: 45
          }
        },
        loc: {
          start: {
            line: 405,
            column: 50
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 405
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 21
          }
        }, {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 39
          }
        }, {
          start: {
            line: 5,
            column: 44
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 35
          },
          end: {
            line: 6,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 61
          }
        }, {
          start: {
            line: 6,
            column: 64
          },
          end: {
            line: 6,
            column: 109
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 17
          }
        }, {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 10,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 46
          },
          end: {
            line: 10,
            column: 67
          }
        }, {
          start: {
            line: 10,
            column: 70
          },
          end: {
            line: 10,
            column: 115
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 11,
            column: 51
          },
          end: {
            line: 11,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 51
          },
          end: {
            line: 11,
            column: 61
          }
        }, {
          start: {
            line: 11,
            column: 65
          },
          end: {
            line: 11,
            column: 67
          }
        }],
        line: 11
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 43
          },
          end: {
            line: 90,
            column: 53
          }
        }, {
          start: {
            line: 90,
            column: 56
          },
          end: {
            line: 90,
            column: 96
          }
        }],
        line: 90
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 56
          },
          end: {
            line: 90,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 75
          },
          end: {
            line: 90,
            column: 84
          }
        }, {
          start: {
            line: 90,
            column: 87
          },
          end: {
            line: 90,
            column: 96
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 40
          },
          end: {
            line: 101,
            column: 49
          }
        }, {
          start: {
            line: 101,
            column: 52
          },
          end: {
            line: 101,
            column: 61
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 31
          },
          end: {
            line: 111,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 31
          },
          end: {
            line: 111,
            column: 72
          }
        }, {
          start: {
            line: 111,
            column: 76
          },
          end: {
            line: 111,
            column: 77
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 113,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 113,
            column: 33
          }
        }, {
          start: {
            line: 113,
            column: 37
          },
          end: {
            line: 113,
            column: 80
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "13": {
        loc: {
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 117,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 52
          },
          end: {
            line: 117,
            column: 61
          }
        }, {
          start: {
            line: 117,
            column: 64
          },
          end: {
            line: 117,
            column: 86
          }
        }],
        line: 117
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 44
          },
          end: {
            line: 140,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 44
          },
          end: {
            line: 140,
            column: 85
          }
        }, {
          start: {
            line: 140,
            column: 89
          },
          end: {
            line: 140,
            column: 90
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 146,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 146,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 152,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 152,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 56
          },
          end: {
            line: 159,
            column: 69
          }
        }, {
          start: {
            line: 159,
            column: 72
          },
          end: {
            line: 159,
            column: 87
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "19": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 24
          }
        }, {
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 189,
            column: 50
          }
        }],
        line: 189
      },
      "20": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "21": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 24
          }
        }, {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 42
          }
        }],
        line: 192
      },
      "22": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "23": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "24": {
        loc: {
          start: {
            line: 243,
            column: 42
          },
          end: {
            line: 243,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 68
          },
          end: {
            line: 243,
            column: 108
          }
        }, {
          start: {
            line: 243,
            column: 111
          },
          end: {
            line: 243,
            column: 112
          }
        }],
        line: 243
      },
      "25": {
        loc: {
          start: {
            line: 247,
            column: 48
          },
          end: {
            line: 247,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 48
          },
          end: {
            line: 247,
            column: 67
          }
        }, {
          start: {
            line: 247,
            column: 71
          },
          end: {
            line: 247,
            column: 72
          }
        }],
        line: 247
      },
      "26": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 254
      },
      "27": {
        loc: {
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 260,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 257
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 17
          },
          end: {
            line: 257,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 17
          },
          end: {
            line: 257,
            column: 34
          }
        }, {
          start: {
            line: 257,
            column: 38
          },
          end: {
            line: 257,
            column: 72
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 260,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 260
      },
      "30": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "31": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 49
          }
        }, {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 279,
            column: 48
          }
        }, {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 48
          }
        }, {
          start: {
            line: 281,
            column: 16
          },
          end: {
            line: 281,
            column: 41
          }
        }],
        line: 277
      },
      "32": {
        loc: {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 290,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 286,
            column: 49
          }
        }, {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 287,
            column: 48
          }
        }, {
          start: {
            line: 288,
            column: 16
          },
          end: {
            line: 288,
            column: 48
          }
        }, {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 289,
            column: 41
          }
        }],
        line: 285
      },
      "33": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: 296,
            column: 13
          },
          end: {
            line: 301,
            column: 9
          }
        }],
        line: 293
      },
      "34": {
        loc: {
          start: {
            line: 296,
            column: 13
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 13
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: 299,
            column: 13
          },
          end: {
            line: 301,
            column: 9
          }
        }],
        line: 296
      },
      "35": {
        loc: {
          start: {
            line: 303,
            column: 30
          },
          end: {
            line: 303,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 303,
            column: 43
          },
          end: {
            line: 303,
            column: 48
          }
        }],
        line: 303
      },
      "36": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "37": {
        loc: {
          start: {
            line: 313,
            column: 59
          },
          end: {
            line: 313,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 84
          },
          end: {
            line: 313,
            column: 89
          }
        }, {
          start: {
            line: 313,
            column: 92
          },
          end: {
            line: 313,
            column: 116
          }
        }],
        line: 313
      },
      "38": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "39": {
        loc: {
          start: {
            line: 328,
            column: 21
          },
          end: {
            line: 328,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 328,
            column: 29
          },
          end: {
            line: 328,
            column: 31
          }
        }],
        line: 328
      },
      "40": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "41": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 369,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 369,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "42": {
        loc: {
          start: {
            line: 398,
            column: 0
          },
          end: {
            line: 408,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 0
          },
          end: {
            line: 408,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "43": {
        loc: {
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 402,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 402,
            column: 61
          },
          end: {
            line: 402,
            column: 67
          }
        }, {
          start: {
            line: 402,
            column: 70
          },
          end: {
            line: 402,
            column: 75
          }
        }],
        line: 402
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/monitoring/enhancedHealthMonitor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/monitoring/enhancedHealthMonitor.ts"],
      sourcesContent: ["// Enhanced Infrastructure Health Monitoring Service\n// Week 4.3 Emergency Fixes - IA Charlie System Stabilization\n// Real-time health checks with network resilience and fallback mechanisms\n\nimport { healthMonitor as baseHealthMonitor, errorBoundary } from './healthMonitor';\nimport { performanceMonitor } from './performanceMonitor';\nimport { SystemHealthService } from '../systemHealthService';\nimport { logger } from '../../utils/logger';\n\nexport interface EnhancedHealthCheck {\n  name: string;\n  status: 'healthy' | 'warning' | 'critical' | 'offline';\n  latency: number;\n  timestamp: number;\n  error?: string;\n  fallbackUsed?: boolean;\n  retryCount?: number;\n  lastSuccess?: number;\n}\n\nexport interface NetworkResilienceConfig {\n  maxRetries: number;\n  retryDelayMs: number;\n  fallbackTimeout: number;\n  offlineDetection: boolean;\n  networkChangeDetection: boolean;\n}\n\nexport interface SystemStabilityMetrics {\n  overall: 'stable' | 'degraded' | 'unstable' | 'critical';\n  uptime: number;\n  errorRate: number;\n  responseTimeP95: number;\n  availabilityScore: number;\n  stabilityTrend: 'improving' | 'stable' | 'degrading';\n  lastIncident?: {\n    timestamp: number;\n    type: string;\n    severity: string;\n    resolved: boolean;\n  };\n}\n\nexport class EnhancedHealthMonitor {\n  private networkConfig: NetworkResilienceConfig;\n  private healthHistory: EnhancedHealthCheck[] = [];\n  private stabilityMetrics: SystemStabilityMetrics;\n  private systemHealthService: SystemHealthService;\n  private monitoringInterval: number | null = null;\n  private isOnline: boolean = navigator.onLine;\n  private fallbackMode: boolean = false;\n  private startTime: number = Date.now();\n  \n  // Network resilience tracking\n  private consecutiveFailures: Map<string, number> = new Map();\n  private lastSuccessfulCheck: Map<string, number> = new Map();\n  private fallbackProviders: Map<string, () => Promise<EnhancedHealthCheck>> = new Map();\n  \n  constructor(config?: Partial<NetworkResilienceConfig>) {\n    this.networkConfig = {\n      maxRetries: 3,\n      retryDelayMs: 1000,\n      fallbackTimeout: 5000,\n      offlineDetection: true,\n      networkChangeDetection: true,\n      ...config\n    };\n    \n    this.systemHealthService = new SystemHealthService();\n    this.stabilityMetrics = this.initializeStabilityMetrics();\n    \n    this.setupNetworkDetection();\n    this.setupFallbackProviders();\n    \n    logger.info('Enhanced Health Monitor initialized with network resilience', {\n      config: this.networkConfig,\n      fallbackProviders: this.fallbackProviders.size\n    });\n  }\n  \n  private initializeStabilityMetrics(): SystemStabilityMetrics {\n    return {\n      overall: 'stable',\n      uptime: 0,\n      errorRate: 0,\n      responseTimeP95: 0,\n      availabilityScore: 100,\n      stabilityTrend: 'stable'\n    };\n  }\n  \n  private setupNetworkDetection(): void {\n    if (!this.networkConfig.networkChangeDetection) return;\n    \n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.fallbackMode = false;\n      logger.info('Network connection restored', { \n        timestamp: Date.now(),\n        fallbackMode: this.fallbackMode\n      });\n      \n      // Trigger immediate health check on reconnection\n      this.performComprehensiveHealthCheck();\n    });\n    \n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n      this.fallbackMode = true;\n      logger.warn('Network connection lost - switching to fallback mode', {\n        timestamp: Date.now(),\n        fallbackMode: this.fallbackMode\n      });\n    });\n  }\n  \n  private setupFallbackProviders(): void {\n    // Fallback for frontend health\n    this.fallbackProviders.set('frontend', async () => ({\n      name: 'Frontend (Fallback)',\n      status: 'warning' as const,\n      latency: 0,\n      timestamp: Date.now(),\n      fallbackUsed: true,\n      error: 'Network unavailable - using local assessment'\n    }));\n    \n    // Fallback for performance assessment\n    this.fallbackProviders.set('performance', async () => {\n      const memoryUsage = this.getLocalMemoryUsage();\n      return {\n        name: 'Performance (Fallback)',\n        status: memoryUsage > 90 ? 'critical' : memoryUsage > 70 ? 'warning' : 'healthy',\n        latency: 0,\n        timestamp: Date.now(),\n        fallbackUsed: true\n      };\n    });\n    \n    // Fallback for storage health\n    this.fallbackProviders.set('storage', async () => {\n      const storageHealth = this.checkLocalStorageHealth();\n      return {\n        name: 'Storage (Fallback)',\n        status: storageHealth ? 'healthy' : 'warning',\n        latency: 0,\n        timestamp: Date.now(),\n        fallbackUsed: true\n      };\n    });\n  }\n  \n  async performEnhancedHealthCheck(serviceName: string, url: string): Promise<EnhancedHealthCheck> {\n    const startTime = performance.now();\n    const retryCount = this.consecutiveFailures.get(serviceName) || 0;\n    \n    // Check if we should use fallback immediately\n    if (this.fallbackMode || retryCount >= this.networkConfig.maxRetries) {\n      const fallbackProvider = this.fallbackProviders.get(serviceName);\n      if (fallbackProvider) {\n        logger.info(`Using fallback provider for ${serviceName}`, { \n          reason: this.fallbackMode ? 'offline' : 'max_retries_exceeded',\n          retryCount \n        });\n        return await fallbackProvider();\n      }\n    }\n    \n    // Attempt normal health check with retries\n    for (let attempt = 0; attempt <= this.networkConfig.maxRetries; attempt++) {\n      try {\n        const response = await this.executeHealthCheckWithTimeout(url);\n        const latency = Math.round(performance.now() - startTime);\n        \n        // Success - reset failure count\n        this.consecutiveFailures.delete(serviceName);\n        this.lastSuccessfulCheck.set(serviceName, Date.now());\n        \n        return {\n          name: serviceName,\n          status: this.determineHealthStatus(response, latency),\n          latency,\n          timestamp: Date.now(),\n          retryCount: attempt\n        };\n        \n      } catch (error) {\n        const currentFailures = this.consecutiveFailures.get(serviceName) || 0;\n        this.consecutiveFailures.set(serviceName, currentFailures + 1);\n        \n        // If not the last attempt, wait and retry\n        if (attempt < this.networkConfig.maxRetries) {\n          await this.delay(this.networkConfig.retryDelayMs * (attempt + 1));\n          continue;\n        }\n        \n        // Final attempt failed - check for fallback\n        const fallbackProvider = this.fallbackProviders.get(serviceName);\n        if (fallbackProvider) {\n          logger.warn(`Using fallback after ${attempt + 1} failed attempts for ${serviceName}`);\n          return await fallbackProvider();\n        }\n        \n        // No fallback available\n        return {\n          name: serviceName,\n          status: 'critical',\n          latency: Math.round(performance.now() - startTime),\n          timestamp: Date.now(),\n          error: error instanceof Error ? error.message : 'Unknown error',\n          retryCount: attempt + 1\n        };\n      }\n    }\n    \n    // This should never be reached, but TypeScript requires it\n    throw new Error('Unexpected end of health check attempts');\n  }\n  \n  private async executeHealthCheckWithTimeout(url: string): Promise<Response> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), this.networkConfig.fallbackTimeout);\n    \n    try {\n      const response = await fetch(url, {\n        method: 'HEAD',\n        mode: 'no-cors',\n        signal: controller.signal,\n        cache: 'no-cache'\n      });\n      \n      clearTimeout(timeoutId);\n      return response;\n      \n    } catch (error) {\n      clearTimeout(timeoutId);\n      throw error;\n    }\n  }\n  \n  private determineHealthStatus(response: Response, latency: number): 'healthy' | 'warning' | 'critical' {\n    if (!response.ok && response.status >= 500) {\n      return 'critical';\n    }\n    \n    if (!response.ok || latency > 5000) {\n      return 'warning';\n    }\n    \n    if (latency > 2000) {\n      return 'warning';\n    }\n    \n    return 'healthy';\n  }\n  \n  async performComprehensiveHealthCheck(): Promise<SystemStabilityMetrics> {\n    const checkStartTime = performance.now();\n    \n    logger.info('Performing comprehensive health check with network resilience');\n    \n    // Execute all health checks in parallel\n    const healthChecks = await Promise.allSettled([\n      this.performEnhancedHealthCheck('Frontend', window.location.origin),\n      this.performEnhancedHealthCheck('CDN', 'https://cdn.jsdelivr.net'),\n      this.performEnhancedHealthCheck('Performance', '/api/health'), // Fallback handled internally\n      this.performEnhancedHealthCheck('Storage', window.location.origin + '/manifest.json')\n    ]);\n    \n    // Process results\n    const validChecks: EnhancedHealthCheck[] = healthChecks\n      .filter(result => result.status === 'fulfilled')\n      .map(result => (result as PromiseFulfilledResult<EnhancedHealthCheck>).value);\n    \n    // Update health history\n    validChecks.forEach(check => {\n      this.healthHistory.push(check);\n    });\n    \n    // Keep only last 100 entries\n    if (this.healthHistory.length > 100) {\n      this.healthHistory = this.healthHistory.slice(-100);\n    }\n    \n    // Calculate stability metrics\n    this.updateStabilityMetrics(validChecks, performance.now() - checkStartTime);\n    \n    // Log comprehensive results\n    logger.info('Comprehensive health check completed', {\n      totalChecks: healthChecks.length,\n      successfulChecks: validChecks.length,\n      failedChecks: healthChecks.length - validChecks.length,\n      overallStatus: this.stabilityMetrics.overall,\n      fallbacksUsed: validChecks.filter(c => c.fallbackUsed).length,\n      averageLatency: validChecks.reduce((sum, c) => sum + c.latency, 0) / validChecks.length\n    });\n    \n    return this.stabilityMetrics;\n  }\n  \n  private updateStabilityMetrics(checks: EnhancedHealthCheck[], checkDuration: number): void {\n    const now = Date.now();\n    this.stabilityMetrics.uptime = now - this.startTime;\n    \n    // Calculate error rate from last 10 checks per service\n    const recentChecks = this.healthHistory.slice(-40); // Last 10 checks per 4 services\n    const errorCount = recentChecks.filter(c => c.status === 'critical').length;\n    this.stabilityMetrics.errorRate = recentChecks.length > 0 ? (errorCount / recentChecks.length) * 100 : 0;\n    \n    // Calculate P95 response time\n    const latencies = recentChecks.map(c => c.latency).sort((a, b) => a - b);\n    const p95Index = Math.floor(latencies.length * 0.95);\n    this.stabilityMetrics.responseTimeP95 = latencies[p95Index] || 0;\n    \n    // Calculate availability score\n    const healthyCount = checks.filter(c => c.status === 'healthy').length;\n    const warningCount = checks.filter(c => c.status === 'warning').length;\n    const criticalCount = checks.filter(c => c.status === 'critical').length;\n    \n    this.stabilityMetrics.availabilityScore = (\n      (healthyCount * 100 + warningCount * 50 + criticalCount * 0) / checks.length\n    );\n    \n    // Determine overall status\n    if (criticalCount > checks.length * 0.5) {\n      this.stabilityMetrics.overall = 'critical';\n    } else if (criticalCount > 0 || warningCount > checks.length * 0.5) {\n      this.stabilityMetrics.overall = 'unstable';\n    } else if (warningCount > 0) {\n      this.stabilityMetrics.overall = 'degraded';\n    } else {\n      this.stabilityMetrics.overall = 'stable';\n    }\n    \n    // Update stability trend\n    this.updateStabilityTrend();\n  }\n  \n  private updateStabilityTrend(): void {\n    if (this.healthHistory.length < 20) {\n      this.stabilityMetrics.stabilityTrend = 'stable';\n      return;\n    }\n    \n    const recent = this.healthHistory.slice(-10);\n    const previous = this.healthHistory.slice(-20, -10);\n    \n    const recentScore = recent.reduce((sum, c) => {\n      switch (c.status) {\n        case 'healthy': return sum + 100;\n        case 'warning': return sum + 50;\n        case 'critical': return sum + 0;\n        default: return sum + 25;\n      }\n    }, 0) / recent.length;\n    \n    const previousScore = previous.reduce((sum, c) => {\n      switch (c.status) {\n        case 'healthy': return sum + 100;\n        case 'warning': return sum + 50;\n        case 'critical': return sum + 0;\n        default: return sum + 25;\n      }\n    }, 0) / previous.length;\n    \n    const scoreDiff = recentScore - previousScore;\n    \n    if (scoreDiff > 10) {\n      this.stabilityMetrics.stabilityTrend = 'improving';\n    } else if (scoreDiff < -10) {\n      this.stabilityMetrics.stabilityTrend = 'degrading';\n    } else {\n      this.stabilityMetrics.stabilityTrend = 'stable';\n    }\n  }\n  \n  startContinuousMonitoring(intervalMs: number = 60000): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n    }\n    \n    this.monitoringInterval = window.setInterval(async () => {\n      try {\n        await this.performComprehensiveHealthCheck();\n      } catch (error) {\n        logger.error('Error during continuous monitoring', error);\n        errorBoundary.captureError(\n          error instanceof Error ? error : new Error(String(error)),\n          'Continuous Monitoring'\n        );\n      }\n    }, intervalMs);\n    \n    logger.info(`Continuous monitoring started with ${intervalMs}ms interval`);\n  }\n  \n  stopContinuousMonitoring(): void {\n    if (this.monitoringInterval) {\n      clearInterval(this.monitoringInterval);\n      this.monitoringInterval = null;\n    }\n    \n    logger.info('Continuous monitoring stopped');\n  }\n  \n  getStabilityMetrics(): SystemStabilityMetrics {\n    return { ...this.stabilityMetrics };\n  }\n  \n  getHealthHistory(limit: number = 50): EnhancedHealthCheck[] {\n    return this.healthHistory.slice(-limit);\n  }\n  \n  getNetworkResilienceStatus(): {\n    isOnline: boolean;\n    fallbackMode: boolean;\n    failuresByService: Record<string, number>;\n    lastSuccessfulChecks: Record<string, number>;\n  } {\n    return {\n      isOnline: this.isOnline,\n      fallbackMode: this.fallbackMode,\n      failuresByService: Object.fromEntries(this.consecutiveFailures),\n      lastSuccessfulChecks: Object.fromEntries(this.lastSuccessfulCheck)\n    };\n  }\n  \n  // Utility methods\n  private getLocalMemoryUsage(): number {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory;\n      return (memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100;\n    }\n    return 0;\n  }\n  \n  private checkLocalStorageHealth(): boolean {\n    try {\n      const testKey = 'health_check_test';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  \n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  \n  // Integration with existing systems\n  async integrateWithExistingSystems(): Promise<void> {\n    try {\n      // Integrate with base health monitor\n      const baseStatus = baseHealthMonitor.getStatus();\n      if (baseStatus) {\n        logger.info('Integrated with base health monitor', baseStatus);\n      }\n      \n      // Integrate with performance monitor\n      const performanceReport = performanceMonitor.getPerformanceReport();\n      logger.info('Integrated with performance monitor', { \n        metricsCount: Object.keys(performanceReport).length \n      });\n      \n      // Integrate with system health service\n      const systemHealth = await this.systemHealthService.performFullHealthCheck();\n      logger.info('Integrated with system health service', {\n        overall: systemHealth.overall,\n        score: systemHealth.score\n      });\n      \n    } catch (error) {\n      logger.error('Error integrating with existing systems', error);\n    }\n  }\n}\n\n// Global enhanced health monitor instance\nexport const enhancedHealthMonitor = new EnhancedHealthMonitor({\n  maxRetries: 3,\n  retryDelayMs: 1500,\n  fallbackTimeout: 5000,\n  offlineDetection: true,\n  networkChangeDetection: true\n});\n\n// Auto-start in development and production\nif (typeof window !== 'undefined') {\n  // Initialize integration with existing systems\n  enhancedHealthMonitor.integrateWithExistingSystems();\n  \n  // Start monitoring with appropriate interval\n  const interval = process.env.NODE_ENV === 'production' ? 120000 : 60000; // 2min prod, 1min dev\n  enhancedHealthMonitor.startContinuousMonitoring(interval);\n  \n  // Cleanup on page unload\n  window.addEventListener('beforeunload', () => {\n    enhancedHealthMonitor.stopContinuousMonitoring();\n  });\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58b5aee3930518b78ddf703825716b9a588f9c45"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ig8kbvepn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ig8kbvepn();
var __awaiter =
/* istanbul ignore next */
(cov_2ig8kbvepn().s[0]++,
/* istanbul ignore next */
(cov_2ig8kbvepn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2ig8kbvepn().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2ig8kbvepn().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2ig8kbvepn().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[1]++;
    cov_2ig8kbvepn().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[2]++;
      cov_2ig8kbvepn().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2ig8kbvepn().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[4]++;
      cov_2ig8kbvepn().s[4]++;
      try {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[5]++;
      cov_2ig8kbvepn().s[7]++;
      try {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[6]++;
      cov_2ig8kbvepn().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_2ig8kbvepn().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ig8kbvepn().s[13]++;
exports.enhancedHealthMonitor = exports.EnhancedHealthMonitor = void 0;
const healthMonitor_1 =
/* istanbul ignore next */
(cov_2ig8kbvepn().s[14]++, require("./healthMonitor"));
const performanceMonitor_1 =
/* istanbul ignore next */
(cov_2ig8kbvepn().s[15]++, require("./performanceMonitor"));
const systemHealthService_1 =
/* istanbul ignore next */
(cov_2ig8kbvepn().s[16]++, require("../systemHealthService"));
const logger_1 =
/* istanbul ignore next */
(cov_2ig8kbvepn().s[17]++, require("../../utils/logger"));
class EnhancedHealthMonitor {
  constructor(config) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[7]++;
    cov_2ig8kbvepn().s[18]++;
    this.healthHistory = [];
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[19]++;
    this.monitoringInterval = null;
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[20]++;
    this.isOnline = navigator.onLine;
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[21]++;
    this.fallbackMode = false;
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[22]++;
    this.startTime = Date.now();
    // Network resilience tracking
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[23]++;
    this.consecutiveFailures = new Map();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[24]++;
    this.lastSuccessfulCheck = new Map();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[25]++;
    this.fallbackProviders = new Map();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[26]++;
    this.networkConfig = Object.assign({
      maxRetries: 3,
      retryDelayMs: 1000,
      fallbackTimeout: 5000,
      offlineDetection: true,
      networkChangeDetection: true
    }, config);
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[27]++;
    this.systemHealthService = new systemHealthService_1.SystemHealthService();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[28]++;
    this.stabilityMetrics = this.initializeStabilityMetrics();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[29]++;
    this.setupNetworkDetection();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[30]++;
    this.setupFallbackProviders();
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[31]++;
    logger_1.logger.info('Enhanced Health Monitor initialized with network resilience', {
      config: this.networkConfig,
      fallbackProviders: this.fallbackProviders.size
    });
  }
  initializeStabilityMetrics() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[8]++;
    cov_2ig8kbvepn().s[32]++;
    return {
      overall: 'stable',
      uptime: 0,
      errorRate: 0,
      responseTimeP95: 0,
      availabilityScore: 100,
      stabilityTrend: 'stable'
    };
  }
  setupNetworkDetection() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[9]++;
    cov_2ig8kbvepn().s[33]++;
    if (!this.networkConfig.networkChangeDetection) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[5][0]++;
      cov_2ig8kbvepn().s[34]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[5][1]++;
    }
    cov_2ig8kbvepn().s[35]++;
    window.addEventListener('online', () => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[10]++;
      cov_2ig8kbvepn().s[36]++;
      this.isOnline = true;
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[37]++;
      this.fallbackMode = false;
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[38]++;
      logger_1.logger.info('Network connection restored', {
        timestamp: Date.now(),
        fallbackMode: this.fallbackMode
      });
      // Trigger immediate health check on reconnection
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[39]++;
      this.performComprehensiveHealthCheck();
    });
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[40]++;
    window.addEventListener('offline', () => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[11]++;
      cov_2ig8kbvepn().s[41]++;
      this.isOnline = false;
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[42]++;
      this.fallbackMode = true;
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[43]++;
      logger_1.logger.warn('Network connection lost - switching to fallback mode', {
        timestamp: Date.now(),
        fallbackMode: this.fallbackMode
      });
    });
  }
  setupFallbackProviders() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[12]++;
    cov_2ig8kbvepn().s[44]++;
    // Fallback for frontend health
    this.fallbackProviders.set('frontend', () => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[13]++;
      cov_2ig8kbvepn().s[45]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[14]++;
        cov_2ig8kbvepn().s[46]++;
        return {
          name: 'Frontend (Fallback)',
          status: 'warning',
          latency: 0,
          timestamp: Date.now(),
          fallbackUsed: true,
          error: 'Network unavailable - using local assessment'
        };
      });
    });
    // Fallback for performance assessment
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[47]++;
    this.fallbackProviders.set('performance', () => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[15]++;
      cov_2ig8kbvepn().s[48]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[16]++;
        const memoryUsage =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[49]++, this.getLocalMemoryUsage());
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[50]++;
        return {
          name: 'Performance (Fallback)',
          status: memoryUsage > 90 ?
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[6][0]++, 'critical') :
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[6][1]++, memoryUsage > 70 ?
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[7][0]++, 'warning') :
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[7][1]++, 'healthy')),
          latency: 0,
          timestamp: Date.now(),
          fallbackUsed: true
        };
      });
    });
    // Fallback for storage health
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[51]++;
    this.fallbackProviders.set('storage', () => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[17]++;
      cov_2ig8kbvepn().s[52]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[18]++;
        const storageHealth =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[53]++, this.checkLocalStorageHealth());
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[54]++;
        return {
          name: 'Storage (Fallback)',
          status: storageHealth ?
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[8][0]++, 'healthy') :
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[8][1]++, 'warning'),
          latency: 0,
          timestamp: Date.now(),
          fallbackUsed: true
        };
      });
    });
  }
  performEnhancedHealthCheck(serviceName, url) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[19]++;
    cov_2ig8kbvepn().s[55]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[20]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[56]++, performance.now());
      const retryCount =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[57]++,
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[9][0]++, this.consecutiveFailures.get(serviceName)) ||
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[9][1]++, 0));
      // Check if we should use fallback immediately
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[11][0]++, this.fallbackMode) ||
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[11][1]++, retryCount >= this.networkConfig.maxRetries)) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[10][0]++;
        const fallbackProvider =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[59]++, this.fallbackProviders.get(serviceName));
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[60]++;
        if (fallbackProvider) {
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[12][0]++;
          cov_2ig8kbvepn().s[61]++;
          logger_1.logger.info(`Using fallback provider for ${serviceName}`, {
            reason: this.fallbackMode ?
            /* istanbul ignore next */
            (cov_2ig8kbvepn().b[13][0]++, 'offline') :
            /* istanbul ignore next */
            (cov_2ig8kbvepn().b[13][1]++, 'max_retries_exceeded'),
            retryCount
          });
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[62]++;
          return yield fallbackProvider();
        } else
        /* istanbul ignore next */
        {
          cov_2ig8kbvepn().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2ig8kbvepn().b[10][1]++;
      }
      // Attempt normal health check with retries
      cov_2ig8kbvepn().s[63]++;
      for (let attempt =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[64]++, 0); attempt <= this.networkConfig.maxRetries; attempt++) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[65]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_2ig8kbvepn().s[66]++, yield this.executeHealthCheckWithTimeout(url));
          const latency =
          /* istanbul ignore next */
          (cov_2ig8kbvepn().s[67]++, Math.round(performance.now() - startTime));
          // Success - reset failure count
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[68]++;
          this.consecutiveFailures.delete(serviceName);
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[69]++;
          this.lastSuccessfulCheck.set(serviceName, Date.now());
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[70]++;
          return {
            name: serviceName,
            status: this.determineHealthStatus(response, latency),
            latency,
            timestamp: Date.now(),
            retryCount: attempt
          };
        } catch (error) {
          const currentFailures =
          /* istanbul ignore next */
          (cov_2ig8kbvepn().s[71]++,
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[14][0]++, this.consecutiveFailures.get(serviceName)) ||
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[14][1]++, 0));
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[72]++;
          this.consecutiveFailures.set(serviceName, currentFailures + 1);
          // If not the last attempt, wait and retry
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[73]++;
          if (attempt < this.networkConfig.maxRetries) {
            /* istanbul ignore next */
            cov_2ig8kbvepn().b[15][0]++;
            cov_2ig8kbvepn().s[74]++;
            yield this.delay(this.networkConfig.retryDelayMs * (attempt + 1));
            /* istanbul ignore next */
            cov_2ig8kbvepn().s[75]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_2ig8kbvepn().b[15][1]++;
          }
          // Final attempt failed - check for fallback
          const fallbackProvider =
          /* istanbul ignore next */
          (cov_2ig8kbvepn().s[76]++, this.fallbackProviders.get(serviceName));
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[77]++;
          if (fallbackProvider) {
            /* istanbul ignore next */
            cov_2ig8kbvepn().b[16][0]++;
            cov_2ig8kbvepn().s[78]++;
            logger_1.logger.warn(`Using fallback after ${attempt + 1} failed attempts for ${serviceName}`);
            /* istanbul ignore next */
            cov_2ig8kbvepn().s[79]++;
            return yield fallbackProvider();
          } else
          /* istanbul ignore next */
          {
            cov_2ig8kbvepn().b[16][1]++;
          }
          // No fallback available
          cov_2ig8kbvepn().s[80]++;
          return {
            name: serviceName,
            status: 'critical',
            latency: Math.round(performance.now() - startTime),
            timestamp: Date.now(),
            error: error instanceof Error ?
            /* istanbul ignore next */
            (cov_2ig8kbvepn().b[17][0]++, error.message) :
            /* istanbul ignore next */
            (cov_2ig8kbvepn().b[17][1]++, 'Unknown error'),
            retryCount: attempt + 1
          };
        }
      }
      // This should never be reached, but TypeScript requires it
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[81]++;
      throw new Error('Unexpected end of health check attempts');
    });
  }
  executeHealthCheckWithTimeout(url) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[21]++;
    cov_2ig8kbvepn().s[82]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[22]++;
      const controller =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[83]++, new AbortController());
      const timeoutId =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[84]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[23]++;
        cov_2ig8kbvepn().s[85]++;
        return controller.abort();
      }, this.networkConfig.fallbackTimeout));
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[86]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[87]++, yield fetch(url, {
          method: 'HEAD',
          mode: 'no-cors',
          signal: controller.signal,
          cache: 'no-cache'
        }));
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[88]++;
        clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[89]++;
        return response;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[90]++;
        clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[91]++;
        throw error;
      }
    });
  }
  determineHealthStatus(response, latency) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[24]++;
    cov_2ig8kbvepn().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[19][0]++, !response.ok) &&
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[19][1]++, response.status >= 500)) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[18][0]++;
      cov_2ig8kbvepn().s[93]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[18][1]++;
    }
    cov_2ig8kbvepn().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[21][0]++, !response.ok) ||
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[21][1]++, latency > 5000)) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[20][0]++;
      cov_2ig8kbvepn().s[95]++;
      return 'warning';
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[20][1]++;
    }
    cov_2ig8kbvepn().s[96]++;
    if (latency > 2000) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[22][0]++;
      cov_2ig8kbvepn().s[97]++;
      return 'warning';
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[22][1]++;
    }
    cov_2ig8kbvepn().s[98]++;
    return 'healthy';
  }
  performComprehensiveHealthCheck() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[25]++;
    cov_2ig8kbvepn().s[99]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[26]++;
      const checkStartTime =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[100]++, performance.now());
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[101]++;
      logger_1.logger.info('Performing comprehensive health check with network resilience');
      // Execute all health checks in parallel
      const healthChecks =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[102]++, yield Promise.allSettled([this.performEnhancedHealthCheck('Frontend', window.location.origin), this.performEnhancedHealthCheck('CDN', 'https://cdn.jsdelivr.net'), this.performEnhancedHealthCheck('Performance', '/api/health'),
      // Fallback handled internally
      this.performEnhancedHealthCheck('Storage', window.location.origin + '/manifest.json')]));
      // Process results
      const validChecks =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[103]++, healthChecks.filter(result => {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[27]++;
        cov_2ig8kbvepn().s[104]++;
        return result.status === 'fulfilled';
      }).map(result => {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[28]++;
        cov_2ig8kbvepn().s[105]++;
        return result.value;
      }));
      // Update health history
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[106]++;
      validChecks.forEach(check => {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[29]++;
        cov_2ig8kbvepn().s[107]++;
        this.healthHistory.push(check);
      });
      // Keep only last 100 entries
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[108]++;
      if (this.healthHistory.length > 100) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[23][0]++;
        cov_2ig8kbvepn().s[109]++;
        this.healthHistory = this.healthHistory.slice(-100);
      } else
      /* istanbul ignore next */
      {
        cov_2ig8kbvepn().b[23][1]++;
      }
      // Calculate stability metrics
      cov_2ig8kbvepn().s[110]++;
      this.updateStabilityMetrics(validChecks, performance.now() - checkStartTime);
      // Log comprehensive results
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[111]++;
      logger_1.logger.info('Comprehensive health check completed', {
        totalChecks: healthChecks.length,
        successfulChecks: validChecks.length,
        failedChecks: healthChecks.length - validChecks.length,
        overallStatus: this.stabilityMetrics.overall,
        fallbacksUsed: validChecks.filter(c => {
          /* istanbul ignore next */
          cov_2ig8kbvepn().f[30]++;
          cov_2ig8kbvepn().s[112]++;
          return c.fallbackUsed;
        }).length,
        averageLatency: validChecks.reduce((sum, c) => {
          /* istanbul ignore next */
          cov_2ig8kbvepn().f[31]++;
          cov_2ig8kbvepn().s[113]++;
          return sum + c.latency;
        }, 0) / validChecks.length
      });
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[114]++;
      return this.stabilityMetrics;
    });
  }
  updateStabilityMetrics(checks, checkDuration) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[32]++;
    const now =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[115]++, Date.now());
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[116]++;
    this.stabilityMetrics.uptime = now - this.startTime;
    // Calculate error rate from last 10 checks per service
    const recentChecks =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[117]++, this.healthHistory.slice(-40)); // Last 10 checks per 4 services
    const errorCount =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[118]++, recentChecks.filter(c => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[33]++;
      cov_2ig8kbvepn().s[119]++;
      return c.status === 'critical';
    }).length);
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[120]++;
    this.stabilityMetrics.errorRate = recentChecks.length > 0 ?
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[24][0]++, errorCount / recentChecks.length * 100) :
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[24][1]++, 0);
    // Calculate P95 response time
    const latencies =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[121]++, recentChecks.map(c => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[34]++;
      cov_2ig8kbvepn().s[122]++;
      return c.latency;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[35]++;
      cov_2ig8kbvepn().s[123]++;
      return a - b;
    }));
    const p95Index =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[124]++, Math.floor(latencies.length * 0.95));
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[125]++;
    this.stabilityMetrics.responseTimeP95 =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[25][0]++, latencies[p95Index]) ||
    /* istanbul ignore next */
    (cov_2ig8kbvepn().b[25][1]++, 0);
    // Calculate availability score
    const healthyCount =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[126]++, checks.filter(c => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[36]++;
      cov_2ig8kbvepn().s[127]++;
      return c.status === 'healthy';
    }).length);
    const warningCount =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[128]++, checks.filter(c => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[37]++;
      cov_2ig8kbvepn().s[129]++;
      return c.status === 'warning';
    }).length);
    const criticalCount =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[130]++, checks.filter(c => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[38]++;
      cov_2ig8kbvepn().s[131]++;
      return c.status === 'critical';
    }).length);
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[132]++;
    this.stabilityMetrics.availabilityScore = (healthyCount * 100 + warningCount * 50 + criticalCount * 0) / checks.length;
    // Determine overall status
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[133]++;
    if (criticalCount > checks.length * 0.5) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[26][0]++;
      cov_2ig8kbvepn().s[134]++;
      this.stabilityMetrics.overall = 'critical';
    } else {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[26][1]++;
      cov_2ig8kbvepn().s[135]++;
      if (
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[28][0]++, criticalCount > 0) ||
      /* istanbul ignore next */
      (cov_2ig8kbvepn().b[28][1]++, warningCount > checks.length * 0.5)) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[27][0]++;
        cov_2ig8kbvepn().s[136]++;
        this.stabilityMetrics.overall = 'unstable';
      } else {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[27][1]++;
        cov_2ig8kbvepn().s[137]++;
        if (warningCount > 0) {
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[29][0]++;
          cov_2ig8kbvepn().s[138]++;
          this.stabilityMetrics.overall = 'degraded';
        } else {
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[29][1]++;
          cov_2ig8kbvepn().s[139]++;
          this.stabilityMetrics.overall = 'stable';
        }
      }
    }
    // Update stability trend
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[140]++;
    this.updateStabilityTrend();
  }
  updateStabilityTrend() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[39]++;
    cov_2ig8kbvepn().s[141]++;
    if (this.healthHistory.length < 20) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[30][0]++;
      cov_2ig8kbvepn().s[142]++;
      this.stabilityMetrics.stabilityTrend = 'stable';
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[143]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[30][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[144]++, this.healthHistory.slice(-10));
    const previous =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[145]++, this.healthHistory.slice(-20, -10));
    const recentScore =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[146]++, recent.reduce((sum, c) => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[40]++;
      cov_2ig8kbvepn().s[147]++;
      switch (c.status) {
        case 'healthy':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[31][0]++;
          cov_2ig8kbvepn().s[148]++;
          return sum + 100;
        case 'warning':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[31][1]++;
          cov_2ig8kbvepn().s[149]++;
          return sum + 50;
        case 'critical':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[31][2]++;
          cov_2ig8kbvepn().s[150]++;
          return sum + 0;
        default:
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[31][3]++;
          cov_2ig8kbvepn().s[151]++;
          return sum + 25;
      }
    }, 0) / recent.length);
    const previousScore =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[152]++, previous.reduce((sum, c) => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[41]++;
      cov_2ig8kbvepn().s[153]++;
      switch (c.status) {
        case 'healthy':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[32][0]++;
          cov_2ig8kbvepn().s[154]++;
          return sum + 100;
        case 'warning':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[32][1]++;
          cov_2ig8kbvepn().s[155]++;
          return sum + 50;
        case 'critical':
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[32][2]++;
          cov_2ig8kbvepn().s[156]++;
          return sum + 0;
        default:
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[32][3]++;
          cov_2ig8kbvepn().s[157]++;
          return sum + 25;
      }
    }, 0) / previous.length);
    const scoreDiff =
    /* istanbul ignore next */
    (cov_2ig8kbvepn().s[158]++, recentScore - previousScore);
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[159]++;
    if (scoreDiff > 10) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[33][0]++;
      cov_2ig8kbvepn().s[160]++;
      this.stabilityMetrics.stabilityTrend = 'improving';
    } else {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[33][1]++;
      cov_2ig8kbvepn().s[161]++;
      if (scoreDiff < -10) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[34][0]++;
        cov_2ig8kbvepn().s[162]++;
        this.stabilityMetrics.stabilityTrend = 'degrading';
      } else {
        /* istanbul ignore next */
        cov_2ig8kbvepn().b[34][1]++;
        cov_2ig8kbvepn().s[163]++;
        this.stabilityMetrics.stabilityTrend = 'stable';
      }
    }
  }
  startContinuousMonitoring(intervalMs =
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[35][0]++, 60000)) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[42]++;
    cov_2ig8kbvepn().s[164]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[36][0]++;
      cov_2ig8kbvepn().s[165]++;
      clearInterval(this.monitoringInterval);
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[36][1]++;
    }
    cov_2ig8kbvepn().s[166]++;
    this.monitoringInterval = window.setInterval(() => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[43]++;
      cov_2ig8kbvepn().s[167]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ig8kbvepn().f[44]++;
        cov_2ig8kbvepn().s[168]++;
        try {
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[169]++;
          yield this.performComprehensiveHealthCheck();
        } catch (error) {
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[170]++;
          logger_1.logger.error('Error during continuous monitoring', error);
          /* istanbul ignore next */
          cov_2ig8kbvepn().s[171]++;
          healthMonitor_1.errorBoundary.captureError(error instanceof Error ?
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[37][0]++, error) :
          /* istanbul ignore next */
          (cov_2ig8kbvepn().b[37][1]++, new Error(String(error))), 'Continuous Monitoring');
        }
      });
    }, intervalMs);
    /* istanbul ignore next */
    cov_2ig8kbvepn().s[172]++;
    logger_1.logger.info(`Continuous monitoring started with ${intervalMs}ms interval`);
  }
  stopContinuousMonitoring() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[45]++;
    cov_2ig8kbvepn().s[173]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[38][0]++;
      cov_2ig8kbvepn().s[174]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[175]++;
      this.monitoringInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[38][1]++;
    }
    cov_2ig8kbvepn().s[176]++;
    logger_1.logger.info('Continuous monitoring stopped');
  }
  getStabilityMetrics() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[46]++;
    cov_2ig8kbvepn().s[177]++;
    return Object.assign({}, this.stabilityMetrics);
  }
  getHealthHistory(limit =
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[39][0]++, 50)) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[47]++;
    cov_2ig8kbvepn().s[178]++;
    return this.healthHistory.slice(-limit);
  }
  getNetworkResilienceStatus() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[48]++;
    cov_2ig8kbvepn().s[179]++;
    return {
      isOnline: this.isOnline,
      fallbackMode: this.fallbackMode,
      failuresByService: Object.fromEntries(this.consecutiveFailures),
      lastSuccessfulChecks: Object.fromEntries(this.lastSuccessfulCheck)
    };
  }
  // Utility methods
  getLocalMemoryUsage() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[49]++;
    cov_2ig8kbvepn().s[180]++;
    if ('memory' in performance) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().b[40][0]++;
      const memory =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[181]++, performance.memory);
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[182]++;
      return memory.usedJSHeapSize / memory.jsHeapSizeLimit * 100;
    } else
    /* istanbul ignore next */
    {
      cov_2ig8kbvepn().b[40][1]++;
    }
    cov_2ig8kbvepn().s[183]++;
    return 0;
  }
  checkLocalStorageHealth() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[50]++;
    cov_2ig8kbvepn().s[184]++;
    try {
      const testKey =
      /* istanbul ignore next */
      (cov_2ig8kbvepn().s[185]++, 'health_check_test');
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[186]++;
      localStorage.setItem(testKey, 'test');
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[187]++;
      localStorage.removeItem(testKey);
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[188]++;
      return true;
    } catch (_a) {
      /* istanbul ignore next */
      cov_2ig8kbvepn().s[189]++;
      return false;
    }
  }
  delay(ms) {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[51]++;
    cov_2ig8kbvepn().s[190]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[52]++;
      cov_2ig8kbvepn().s[191]++;
      return setTimeout(resolve, ms);
    });
  }
  // Integration with existing systems
  integrateWithExistingSystems() {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[53]++;
    cov_2ig8kbvepn().s[192]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ig8kbvepn().f[54]++;
      cov_2ig8kbvepn().s[193]++;
      try {
        // Integrate with base health monitor
        const baseStatus =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[194]++, healthMonitor_1.healthMonitor.getStatus());
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[195]++;
        if (baseStatus) {
          /* istanbul ignore next */
          cov_2ig8kbvepn().b[41][0]++;
          cov_2ig8kbvepn().s[196]++;
          logger_1.logger.info('Integrated with base health monitor', baseStatus);
        } else
        /* istanbul ignore next */
        {
          cov_2ig8kbvepn().b[41][1]++;
        }
        // Integrate with performance monitor
        const performanceReport =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[197]++, performanceMonitor_1.performanceMonitor.getPerformanceReport());
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[198]++;
        logger_1.logger.info('Integrated with performance monitor', {
          metricsCount: Object.keys(performanceReport).length
        });
        // Integrate with system health service
        const systemHealth =
        /* istanbul ignore next */
        (cov_2ig8kbvepn().s[199]++, yield this.systemHealthService.performFullHealthCheck());
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[200]++;
        logger_1.logger.info('Integrated with system health service', {
          overall: systemHealth.overall,
          score: systemHealth.score
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2ig8kbvepn().s[201]++;
        logger_1.logger.error('Error integrating with existing systems', error);
      }
    });
  }
}
/* istanbul ignore next */
cov_2ig8kbvepn().s[202]++;
exports.EnhancedHealthMonitor = EnhancedHealthMonitor;
// Global enhanced health monitor instance
/* istanbul ignore next */
cov_2ig8kbvepn().s[203]++;
exports.enhancedHealthMonitor = new EnhancedHealthMonitor({
  maxRetries: 3,
  retryDelayMs: 1500,
  fallbackTimeout: 5000,
  offlineDetection: true,
  networkChangeDetection: true
});
// Auto-start in development and production
/* istanbul ignore next */
cov_2ig8kbvepn().s[204]++;
if (typeof window !== 'undefined') {
  /* istanbul ignore next */
  cov_2ig8kbvepn().b[42][0]++;
  cov_2ig8kbvepn().s[205]++;
  // Initialize integration with existing systems
  exports.enhancedHealthMonitor.integrateWithExistingSystems();
  // Start monitoring with appropriate interval
  const interval =
  /* istanbul ignore next */
  (cov_2ig8kbvepn().s[206]++, process.env.NODE_ENV === 'production' ?
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[43][0]++, 120000) :
  /* istanbul ignore next */
  (cov_2ig8kbvepn().b[43][1]++, 60000)); // 2min prod, 1min dev
  /* istanbul ignore next */
  cov_2ig8kbvepn().s[207]++;
  exports.enhancedHealthMonitor.startContinuousMonitoring(interval);
  // Cleanup on page unload
  /* istanbul ignore next */
  cov_2ig8kbvepn().s[208]++;
  window.addEventListener('beforeunload', () => {
    /* istanbul ignore next */
    cov_2ig8kbvepn().f[55]++;
    cov_2ig8kbvepn().s[209]++;
    exports.enhancedHealthMonitor.stopContinuousMonitoring();
  });
} else
/* istanbul ignore next */
{
  cov_2ig8kbvepn().b[42][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,