c78d4ea6ebe9d8a98b59d8ae6b134b56
"use strict";

/**
 * Mock Error Collection Service V6.4
 * Fallback para quando o servidor de coleta de erros não está disponível
 */
/* istanbul ignore next */
function cov_2989a41xcp() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/mockErrorCollection.ts";
  var hash = "9429caadb336c0d496ddb1066cad59e5f9fcb9e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/mockErrorCollection.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 110
        }
      },
      "2": {
        start: {
          line: 7,
          column: 91
        },
        end: {
          line: 7,
          column: 106
        }
      },
      "3": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "4": {
        start: {
          line: 9,
          column: 36
        },
        end: {
          line: 9,
          column: 97
        }
      },
      "5": {
        start: {
          line: 9,
          column: 42
        },
        end: {
          line: 9,
          column: 70
        }
      },
      "6": {
        start: {
          line: 9,
          column: 85
        },
        end: {
          line: 9,
          column: 95
        }
      },
      "7": {
        start: {
          line: 10,
          column: 35
        },
        end: {
          line: 10,
          column: 100
        }
      },
      "8": {
        start: {
          line: 10,
          column: 41
        },
        end: {
          line: 10,
          column: 73
        }
      },
      "9": {
        start: {
          line: 10,
          column: 88
        },
        end: {
          line: 10,
          column: 98
        }
      },
      "10": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 116
        }
      },
      "11": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "12": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "13": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 70
        }
      },
      "14": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "15": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "16": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "17": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "18": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "19": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "20": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "21": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "24": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 111
        }
      },
      "25": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 14
        }
      },
      "26": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "27": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "28": {
        start: {
          line: 57,
          column: 63
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "29": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 65,
          column: 14
        }
      },
      "30": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "31": {
        start: {
          line: 73,
          column: 33
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "32": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "33": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 27
        }
      },
      "34": {
        start: {
          line: 77,
          column: 33
        },
        end: {
          line: 77,
          column: 55
        }
      },
      "35": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "36": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "37": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "38": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "39": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 49
        }
      },
      "40": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 71
        }
      },
      "41": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 29
        }
      },
      "42": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 80
        }
      },
      "44": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "45": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "46": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 50
        }
      },
      "47": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "48": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "49": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 135,
          column: 18
        }
      },
      "50": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "51": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 28
        }
      },
      "52": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 63
        }
      },
      "53": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "54": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "55": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 120
        }
      },
      "56": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "57": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 100
        }
      },
      "58": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "59": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 75
        }
      },
      "60": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "61": {
        start: {
          line: 167,
          column: 33
        },
        end: {
          line: 172,
          column: 18
        }
      },
      "62": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "63": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 72
        }
      },
      "64": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 45
        }
      },
      "65": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 89
        }
      },
      "66": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 36
        }
      },
      "67": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 75
        }
      },
      "68": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "69": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "70": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 63
        }
      },
      "71": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "72": {
        start: {
          line: 194,
          column: 33
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "73": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "74": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 72
        }
      },
      "75": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 45
        }
      },
      "76": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 81
        }
      },
      "77": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 36
        }
      },
      "78": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "79": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 56
        }
      },
      "80": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 212,
          column: 38
        }
      },
      "81": {
        start: {
          line: 214,
          column: 0
        },
        end: {
          line: 214,
          column: 48
        }
      },
      "82": {
        start: {
          line: 215,
          column: 0
        },
        end: {
          line: 215,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 44
          },
          end: {
            line: 6,
            column: 45
          }
        },
        loc: {
          start: {
            line: 6,
            column: 89
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 18
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 7,
            column: 112
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 71
          }
        },
        loc: {
          start: {
            line: 7,
            column: 89
          },
          end: {
            line: 7,
            column: 108
          }
        },
        line: 7
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 8,
            column: 36
          },
          end: {
            line: 8,
            column: 37
          }
        },
        loc: {
          start: {
            line: 8,
            column: 63
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 8
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 9,
            column: 17
          },
          end: {
            line: 9,
            column: 26
          }
        },
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 99
          }
        },
        line: 9
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 10,
            column: 25
          }
        },
        loc: {
          start: {
            line: 10,
            column: 33
          },
          end: {
            line: 10,
            column: 102
          }
        },
        line: 10
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 11,
            column: 21
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 11,
            column: 118
          }
        },
        line: 11
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 18
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 28,
            column: 48
          }
        },
        loc: {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 28
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 55
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 48
          }
        },
        loc: {
          start: {
            line: 56,
            column: 60
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 56
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 57,
            column: 54
          },
          end: {
            line: 57,
            column: 55
          }
        },
        loc: {
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 59,
            column: 50
          }
        },
        line: 57
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 72,
            column: 47
          },
          end: {
            line: 72,
            column: 48
          }
        },
        loc: {
          start: {
            line: 72,
            column: 60
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 72
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 73,
            column: 52
          },
          end: {
            line: 73,
            column: 53
          }
        },
        loc: {
          start: {
            line: 73,
            column: 68
          },
          end: {
            line: 76,
            column: 13
          }
        },
        line: 73
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 96
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 111
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 122
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 35
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 129
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 130,
            column: 47
          },
          end: {
            line: 130,
            column: 48
          }
        },
        loc: {
          start: {
            line: 130,
            column: 60
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 130
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 35
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 154
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 155,
            column: 47
          },
          end: {
            line: 155,
            column: 48
          }
        },
        loc: {
          start: {
            line: 155,
            column: 60
          },
          end: {
            line: 183,
            column: 9
          }
        },
        line: 155
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 23
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 188
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 189,
            column: 47
          },
          end: {
            line: 189,
            column: 48
          }
        },
        loc: {
          start: {
            line: 189,
            column: 60
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 16
          },
          end: {
            line: 14,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 21
          }
        }, {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 39
          }
        }, {
          start: {
            line: 6,
            column: 44
          },
          end: {
            line: 14,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 35
          },
          end: {
            line: 7,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 56
          },
          end: {
            line: 7,
            column: 61
          }
        }, {
          start: {
            line: 7,
            column: 64
          },
          end: {
            line: 7,
            column: 109
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 17
          }
        }, {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 8,
            column: 33
          }
        }],
        line: 8
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 67
          }
        }, {
          start: {
            line: 11,
            column: 70
          },
          end: {
            line: 11,
            column: 115
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 51
          },
          end: {
            line: 12,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 51
          },
          end: {
            line: 12,
            column: 61
          }
        }, {
          start: {
            line: 12,
            column: 65
          },
          end: {
            line: 12,
            column: 67
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 31,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 31,
            column: 36
          }
        }, {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 49
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 42
          }
        }, {
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 32,
            column: 58
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 34
          }
        }, {
          start: {
            line: 34,
            column: 38
          },
          end: {
            line: 34,
            column: 58
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 46
          }
        }, {
          start: {
            line: 35,
            column: 50
          },
          end: {
            line: 35,
            column: 69
          }
        }],
        line: 35
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 59,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 57,
            column: 109
          }
        }, {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 59
          }
        }, {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 50
          }
        }],
        line: 57
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 35
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 35
          },
          end: {
            line: 74,
            column: 50
          }
        }, {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 74,
            column: 55
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "15": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "18": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/services/mockErrorCollection.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/mockErrorCollection.ts"],
      sourcesContent: ["/**\n * Mock Error Collection Service V6.4\n * Fallback para quando o servidor de coleta de erros n\xE3o est\xE1 dispon\xEDvel\n */\n\ninterface MockErrorData {\n  id: string;\n  type: string;\n  message: string;\n  stack?: string;\n  url?: string;\n  userAgent?: string;\n  timestamp: string;\n  sessionId?: string;\n}\n\ninterface MockErrorStats {\n  totalErrors: number;\n  criticalErrors: number;\n  lastUpdate: string;\n  status: 'active' | 'offline';\n}\n\nclass MockErrorCollectionService {\n  private errors: MockErrorData[] = [];\n  private readonly STORAGE_KEY = 'mock_error_collection';\n  private readonly MAX_ERRORS = 100;\n\n  constructor() {\n    this.loadFromStorage();\n  }\n\n  /**\n   * Simular endpoint POST /api/errors\n   */\n  async collectError(errorData: Partial<MockErrorData>): Promise<{ success: boolean; errorId: string }> {\n    const mockError: MockErrorData = {\n      id: `mock-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type: errorData.type || 'unknown',\n      message: errorData.message || 'No message',\n      stack: errorData.stack,\n      url: errorData.url || window.location.href,\n      userAgent: errorData.userAgent || navigator.userAgent,\n      timestamp: new Date().toISOString(),\n      sessionId: errorData.sessionId\n    };\n\n    this.errors.push(mockError);\n\n    // Manter apenas os \xFAltimos erros\n    if (this.errors.length > this.MAX_ERRORS) {\n      this.errors = this.errors.slice(-this.MAX_ERRORS);\n    }\n\n    this.saveToStorage();\n\n    console.log('\uD83D\uDCCA [MOCK] Error collected:', mockError.type, '-', mockError.message.substring(0, 50));\n\n    return {\n      success: true,\n      errorId: mockError.id\n    };\n  }\n\n  /**\n   * Simular endpoint GET /api/errors/status\n   */\n  async getStatus(): Promise<MockErrorStats> {\n    const criticalErrors = this.errors.filter(error => \n      error.message.includes('Cannot read property') ||\n      error.message.includes('is not a function') ||\n      error.message.includes('Uncaught')\n    ).length;\n\n    return {\n      totalErrors: this.errors.length,\n      criticalErrors,\n      lastUpdate: new Date().toISOString(),\n      status: 'active'\n    };\n  }\n\n  /**\n   * Simular endpoint GET /api/errors/analysis\n   */\n  async getAnalysis(): Promise<any> {\n    const errorsByType = this.errors.reduce((acc, error) => {\n      acc[error.type] = (acc[error.type] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const recentErrors = this.errors.slice(-10);\n\n    return {\n      timestamp: new Date().toISOString(),\n      totalErrors: this.errors.length,\n      errorsByType,\n      recentErrors,\n      insights: [\n        {\n          type: 'mock-service',\n          message: 'Usando servi\xE7o mock - servidor principal indispon\xEDvel',\n          severity: 'info'\n        }\n      ]\n    };\n  }\n\n  /**\n   * Carregar erros do localStorage\n   */\n  private loadFromStorage(): void {\n    try {\n      const stored = localStorage.getItem(this.STORAGE_KEY);\n      if (stored) {\n        this.errors = JSON.parse(stored);\n      }\n    } catch (error) {\n      console.warn('Falha ao carregar erros do storage:', error);\n      this.errors = [];\n    }\n  }\n\n  /**\n   * Salvar erros no localStorage\n   */\n  private saveToStorage(): void {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.errors));\n    } catch (error) {\n      console.warn('Falha ao salvar erros no storage:', error);\n    }\n  }\n\n  /**\n   * Limpar todos os erros\n   */\n  clearErrors(): void {\n    this.errors = [];\n    localStorage.removeItem(this.STORAGE_KEY);\n  }\n\n  /**\n   * Verificar se deve usar mock (servidor indispon\xEDvel)\n   */\n  static async shouldUseMock(endpoint: string): Promise<boolean> {\n    try {\n      const response = await fetch(`${endpoint}/health`, {\n        method: 'GET',\n        signal: AbortSignal.timeout(2000) // 2 segundos timeout\n      });\n      return !response.ok;\n    } catch (error) {\n      return true; // Servidor indispon\xEDvel\n    }\n  }\n}\n\n// Singleton export\nexport const mockErrorCollection = new MockErrorCollectionService();\n\n/**\n * Error Collection Adapter V6.4\n * Auto-detecta se deve usar servidor real ou mock\n */\nexport class ErrorCollectionAdapter {\n  private static useMock: boolean | null = null;\n  // \u2705 REALISTIC: Use relative endpoint or disable if no backend\n  private static endpoint = '/api/errors'; // Will gracefully fail instead of connection refused\n\n  /**\n   * Coletar erro (com fallback autom\xE1tico)\n   */\n  static async collectError(errorData: any): Promise<any> {\n    // Verificar se deve usar mock (apenas uma vez por sess\xE3o)\n    if (this.useMock === null) {\n      this.useMock = await MockErrorCollectionService.shouldUseMock(this.endpoint.replace('/api/errors', ''));\n      \n      if (this.useMock) {\n        console.log('\uD83D\uDD04 [ERROR COLLECTION] Servidor indispon\xEDvel, usando mock service');\n      }\n    }\n\n    if (this.useMock) {\n      return mockErrorCollection.collectError(errorData);\n    }\n\n    try {\n      const response = await fetch(this.endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(errorData),\n        signal: AbortSignal.timeout(5000)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.warn('\uD83D\uDD04 [ERROR COLLECTION] Fallback para mock service:', error);\n      this.useMock = true;\n      return mockErrorCollection.collectError(errorData);\n    }\n  }\n\n  /**\n   * Obter status (com fallback autom\xE1tico)\n   */\n  static async getStatus(): Promise<any> {\n    if (this.useMock === true) {\n      return mockErrorCollection.getStatus();\n    }\n\n    try {\n      const response = await fetch(`${this.endpoint}/status`, {\n        method: 'GET',\n        signal: AbortSignal.timeout(3000)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.warn('\uD83D\uDD04 [ERROR COLLECTION] Fallback para mock service');\n      this.useMock = true;\n      return mockErrorCollection.getStatus();\n    }\n  }\n}\n\nexport default ErrorCollectionAdapter; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9429caadb336c0d496ddb1066cad59e5f9fcb9e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2989a41xcp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2989a41xcp();
var __awaiter =
/* istanbul ignore next */
(cov_2989a41xcp().s[0]++,
/* istanbul ignore next */
(cov_2989a41xcp().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2989a41xcp().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2989a41xcp().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2989a41xcp().f[0]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2989a41xcp().f[1]++;
    cov_2989a41xcp().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2989a41xcp().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_2989a41xcp().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2989a41xcp().f[2]++;
      cov_2989a41xcp().s[2]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2989a41xcp().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_2989a41xcp().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_2989a41xcp().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2989a41xcp().f[3]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2989a41xcp().f[4]++;
      cov_2989a41xcp().s[4]++;
      try {
        /* istanbul ignore next */
        cov_2989a41xcp().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2989a41xcp().s[6]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2989a41xcp().f[5]++;
      cov_2989a41xcp().s[7]++;
      try {
        /* istanbul ignore next */
        cov_2989a41xcp().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2989a41xcp().s[9]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2989a41xcp().f[6]++;
      cov_2989a41xcp().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2989a41xcp().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2989a41xcp().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2989a41xcp().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2989a41xcp().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2989a41xcp().b[4][1]++, []))).next());
  });
}));
/* istanbul ignore next */
cov_2989a41xcp().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2989a41xcp().s[13]++;
exports.ErrorCollectionAdapter = exports.mockErrorCollection = void 0;
class MockErrorCollectionService {
  constructor() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[7]++;
    cov_2989a41xcp().s[14]++;
    this.errors = [];
    /* istanbul ignore next */
    cov_2989a41xcp().s[15]++;
    this.STORAGE_KEY = 'mock_error_collection';
    /* istanbul ignore next */
    cov_2989a41xcp().s[16]++;
    this.MAX_ERRORS = 100;
    /* istanbul ignore next */
    cov_2989a41xcp().s[17]++;
    this.loadFromStorage();
  }
  /**
   * Simular endpoint POST /api/errors
   */
  collectError(errorData) {
    /* istanbul ignore next */
    cov_2989a41xcp().f[8]++;
    cov_2989a41xcp().s[18]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[9]++;
      const mockError =
      /* istanbul ignore next */
      (cov_2989a41xcp().s[19]++, {
        id: `mock-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
        type:
        /* istanbul ignore next */
        (cov_2989a41xcp().b[5][0]++, errorData.type) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[5][1]++, 'unknown'),
        message:
        /* istanbul ignore next */
        (cov_2989a41xcp().b[6][0]++, errorData.message) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[6][1]++, 'No message'),
        stack: errorData.stack,
        url:
        /* istanbul ignore next */
        (cov_2989a41xcp().b[7][0]++, errorData.url) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[7][1]++, window.location.href),
        userAgent:
        /* istanbul ignore next */
        (cov_2989a41xcp().b[8][0]++, errorData.userAgent) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[8][1]++, navigator.userAgent),
        timestamp: new Date().toISOString(),
        sessionId: errorData.sessionId
      });
      /* istanbul ignore next */
      cov_2989a41xcp().s[20]++;
      this.errors.push(mockError);
      // Manter apenas os últimos erros
      /* istanbul ignore next */
      cov_2989a41xcp().s[21]++;
      if (this.errors.length > this.MAX_ERRORS) {
        /* istanbul ignore next */
        cov_2989a41xcp().b[9][0]++;
        cov_2989a41xcp().s[22]++;
        this.errors = this.errors.slice(-this.MAX_ERRORS);
      } else
      /* istanbul ignore next */
      {
        cov_2989a41xcp().b[9][1]++;
      }
      cov_2989a41xcp().s[23]++;
      this.saveToStorage();
      /* istanbul ignore next */
      cov_2989a41xcp().s[24]++;
      console.log('📊 [MOCK] Error collected:', mockError.type, '-', mockError.message.substring(0, 50));
      /* istanbul ignore next */
      cov_2989a41xcp().s[25]++;
      return {
        success: true,
        errorId: mockError.id
      };
    });
  }
  /**
   * Simular endpoint GET /api/errors/status
   */
  getStatus() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[10]++;
    cov_2989a41xcp().s[26]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[11]++;
      const criticalErrors =
      /* istanbul ignore next */
      (cov_2989a41xcp().s[27]++, this.errors.filter(error => {
        /* istanbul ignore next */
        cov_2989a41xcp().f[12]++;
        cov_2989a41xcp().s[28]++;
        return /* istanbul ignore next */(cov_2989a41xcp().b[10][0]++, error.message.includes('Cannot read property')) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[10][1]++, error.message.includes('is not a function')) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[10][2]++, error.message.includes('Uncaught'));
      }).length);
      /* istanbul ignore next */
      cov_2989a41xcp().s[29]++;
      return {
        totalErrors: this.errors.length,
        criticalErrors,
        lastUpdate: new Date().toISOString(),
        status: 'active'
      };
    });
  }
  /**
   * Simular endpoint GET /api/errors/analysis
   */
  getAnalysis() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[13]++;
    cov_2989a41xcp().s[30]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[14]++;
      const errorsByType =
      /* istanbul ignore next */
      (cov_2989a41xcp().s[31]++, this.errors.reduce((acc, error) => {
        /* istanbul ignore next */
        cov_2989a41xcp().f[15]++;
        cov_2989a41xcp().s[32]++;
        acc[error.type] = (
        /* istanbul ignore next */
        (cov_2989a41xcp().b[11][0]++, acc[error.type]) ||
        /* istanbul ignore next */
        (cov_2989a41xcp().b[11][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_2989a41xcp().s[33]++;
        return acc;
      }, {}));
      const recentErrors =
      /* istanbul ignore next */
      (cov_2989a41xcp().s[34]++, this.errors.slice(-10));
      /* istanbul ignore next */
      cov_2989a41xcp().s[35]++;
      return {
        timestamp: new Date().toISOString(),
        totalErrors: this.errors.length,
        errorsByType,
        recentErrors,
        insights: [{
          type: 'mock-service',
          message: 'Usando serviço mock - servidor principal indisponível',
          severity: 'info'
        }]
      };
    });
  }
  /**
   * Carregar erros do localStorage
   */
  loadFromStorage() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[16]++;
    cov_2989a41xcp().s[36]++;
    try {
      const stored =
      /* istanbul ignore next */
      (cov_2989a41xcp().s[37]++, localStorage.getItem(this.STORAGE_KEY));
      /* istanbul ignore next */
      cov_2989a41xcp().s[38]++;
      if (stored) {
        /* istanbul ignore next */
        cov_2989a41xcp().b[12][0]++;
        cov_2989a41xcp().s[39]++;
        this.errors = JSON.parse(stored);
      } else
      /* istanbul ignore next */
      {
        cov_2989a41xcp().b[12][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2989a41xcp().s[40]++;
      console.warn('Falha ao carregar erros do storage:', error);
      /* istanbul ignore next */
      cov_2989a41xcp().s[41]++;
      this.errors = [];
    }
  }
  /**
   * Salvar erros no localStorage
   */
  saveToStorage() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[17]++;
    cov_2989a41xcp().s[42]++;
    try {
      /* istanbul ignore next */
      cov_2989a41xcp().s[43]++;
      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.errors));
    } catch (error) {
      /* istanbul ignore next */
      cov_2989a41xcp().s[44]++;
      console.warn('Falha ao salvar erros no storage:', error);
    }
  }
  /**
   * Limpar todos os erros
   */
  clearErrors() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[18]++;
    cov_2989a41xcp().s[45]++;
    this.errors = [];
    /* istanbul ignore next */
    cov_2989a41xcp().s[46]++;
    localStorage.removeItem(this.STORAGE_KEY);
  }
  /**
   * Verificar se deve usar mock (servidor indisponível)
   */
  static shouldUseMock(endpoint) {
    /* istanbul ignore next */
    cov_2989a41xcp().f[19]++;
    cov_2989a41xcp().s[47]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[20]++;
      cov_2989a41xcp().s[48]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2989a41xcp().s[49]++, yield fetch(`${endpoint}/health`, {
          method: 'GET',
          signal: AbortSignal.timeout(2000) // 2 segundos timeout
        }));
        /* istanbul ignore next */
        cov_2989a41xcp().s[50]++;
        return !response.ok;
      } catch (error) {
        /* istanbul ignore next */
        cov_2989a41xcp().s[51]++;
        return true; // Servidor indisponível
      }
    });
  }
}
// Singleton export
/* istanbul ignore next */
cov_2989a41xcp().s[52]++;
exports.mockErrorCollection = new MockErrorCollectionService();
/**
 * Error Collection Adapter V6.4
 * Auto-detecta se deve usar servidor real ou mock
 */
class ErrorCollectionAdapter {
  /**
   * Coletar erro (com fallback automático)
   */
  static collectError(errorData) {
    /* istanbul ignore next */
    cov_2989a41xcp().f[21]++;
    cov_2989a41xcp().s[53]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[22]++;
      cov_2989a41xcp().s[54]++;
      // Verificar se deve usar mock (apenas uma vez por sessão)
      if (this.useMock === null) {
        /* istanbul ignore next */
        cov_2989a41xcp().b[13][0]++;
        cov_2989a41xcp().s[55]++;
        this.useMock = yield MockErrorCollectionService.shouldUseMock(this.endpoint.replace('/api/errors', ''));
        /* istanbul ignore next */
        cov_2989a41xcp().s[56]++;
        if (this.useMock) {
          /* istanbul ignore next */
          cov_2989a41xcp().b[14][0]++;
          cov_2989a41xcp().s[57]++;
          console.log('🔄 [ERROR COLLECTION] Servidor indisponível, usando mock service');
        } else
        /* istanbul ignore next */
        {
          cov_2989a41xcp().b[14][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2989a41xcp().b[13][1]++;
      }
      cov_2989a41xcp().s[58]++;
      if (this.useMock) {
        /* istanbul ignore next */
        cov_2989a41xcp().b[15][0]++;
        cov_2989a41xcp().s[59]++;
        return exports.mockErrorCollection.collectError(errorData);
      } else
      /* istanbul ignore next */
      {
        cov_2989a41xcp().b[15][1]++;
      }
      cov_2989a41xcp().s[60]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2989a41xcp().s[61]++, yield fetch(this.endpoint, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(errorData),
          signal: AbortSignal.timeout(5000)
        }));
        /* istanbul ignore next */
        cov_2989a41xcp().s[62]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_2989a41xcp().b[16][0]++;
          cov_2989a41xcp().s[63]++;
          throw new Error(`Server error: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_2989a41xcp().b[16][1]++;
        }
        cov_2989a41xcp().s[64]++;
        return yield response.json();
      } catch (error) {
        /* istanbul ignore next */
        cov_2989a41xcp().s[65]++;
        console.warn('🔄 [ERROR COLLECTION] Fallback para mock service:', error);
        /* istanbul ignore next */
        cov_2989a41xcp().s[66]++;
        this.useMock = true;
        /* istanbul ignore next */
        cov_2989a41xcp().s[67]++;
        return exports.mockErrorCollection.collectError(errorData);
      }
    });
  }
  /**
   * Obter status (com fallback automático)
   */
  static getStatus() {
    /* istanbul ignore next */
    cov_2989a41xcp().f[23]++;
    cov_2989a41xcp().s[68]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2989a41xcp().f[24]++;
      cov_2989a41xcp().s[69]++;
      if (this.useMock === true) {
        /* istanbul ignore next */
        cov_2989a41xcp().b[17][0]++;
        cov_2989a41xcp().s[70]++;
        return exports.mockErrorCollection.getStatus();
      } else
      /* istanbul ignore next */
      {
        cov_2989a41xcp().b[17][1]++;
      }
      cov_2989a41xcp().s[71]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2989a41xcp().s[72]++, yield fetch(`${this.endpoint}/status`, {
          method: 'GET',
          signal: AbortSignal.timeout(3000)
        }));
        /* istanbul ignore next */
        cov_2989a41xcp().s[73]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_2989a41xcp().b[18][0]++;
          cov_2989a41xcp().s[74]++;
          throw new Error(`Server error: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_2989a41xcp().b[18][1]++;
        }
        cov_2989a41xcp().s[75]++;
        return yield response.json();
      } catch (error) {
        /* istanbul ignore next */
        cov_2989a41xcp().s[76]++;
        console.warn('🔄 [ERROR COLLECTION] Fallback para mock service');
        /* istanbul ignore next */
        cov_2989a41xcp().s[77]++;
        this.useMock = true;
        /* istanbul ignore next */
        cov_2989a41xcp().s[78]++;
        return exports.mockErrorCollection.getStatus();
      }
    });
  }
}
/* istanbul ignore next */
cov_2989a41xcp().s[79]++;
exports.ErrorCollectionAdapter = ErrorCollectionAdapter;
/* istanbul ignore next */
cov_2989a41xcp().s[80]++;
ErrorCollectionAdapter.useMock = null;
// ✅ REALISTIC: Use relative endpoint or disable if no backend
/* istanbul ignore next */
cov_2989a41xcp().s[81]++;
ErrorCollectionAdapter.endpoint = '/api/errors'; // Will gracefully fail instead of connection refused
/* istanbul ignore next */
cov_2989a41xcp().s[82]++;
exports.default = ErrorCollectionAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,