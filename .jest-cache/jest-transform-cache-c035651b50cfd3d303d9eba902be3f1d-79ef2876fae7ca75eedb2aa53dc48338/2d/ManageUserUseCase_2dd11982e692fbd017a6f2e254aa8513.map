{"version":3,"names":["cov_1uwn6v5hhv","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","ManageUserUseCase","constructor","userRepository","analyticsService","notificationService","logger","createUser","input","requestId","generateRequestId","timestamp","Date","toISOString","validation","validateUserInput","isValid","warn","email","errors","success","error","code","message","details","metadata","existingUser","findByEmail","userData","uid","displayName","photoURL","savedUser","create","initializeUserAnalytics","id","sendWelcomeEmail","userId","trackEvent","plan","registrationMethod","hasPhotoURL","response","isVerified","emailVerified","subscription","createdAt","lastLoginAt","info","data","updateUserPreferences","findById","updatedUser","update","changedFields","Object","keys","preferences","aiSuggestionsEnabled","getUserById","user","updateLastAccess","debug","warnings","push","field","isValidEmail","length","isValidURL","hasInappropriateContent","emailRegex","test","url","URL","_a","text","inappropriateWords","lowerText","toLowerCase","some","word","includes","now","Math","random","toString","substr","exports"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/application/usecases/ManageUserUseCase.ts"],"sourcesContent":["// ManageUserUseCase - Clean Architecture V6.4\n// Use Case para gerenciamento de usuários e autenticação\n\nimport { \n  CreateUserDTO, \n  UpdateUserPreferencesDTO,\n  UserResponseDTO, \n  ValidationResult, \n  ApiResponse \n} from '../dto';\n\nimport {\n  IUserRepository,\n  IAnalyticsService,\n  INotificationService,\n  ILogger,\n  UserEntity\n} from '../interfaces';\n\n// Interface para o Use Case\nexport interface IManageUserUseCase {\n  createUser(input: CreateUserDTO): Promise<ApiResponse<UserResponseDTO>>;\n  updateUserPreferences(input: UpdateUserPreferencesDTO): Promise<ApiResponse<UserResponseDTO>>;\n  getUserById(userId: string): Promise<ApiResponse<UserResponseDTO>>;\n  validateUserInput(input: CreateUserDTO): ValidationResult;\n}\n\n// Implementação do Use Case\nexport class ManageUserUseCase implements IManageUserUseCase {\n  constructor(\n    private readonly userRepository: IUserRepository,\n    private readonly analyticsService: IAnalyticsService,\n    private readonly notificationService: INotificationService,\n    private readonly logger: ILogger\n  ) {}\n\n  async createUser(input: CreateUserDTO): Promise<ApiResponse<UserResponseDTO>> {\n    const requestId = this.generateRequestId();\n    const timestamp = new Date().toISOString();\n\n    try {\n      // 1. Validate input\n      const validation = this.validateUserInput(input);\n      if (!validation.isValid) {\n        this.logger.warn('User input validation failed', { email: input.email, errors: validation.errors });\n        return {\n          success: false,\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: 'User input validation failed',\n            details: validation.errors\n          },\n          metadata: { timestamp, version: '6.4', requestId }\n        };\n      }\n\n      // 2. Check if user already exists\n      const existingUser = await this.userRepository.findByEmail(input.email);\n      if (existingUser) {\n        this.logger.warn('User creation attempted for existing email', { email: input.email });\n        return {\n          success: false,\n          error: {\n            code: 'USER_EXISTS',\n            message: 'User with this email already exists',\n            details: { email: input.email }\n          },\n          metadata: { timestamp, version: '6.4', requestId }\n        };\n      }\n\n      // 3. Create user entity data\n      const userData: CreateUserDTO = {\n        uid: input.uid,\n        email: input.email,\n        displayName: input.displayName,\n        photoURL: input.photoURL\n      };\n\n      // 4. Save user to repository\n      const savedUser = await this.userRepository.create(userData);\n\n      // 5. Initialize user analytics\n      await this.analyticsService.initializeUserAnalytics(savedUser.id);\n\n      // 6. Send welcome notification\n      await this.notificationService.sendWelcomeEmail({\n        email: input.email,\n        displayName: input.displayName,\n        userId: savedUser.id\n      });\n\n      // 7. Track user creation event\n      await this.analyticsService.trackEvent({\n        type: 'user_created',\n        userId: savedUser.id,\n        metadata: {\n          plan: 'free',\n          registrationMethod: 'firebase',\n          hasPhotoURL: !!input.photoURL\n        },\n        timestamp: new Date()\n      });\n\n      // 8. Return response\n      const response: UserResponseDTO = {\n        id: savedUser.id,\n        email: savedUser.email,\n        displayName: savedUser.displayName,\n        photoURL: savedUser.photoURL,\n        isVerified: savedUser.emailVerified,\n        plan: savedUser.subscription,\n        createdAt: savedUser.createdAt.toISOString(),\n        lastLoginAt: savedUser.lastLoginAt.toISOString()\n      };\n\n      this.logger.info('User created successfully', {\n        userId: savedUser.id,\n        email: savedUser.email,\n        displayName: savedUser.displayName\n      });\n\n      return {\n        success: true,\n        data: response,\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n\n    } catch (error) {\n      this.logger.error('ManageUserUseCase createUser failed', error as Error, {\n        email: input.email,\n        requestId\n      });\n      \n      return {\n        success: false,\n        error: {\n          code: 'USER_CREATION_ERROR',\n          message: 'Failed to create user',\n          details: (error as Error).message\n        },\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n    }\n  }\n\n  async updateUserPreferences(input: UpdateUserPreferencesDTO): Promise<ApiResponse<UserResponseDTO>> {\n    const requestId = this.generateRequestId();\n    const timestamp = new Date().toISOString();\n\n    try {\n      // 1. Get existing user\n      const existingUser = await this.userRepository.findById(input.userId);\n      if (!existingUser) {\n        this.logger.warn('User preferences update attempted for non-existing user', { userId: input.userId });\n        return {\n          success: false,\n          error: {\n            code: 'USER_NOT_FOUND',\n            message: 'User not found',\n            details: { userId: input.userId }\n          },\n          metadata: { timestamp, version: '6.4', requestId }\n        };\n      }\n\n      // 2. Update preferences\n      const updatedUser = await this.userRepository.update(input.userId, input);\n\n      // 3. Track preferences update\n      await this.analyticsService.trackEvent({\n        type: 'user_preferences_updated',\n        userId: input.userId,\n        metadata: {\n          changedFields: Object.keys(input.preferences),\n          aiSuggestionsEnabled: input.preferences.aiSuggestionsEnabled\n        },\n        timestamp: new Date()\n      });\n\n      // 4. Return response\n      const response: UserResponseDTO = {\n        id: updatedUser.id,\n        email: updatedUser.email,\n        displayName: updatedUser.displayName,\n        photoURL: updatedUser.photoURL,\n        isVerified: updatedUser.emailVerified,\n        plan: updatedUser.subscription,\n        createdAt: updatedUser.createdAt.toISOString(),\n        lastLoginAt: updatedUser.lastLoginAt.toISOString()\n      };\n\n      this.logger.info('User preferences updated successfully', {\n        userId: input.userId,\n        changedFields: Object.keys(input.preferences)\n      });\n\n      return {\n        success: true,\n        data: response,\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n\n    } catch (error) {\n      this.logger.error('ManageUserUseCase updateUserPreferences failed', error as Error, {\n        userId: input.userId,\n        requestId\n      });\n      \n      return {\n        success: false,\n        error: {\n          code: 'PREFERENCES_UPDATE_ERROR',\n          message: 'Failed to update user preferences',\n          details: (error as Error).message\n        },\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n    }\n  }\n\n  async getUserById(userId: string): Promise<ApiResponse<UserResponseDTO>> {\n    const requestId = this.generateRequestId();\n    const timestamp = new Date().toISOString();\n\n    try {\n      // 1. Validate userId\n      if (!userId) {\n        this.logger.warn('Get user attempted with empty userId');\n        return {\n          success: false,\n          error: {\n            code: 'INVALID_USER_ID',\n            message: 'User ID is required',\n            details: { userId }\n          },\n          metadata: { timestamp, version: '6.4', requestId }\n        };\n      }\n\n      // 2. Get user from repository\n      const user = await this.userRepository.findById(userId);\n      if (!user) {\n        this.logger.warn('User not found', { userId });\n        return {\n          success: false,\n          error: {\n            code: 'USER_NOT_FOUND',\n            message: 'User not found',\n            details: { userId }\n          },\n          metadata: { timestamp, version: '6.4', requestId }\n        };\n      }\n\n      // 3. Update last access time\n      await this.userRepository.updateLastAccess(userId);\n\n      // 4. Return response\n      const response: UserResponseDTO = {\n        id: user.id,\n        email: user.email,\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n        isVerified: user.emailVerified,\n        plan: user.subscription,\n        createdAt: user.createdAt.toISOString(),\n        lastLoginAt: user.lastLoginAt.toISOString()\n      };\n\n      this.logger.debug('User fetched successfully', { userId, email: user.email });\n\n      return {\n        success: true,\n        data: response,\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n\n    } catch (error) {\n      this.logger.error('ManageUserUseCase getUserById failed', error as Error, {\n        userId,\n        requestId\n      });\n      \n      return {\n        success: false,\n        error: {\n          code: 'USER_FETCH_ERROR',\n          message: 'Failed to fetch user',\n          details: (error as Error).message\n        },\n        metadata: { timestamp, version: '6.4', requestId }\n      };\n    }\n  }\n\n  validateUserInput(input: CreateUserDTO): ValidationResult {\n    const errors: Array<{ field: string; message: string; code: string }> = [];\n    const warnings: Array<{ field: string; message: string; code: string }> = [];\n\n    // Required fields validation\n    if (!input.uid) {\n      errors.push({ field: 'uid', message: 'User UID is required', code: 'REQUIRED' });\n    }\n\n    if (!input.email) {\n      errors.push({ field: 'email', message: 'Email is required', code: 'REQUIRED' });\n    } else if (!this.isValidEmail(input.email)) {\n      errors.push({ field: 'email', message: 'Invalid email format', code: 'INVALID_FORMAT' });\n    }\n\n    if (!input.displayName) {\n      errors.push({ field: 'displayName', message: 'Display name is required', code: 'REQUIRED' });\n    } else if (input.displayName.length < 2) {\n      errors.push({ field: 'displayName', message: 'Display name must be at least 2 characters', code: 'MIN_LENGTH' });\n    } else if (input.displayName.length > 50) {\n      errors.push({ field: 'displayName', message: 'Display name must be less than 50 characters', code: 'MAX_LENGTH' });\n    }\n\n    // Photo URL validation\n    if (input.photoURL && !this.isValidURL(input.photoURL)) {\n      warnings.push({ \n        field: 'photoURL', \n        message: 'Photo URL format may be invalid', \n        code: 'INVALID_URL' \n      });\n    }\n\n    // Display name content validation\n    if (input.displayName && this.hasInappropriateContent(input.displayName)) {\n      errors.push({ \n        field: 'displayName', \n        message: 'Display name contains inappropriate content', \n        code: 'INAPPROPRIATE_CONTENT' \n      });\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  private isValidURL(url: string): boolean {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private hasInappropriateContent(text: string): boolean {\n    // Basic inappropriate content detection\n    const inappropriateWords = ['spam', 'test123', 'admin', 'root'];\n    const lowerText = text.toLowerCase();\n    return inappropriateWords.some(word => lowerText.includes(word));\n  }\n\n  private generateRequestId(): string {\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n} "],"mappings":"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","ignoreList":[]}