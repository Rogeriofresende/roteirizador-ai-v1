{"version":3,"names":["cov_1vfg75lmc0","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","ServiceLifecycleState","exports"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/interfaces/IBaseService.ts"],"sourcesContent":["/**\n * Base Service Interface\n * Contract base para todos os servi√ßos do sistema\n */\n\nexport interface ServiceHealthStatus {\n  status: 'healthy' | 'degraded' | 'offline';\n  lastCheck: Date;\n  details?: Record<string, any>;\n  error?: string;\n}\n\nexport interface ServiceMetrics {\n  initTime?: number;\n  lastActivity?: Date;\n  operationCount?: number;\n  errorCount?: number;\n  [key: string]: any;\n}\n\nexport interface IBaseService {\n  // Lifecycle methods\n  initialize(): Promise<void> | void;\n  dispose(): Promise<void> | void;\n  \n  // Health monitoring\n  getHealth(): Promise<ServiceHealthStatus> | ServiceHealthStatus;\n  getMetrics(): ServiceMetrics;\n  \n  // Service identification\n  getServiceName(): string;\n  getVersion(): string;\n}\n\n/**\n * Service configuration interface\n */\nexport interface ServiceConfig {\n  enabled: boolean;\n  environment: 'development' | 'test' | 'production';\n  retryPolicy?: {\n    maxRetries: number;\n    backoffMs: number;\n  };\n  timeout?: number;\n  [key: string]: any;\n}\n\n/**\n * Service lifecycle states\n */\nexport enum ServiceLifecycleState {\n  UNINITIALIZED = 'uninitialized',\n  INITIALIZING = 'initializing', \n  READY = 'ready',\n  DEGRADED = 'degraded',\n  OFFLINE = 'offline',\n  DISPOSING = 'disposing',\n  DISPOSED = 'disposed'\n} "],"mappings":"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","ignoreList":[]}