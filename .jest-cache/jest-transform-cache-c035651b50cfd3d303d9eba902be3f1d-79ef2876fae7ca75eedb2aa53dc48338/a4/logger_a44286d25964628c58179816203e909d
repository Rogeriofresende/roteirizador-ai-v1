4ab6bda23d3f7b058ebcc724cb019a8d
"use strict";

/* istanbul ignore next */
function cov_vo9wjkagg() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/utils/logger.ts";
  var hash = "531fd47cbcbd3633c7f666d55ff179ac4fe19554";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/utils/logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 121
        }
      },
      "2": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 79
        }
      },
      "7": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 70
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "12": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "13": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "14": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "15": {
        start: {
          line: 43,
          column: 31
        },
        end: {
          line: 43,
          column: 90
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 84
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "20": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "21": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "22": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 32
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "26": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "27": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "30": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 71
        }
      },
      "31": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "32": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "33": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 70,
          column: 75
        }
      },
      "34": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "35": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "36": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 71
        }
      },
      "37": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "38": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "39": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 79,
          column: 76
        }
      },
      "40": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 32
        }
      },
      "41": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "42": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 73
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 80
        }
      },
      "44": {
        start: {
          line: 87,
          column: 47
        },
        end: {
          line: 87,
          column: 66
        }
      },
      "45": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 23
        }
      },
      "46": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "47": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "48": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 23
        }
      },
      "49": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "50": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 64
        }
      },
      "51": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 82
        }
      },
      "52": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 61
        }
      },
      "53": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 53
        }
      },
      "54": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "55": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "56": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 91
        }
      },
      "57": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "58": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 53
        }
      },
      "59": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "60": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 52
        }
      },
      "61": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "62": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 52
        }
      },
      "63": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 22
        }
      },
      "64": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 53
        }
      },
      "65": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 22
        }
      },
      "66": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 30
        }
      },
      "67": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 91
        }
      },
      "68": {
        start: {
          line: 147,
          column: 46
        },
        end: {
          line: 147,
          column: 91
        }
      },
      "69": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "70": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 91
        }
      },
      "71": {
        start: {
          line: 149,
          column: 46
        },
        end: {
          line: 149,
          column: 91
        }
      },
      "72": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 150,
          column: 26
        }
      },
      "73": {
        start: {
          line: 151,
          column: 17
        },
        end: {
          line: 151,
          column: 93
        }
      },
      "74": {
        start: {
          line: 151,
          column: 47
        },
        end: {
          line: 151,
          column: 93
        }
      },
      "75": {
        start: {
          line: 152,
          column: 0
        },
        end: {
          line: 152,
          column: 28
        }
      },
      "76": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 153,
          column: 93
        }
      },
      "77": {
        start: {
          line: 153,
          column: 47
        },
        end: {
          line: 153,
          column: 93
        }
      },
      "78": {
        start: {
          line: 154,
          column: 0
        },
        end: {
          line: 154,
          column: 28
        }
      },
      "79": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 162,
          column: 2
        }
      },
      "80": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 162,
          column: 1
        }
      },
      "81": {
        start: {
          line: 157,
          column: 33
        },
        end: {
          line: 157,
          column: 79
        }
      },
      "82": {
        start: {
          line: 158,
          column: 32
        },
        end: {
          line: 158,
          column: 77
        }
      },
      "83": {
        start: {
          line: 159,
          column: 32
        },
        end: {
          line: 159,
          column: 77
        }
      },
      "84": {
        start: {
          line: 160,
          column: 33
        },
        end: {
          line: 160,
          column: 79
        }
      },
      "85": {
        start: {
          line: 161,
          column: 38
        },
        end: {
          line: 161,
          column: 89
        }
      },
      "86": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 163,
          column: 36
        }
      },
      "87": {
        start: {
          line: 164,
          column: 0
        },
        end: {
          line: 164,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 52
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 41
          }
        },
        loc: {
          start: {
            line: 87,
            column: 47
          },
          end: {
            line: 87,
            column: 66
          }
        },
        line: 87
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 89
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 18
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 92
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 93,
            column: 42
          }
        },
        loc: {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 93
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 103
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 106
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 35
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 51
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 112
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 43
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 121
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 41
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 127
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        loc: {
          start: {
            line: 147,
            column: 46
          },
          end: {
            line: 147,
            column: 91
          }
        },
        line: 147
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        },
        loc: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 149,
            column: 91
          }
        },
        line: 149
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 151,
            column: 18
          }
        },
        loc: {
          start: {
            line: 151,
            column: 47
          },
          end: {
            line: 151,
            column: 93
          }
        },
        line: 151
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 153,
            column: 18
          }
        },
        loc: {
          start: {
            line: 153,
            column: 47
          },
          end: {
            line: 153,
            column: 93
          }
        },
        line: 153
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 156,
            column: 21
          },
          end: {
            line: 156,
            column: 22
          }
        },
        loc: {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 156
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 157,
            column: 11
          },
          end: {
            line: 157,
            column: 12
          }
        },
        loc: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 79
          }
        },
        line: 157
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 158,
            column: 10
          },
          end: {
            line: 158,
            column: 11
          }
        },
        loc: {
          start: {
            line: 158,
            column: 32
          },
          end: {
            line: 158,
            column: 77
          }
        },
        line: 158
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 11
          }
        },
        loc: {
          start: {
            line: 159,
            column: 32
          },
          end: {
            line: 159,
            column: 77
          }
        },
        line: 159
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 160,
            column: 11
          },
          end: {
            line: 160,
            column: 12
          }
        },
        loc: {
          start: {
            line: 160,
            column: 33
          },
          end: {
            line: 160,
            column: 79
          }
        },
        line: 160
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 161,
            column: 9
          },
          end: {
            line: 161,
            column: 10
          }
        },
        loc: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 161,
            column: 89
          }
        },
        line: 161
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 31
          }
        }, {
          start: {
            line: 54,
            column: 35
          },
          end: {
            line: 54,
            column: 74
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 67
          }
        }, {
          start: {
            line: 87,
            column: 70
          },
          end: {
            line: 87,
            column: 79
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 44
          }
        }, {
          start: {
            line: 94,
            column: 48
          },
          end: {
            line: 94,
            column: 49
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 113,
            column: 22
          },
          end: {
            line: 113,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: 113,
            column: 47
          },
          end: {
            line: 113,
            column: 53
          }
        }],
        line: 113
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 22
          }
        }, {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 22
          }
        }, {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 22
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 22
          }
        }],
        line: 128
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/utils/logger.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/utils/logger.ts"],
      sourcesContent: ["/**\n * Logger System V6.4\n * Sistema de logging melhorado para evitar false positives\n */\nimport { environment } from '../config/environment';\n\ninterface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  message: string;\n  context?: Record<string, any>;\n  source?: string;\n}\n\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nclass Logger {\n  private logs: LogEntry[] = [];\n  private maxLogs = 1000;\n  private logLevel: LogLevel = environment.logging.level as LogLevel;\n  private consoleLogging = environment.logging.consoleLogging;\n\n  private shouldLog(level: LogLevel): boolean {\n    const levels = ['debug', 'info', 'warn', 'error'];\n    return levels.indexOf(level) >= levels.indexOf(this.logLevel);\n  }\n\n  private createLogEntry(level: LogLevel, message: string, context?: Record<string, any>, source?: string): LogEntry {\n    return {\n      timestamp: new Date().toISOString(),\n      level,\n      message,\n      context,\n      source\n    };\n  }\n\n  private addToBuffer(entry: LogEntry): void {\n    this.logs.push(entry);\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift();\n    }\n  }\n\n  private formatMessage(level: LogLevel, message: string, context?: Record<string, any>): string {\n    const timestamp = new Date().toLocaleTimeString();\n    const emoji = {\n      debug: '\uD83D\uDD0D',\n      info: '\u2139\uFE0F',\n      warn: '\u26A0\uFE0F',\n      error: '\uD83D\uDEA8'\n    }[level];\n    \n    let formattedMessage = `${emoji} ${timestamp} [${level.toUpperCase()}] ${message}`;\n    \n    if (context) {\n      formattedMessage += `\\n\uD83D\uDCCB Context: ${JSON.stringify(context, null, 2)}`;\n    }\n    \n    return formattedMessage;\n  }\n\n  debug(message: string, context?: Record<string, any>, source?: string): void {\n    if (!this.shouldLog('debug')) return;\n    \n    const entry = this.createLogEntry('debug', message, context, source);\n    this.addToBuffer(entry);\n    \n    if (this.consoleLogging && environment.isDevelopment) {\n      console.debug(this.formatMessage('debug', message, context));\n    }\n  }\n\n  info(message: string, context?: Record<string, any>, source?: string): void {\n    if (!this.shouldLog('info')) return;\n    \n    const entry = this.createLogEntry('info', message, context, source);\n    this.addToBuffer(entry);\n    \n    if (this.consoleLogging) {\n      console.info(this.formatMessage('info', message, context));\n    }\n  }\n\n  warn(message: string, context?: Record<string, any>, source?: string): void {\n    if (!this.shouldLog('warn')) return;\n    \n    const entry = this.createLogEntry('warn', message, context, source);\n    this.addToBuffer(entry);\n    \n    if (this.consoleLogging) {\n      console.warn(this.formatMessage('warn', message, context));\n    }\n  }\n\n  error(message: string, context?: Record<string, any>, source?: string): void {\n    if (!this.shouldLog('error')) return;\n    \n    const entry = this.createLogEntry('error', message, context, source);\n    this.addToBuffer(entry);\n    \n    if (this.consoleLogging) {\n      console.error(this.formatMessage('error', message, context));\n    }\n  }\n\n  // M\xE9todos utilit\xE1rios\n  getLogs(level?: LogLevel): LogEntry[] {\n    return level ? this.logs.filter(log => log.level === level) : this.logs;\n  }\n\n  clearLogs(): void {\n    this.logs = [];\n  }\n\n  getLogStats(): { total: number; byLevel: Record<LogLevel, number> } {\n    const byLevel = this.logs.reduce((acc, log) => {\n      acc[log.level] = (acc[log.level] || 0) + 1;\n      return acc;\n    }, {} as Record<LogLevel, number>);\n\n    return {\n      total: this.logs.length,\n      byLevel\n    };\n  }\n\n  // M\xE9todos espec\xEDficos para diferentes componentes\n  logAppInitialization(context: Record<string, any>): void {\n    this.info('App initialization started', context, 'APP');\n  }\n\n  logServiceInitialization(serviceName: string, status: Record<string, any>): void {\n    this.info(`${serviceName} initialization completed`, status, serviceName);\n  }\n\n  logUserAction(action: string, context: Record<string, any>): void {\n    this.info(`User action: ${action}`, context, 'USER');\n  }\n\n  logApiCall(endpoint: string, method: string, status: number, duration?: number): void {\n    const level = status >= 400 ? 'warn' : 'info';\n    this.log(level, `API call: ${method} ${endpoint} - ${status}`, {\n      endpoint,\n      method,\n      status,\n      duration\n    }, 'API');\n  }\n\n  logPerformance(metric: string, value: number, context?: Record<string, any>): void {\n    if (environment.isDevelopment) {\n      this.debug(`Performance metric: ${metric} = ${value}`, context, 'PERFORMANCE');\n    }\n  }\n\n  // M\xE9todo gen\xE9rico de log\n  log(level: LogLevel, message: string, context?: Record<string, any>, source?: string): void {\n    switch (level) {\n      case 'debug':\n        this.debug(message, context, source);\n        break;\n      case 'info':\n        this.info(message, context, source);\n        break;\n      case 'warn':\n        this.warn(message, context, source);\n        break;\n      case 'error':\n        this.error(message, context, source);\n        break;\n    }\n  }\n}\n\n// Inst\xE2ncia singleton\nexport const logger = new Logger();\n\n// Fun\xE7\xF5es de conveni\xEAncia\nexport const logInfo = (message: string, context?: Record<string, any>, source?: string) => \n  logger.info(message, context, source);\n\nexport const logWarn = (message: string, context?: Record<string, any>, source?: string) => \n  logger.warn(message, context, source);\n\nexport const logError = (message: string, context?: Record<string, any>, source?: string) => \n  logger.error(message, context, source);\n\nexport const logDebug = (message: string, context?: Record<string, any>, source?: string) => \n  logger.debug(message, context, source);\n\n// Fun\xE7\xE3o de compatibilidade para c\xF3digos existentes\nexport const createLogger = (source: string) => ({\n  debug: (message: string, context?: Record<string, any>) => logger.debug(message, context, source),\n  info: (message: string, context?: Record<string, any>) => logger.info(message, context, source),\n  warn: (message: string, context?: Record<string, any>) => logger.warn(message, context, source),\n  error: (message: string, context?: Record<string, any>) => logger.error(message, context, source),\n  log: (level: LogLevel, message: string, context?: Record<string, any>) => logger.log(level, message, context, source)\n});\n\nexport default logger; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "531fd47cbcbd3633c7f666d55ff179ac4fe19554"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vo9wjkagg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vo9wjkagg();
cov_vo9wjkagg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_vo9wjkagg().s[1]++;
exports.createLogger = exports.logDebug = exports.logError = exports.logWarn = exports.logInfo = exports.logger = void 0;
/**
 * Logger System V6.4
 * Sistema de logging melhorado para evitar false positives
 */
const environment_1 =
/* istanbul ignore next */
(cov_vo9wjkagg().s[2]++, require("../config/environment"));
class Logger {
  constructor() {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[0]++;
    cov_vo9wjkagg().s[3]++;
    this.logs = [];
    /* istanbul ignore next */
    cov_vo9wjkagg().s[4]++;
    this.maxLogs = 1000;
    /* istanbul ignore next */
    cov_vo9wjkagg().s[5]++;
    this.logLevel = environment_1.environment.logging.level;
    /* istanbul ignore next */
    cov_vo9wjkagg().s[6]++;
    this.consoleLogging = environment_1.environment.logging.consoleLogging;
  }
  shouldLog(level) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[1]++;
    const levels =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[7]++, ['debug', 'info', 'warn', 'error']);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[8]++;
    return levels.indexOf(level) >= levels.indexOf(this.logLevel);
  }
  createLogEntry(level, message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[2]++;
    cov_vo9wjkagg().s[9]++;
    return {
      timestamp: new Date().toISOString(),
      level,
      message,
      context,
      source
    };
  }
  addToBuffer(entry) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[3]++;
    cov_vo9wjkagg().s[10]++;
    this.logs.push(entry);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[11]++;
    if (this.logs.length > this.maxLogs) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[0][0]++;
      cov_vo9wjkagg().s[12]++;
      this.logs.shift();
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[0][1]++;
    }
  }
  formatMessage(level, message, context) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[4]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[13]++, new Date().toLocaleTimeString());
    const emoji =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[14]++, {
      debug: '🔍',
      info: 'ℹ️',
      warn: '⚠️',
      error: '🚨'
    }[level]);
    let formattedMessage =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[15]++, `${emoji} ${timestamp} [${level.toUpperCase()}] ${message}`);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[16]++;
    if (context) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[1][0]++;
      cov_vo9wjkagg().s[17]++;
      formattedMessage += `\n📋 Context: ${JSON.stringify(context, null, 2)}`;
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[1][1]++;
    }
    cov_vo9wjkagg().s[18]++;
    return formattedMessage;
  }
  debug(message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[5]++;
    cov_vo9wjkagg().s[19]++;
    if (!this.shouldLog('debug')) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[2][0]++;
      cov_vo9wjkagg().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[2][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[21]++, this.createLogEntry('debug', message, context, source));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[22]++;
    this.addToBuffer(entry);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[4][0]++, this.consoleLogging) &&
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[4][1]++, environment_1.environment.isDevelopment)) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[3][0]++;
      cov_vo9wjkagg().s[24]++;
      console.debug(this.formatMessage('debug', message, context));
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[3][1]++;
    }
  }
  info(message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[6]++;
    cov_vo9wjkagg().s[25]++;
    if (!this.shouldLog('info')) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[5][0]++;
      cov_vo9wjkagg().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[5][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[27]++, this.createLogEntry('info', message, context, source));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[28]++;
    this.addToBuffer(entry);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[29]++;
    if (this.consoleLogging) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[6][0]++;
      cov_vo9wjkagg().s[30]++;
      console.info(this.formatMessage('info', message, context));
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[6][1]++;
    }
  }
  warn(message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[7]++;
    cov_vo9wjkagg().s[31]++;
    if (!this.shouldLog('warn')) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[7][0]++;
      cov_vo9wjkagg().s[32]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[7][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[33]++, this.createLogEntry('warn', message, context, source));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[34]++;
    this.addToBuffer(entry);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[35]++;
    if (this.consoleLogging) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[8][0]++;
      cov_vo9wjkagg().s[36]++;
      console.warn(this.formatMessage('warn', message, context));
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[8][1]++;
    }
  }
  error(message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[8]++;
    cov_vo9wjkagg().s[37]++;
    if (!this.shouldLog('error')) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[9][0]++;
      cov_vo9wjkagg().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[9][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[39]++, this.createLogEntry('error', message, context, source));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[40]++;
    this.addToBuffer(entry);
    /* istanbul ignore next */
    cov_vo9wjkagg().s[41]++;
    if (this.consoleLogging) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[10][0]++;
      cov_vo9wjkagg().s[42]++;
      console.error(this.formatMessage('error', message, context));
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[10][1]++;
    }
  }
  // Métodos utilitários
  getLogs(level) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[9]++;
    cov_vo9wjkagg().s[43]++;
    return level ?
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[11][0]++, this.logs.filter(log => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[10]++;
      cov_vo9wjkagg().s[44]++;
      return log.level === level;
    })) :
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[11][1]++, this.logs);
  }
  clearLogs() {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[11]++;
    cov_vo9wjkagg().s[45]++;
    this.logs = [];
  }
  getLogStats() {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[12]++;
    const byLevel =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[46]++, this.logs.reduce((acc, log) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[13]++;
      cov_vo9wjkagg().s[47]++;
      acc[log.level] = (
      /* istanbul ignore next */
      (cov_vo9wjkagg().b[12][0]++, acc[log.level]) ||
      /* istanbul ignore next */
      (cov_vo9wjkagg().b[12][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_vo9wjkagg().s[48]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[49]++;
    return {
      total: this.logs.length,
      byLevel
    };
  }
  // Métodos específicos para diferentes componentes
  logAppInitialization(context) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[14]++;
    cov_vo9wjkagg().s[50]++;
    this.info('App initialization started', context, 'APP');
  }
  logServiceInitialization(serviceName, status) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[15]++;
    cov_vo9wjkagg().s[51]++;
    this.info(`${serviceName} initialization completed`, status, serviceName);
  }
  logUserAction(action, context) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[16]++;
    cov_vo9wjkagg().s[52]++;
    this.info(`User action: ${action}`, context, 'USER');
  }
  logApiCall(endpoint, method, status, duration) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[17]++;
    const level =
    /* istanbul ignore next */
    (cov_vo9wjkagg().s[53]++, status >= 400 ?
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[13][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_vo9wjkagg().b[13][1]++, 'info'));
    /* istanbul ignore next */
    cov_vo9wjkagg().s[54]++;
    this.log(level, `API call: ${method} ${endpoint} - ${status}`, {
      endpoint,
      method,
      status,
      duration
    }, 'API');
  }
  logPerformance(metric, value, context) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[18]++;
    cov_vo9wjkagg().s[55]++;
    if (environment_1.environment.isDevelopment) {
      /* istanbul ignore next */
      cov_vo9wjkagg().b[14][0]++;
      cov_vo9wjkagg().s[56]++;
      this.debug(`Performance metric: ${metric} = ${value}`, context, 'PERFORMANCE');
    } else
    /* istanbul ignore next */
    {
      cov_vo9wjkagg().b[14][1]++;
    }
  }
  // Método genérico de log
  log(level, message, context, source) {
    /* istanbul ignore next */
    cov_vo9wjkagg().f[19]++;
    cov_vo9wjkagg().s[57]++;
    switch (level) {
      case 'debug':
        /* istanbul ignore next */
        cov_vo9wjkagg().b[15][0]++;
        cov_vo9wjkagg().s[58]++;
        this.debug(message, context, source);
        /* istanbul ignore next */
        cov_vo9wjkagg().s[59]++;
        break;
      case 'info':
        /* istanbul ignore next */
        cov_vo9wjkagg().b[15][1]++;
        cov_vo9wjkagg().s[60]++;
        this.info(message, context, source);
        /* istanbul ignore next */
        cov_vo9wjkagg().s[61]++;
        break;
      case 'warn':
        /* istanbul ignore next */
        cov_vo9wjkagg().b[15][2]++;
        cov_vo9wjkagg().s[62]++;
        this.warn(message, context, source);
        /* istanbul ignore next */
        cov_vo9wjkagg().s[63]++;
        break;
      case 'error':
        /* istanbul ignore next */
        cov_vo9wjkagg().b[15][3]++;
        cov_vo9wjkagg().s[64]++;
        this.error(message, context, source);
        /* istanbul ignore next */
        cov_vo9wjkagg().s[65]++;
        break;
    }
  }
}
// Instância singleton
/* istanbul ignore next */
cov_vo9wjkagg().s[66]++;
exports.logger = new Logger();
// Funções de conveniência
/* istanbul ignore next */
cov_vo9wjkagg().s[67]++;
const logInfo = (message, context, source) => {
  /* istanbul ignore next */
  cov_vo9wjkagg().f[20]++;
  cov_vo9wjkagg().s[68]++;
  return exports.logger.info(message, context, source);
};
/* istanbul ignore next */
cov_vo9wjkagg().s[69]++;
exports.logInfo = logInfo;
/* istanbul ignore next */
cov_vo9wjkagg().s[70]++;
const logWarn = (message, context, source) => {
  /* istanbul ignore next */
  cov_vo9wjkagg().f[21]++;
  cov_vo9wjkagg().s[71]++;
  return exports.logger.warn(message, context, source);
};
/* istanbul ignore next */
cov_vo9wjkagg().s[72]++;
exports.logWarn = logWarn;
/* istanbul ignore next */
cov_vo9wjkagg().s[73]++;
const logError = (message, context, source) => {
  /* istanbul ignore next */
  cov_vo9wjkagg().f[22]++;
  cov_vo9wjkagg().s[74]++;
  return exports.logger.error(message, context, source);
};
/* istanbul ignore next */
cov_vo9wjkagg().s[75]++;
exports.logError = logError;
/* istanbul ignore next */
cov_vo9wjkagg().s[76]++;
const logDebug = (message, context, source) => {
  /* istanbul ignore next */
  cov_vo9wjkagg().f[23]++;
  cov_vo9wjkagg().s[77]++;
  return exports.logger.debug(message, context, source);
};
/* istanbul ignore next */
cov_vo9wjkagg().s[78]++;
exports.logDebug = logDebug;
// Função de compatibilidade para códigos existentes
/* istanbul ignore next */
cov_vo9wjkagg().s[79]++;
const createLogger = source => {
  /* istanbul ignore next */
  cov_vo9wjkagg().f[24]++;
  cov_vo9wjkagg().s[80]++;
  return {
    debug: (message, context) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[25]++;
      cov_vo9wjkagg().s[81]++;
      return exports.logger.debug(message, context, source);
    },
    info: (message, context) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[26]++;
      cov_vo9wjkagg().s[82]++;
      return exports.logger.info(message, context, source);
    },
    warn: (message, context) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[27]++;
      cov_vo9wjkagg().s[83]++;
      return exports.logger.warn(message, context, source);
    },
    error: (message, context) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[28]++;
      cov_vo9wjkagg().s[84]++;
      return exports.logger.error(message, context, source);
    },
    log: (level, message, context) => {
      /* istanbul ignore next */
      cov_vo9wjkagg().f[29]++;
      cov_vo9wjkagg().s[85]++;
      return exports.logger.log(level, message, context, source);
    }
  };
};
/* istanbul ignore next */
cov_vo9wjkagg().s[86]++;
exports.createLogger = createLogger;
/* istanbul ignore next */
cov_vo9wjkagg().s[87]++;
exports.default = exports.logger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,