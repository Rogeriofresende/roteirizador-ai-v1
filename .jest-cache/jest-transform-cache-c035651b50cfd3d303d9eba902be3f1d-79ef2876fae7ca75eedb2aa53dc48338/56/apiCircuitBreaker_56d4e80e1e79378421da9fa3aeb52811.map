{"version":3,"names":["cov_1g3s5ybbko","actualCoverage","APICircuitBreaker","constructor","f","s","failureCount","lastFailureTime","state","failureThreshold","timeoutWindow","execute","operation","b","shouldAttemptReset","Error","result","onSuccess","error","onFailure","Date","now","getTime","getState","getFailureCount","exports"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/apiCircuitBreaker.ts"],"sourcesContent":["// Circuit breaker for API calls\nexport class APICircuitBreaker {\n  private failureCount = 0;\n  private lastFailureTime: Date | null = null;\n  private state: 'CLOSED' | 'OPEN' | 'HALF_OPEN' = 'CLOSED';\n  private failureThreshold = 5;\n  private timeoutWindow = 60000; // 1 minute\n  \n  async execute<T>(operation: () => Promise<T>): Promise<T> {\n    if (this.state === 'OPEN') {\n      if (this.shouldAttemptReset()) {\n        this.state = 'HALF_OPEN';\n      } else {\n        throw new Error('Circuit breaker is OPEN - API temporarily unavailable');\n      }\n    }\n    \n    try {\n      const result = await operation();\n      this.onSuccess();\n      return result;\n    } catch (error) {\n      this.onFailure();\n      throw error;\n    }\n  }\n  \n  private shouldAttemptReset(): boolean {\n    return this.lastFailureTime !== null &&\n      Date.now() - this.lastFailureTime.getTime() > this.timeoutWindow;\n  }\n  \n  private onSuccess(): void {\n    this.failureCount = 0;\n    this.state = 'CLOSED';\n  }\n  \n  private onFailure(): void {\n    this.failureCount++;\n    this.lastFailureTime = new Date();\n    \n    if (this.failureCount >= this.failureThreshold) {\n      this.state = 'OPEN';\n    }\n  }\n  \n  getState(): string {\n    return this.state;\n  }\n  \n  getFailureCount(): number {\n    return this.failureCount;\n  }\n} "],"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","ignoreList":[]}