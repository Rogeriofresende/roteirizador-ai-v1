{"version":3,"names":["cov_29r66gqbpm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","logger_1","require","interfaces_1","logger","createLogger","DIContainerImpl","constructor","registrations","Map","instances","disposalQueue","info","register","registration","key","getServiceKey","identifier","has","warn","set","lifecycle","resolve","get","Error","resolveSingleton","resolveTransient","resolveScoped","resolveSync","existingInstance","lastAccessed","Date","instance","createInstance","isRegistered","dispose","disposalFn","error","serviceInstance","state","ServiceLifecycleState","DISPOSING","isBaseService","DISPOSED","clear","INITIALIZING","createdAt","initialize","READY","OFFLINE","push","__awaiter","factory","dependencies","resolveDependencies","implementation","map","dep","getHealth","getServiceName","getStats","registeredServices","size","activeInstances","services","Array","from","keys","entries","exports","container"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/services/container/DIContainer.ts"],"sourcesContent":["/**\n * Dependency Injection Container\n * Sistema centralizado de gerenciamento de dependências para todos os serviços\n */\n\nimport { createLogger } from '../../utils/logger';\nimport {\n  ServiceIdentifier,\n  ServiceRegistration,\n  DIContainer,\n  IBaseService,\n  ServiceLifecycleState\n} from '../interfaces';\n\nconst logger = createLogger('DIContainer');\n\ninterface ServiceInstance {\n  instance: any;\n  registration: ServiceRegistration;\n  state: ServiceLifecycleState;\n  createdAt: Date;\n  lastAccessed: Date;\n}\n\nexport class DIContainerImpl implements DIContainer {\n  private registrations = new Map<string, ServiceRegistration>();\n  private instances = new Map<string, ServiceInstance>();\n  private disposalQueue: Array<() => Promise<void>> = [];\n\n  constructor() {\n    logger.info('DI Container initialized');\n  }\n\n  /**\n   * Registra um serviço no container\n   */\n  register<T>(registration: ServiceRegistration<T>): void {\n    const key = this.getServiceKey(registration.identifier);\n    \n    if (this.registrations.has(key)) {\n      logger.warn(`Service ${key} already registered, overwriting`);\n    }\n\n    this.registrations.set(key, registration);\n    logger.info(`Service registered: ${key} (${registration.lifecycle})`);\n  }\n\n  /**\n   * Resolve um serviço (async)\n   */\n  async resolve<T>(identifier: ServiceIdentifier<T>): Promise<T> {\n    const key = this.getServiceKey(identifier);\n    const registration = this.registrations.get(key);\n\n    if (!registration) {\n      throw new Error(`Service not registered: ${key}`);\n    }\n\n    // Check lifecycle strategy\n    switch (registration.lifecycle) {\n      case 'singleton':\n        return this.resolveSingleton<T>(key, registration);\n      case 'transient':\n        return this.resolveTransient<T>(registration);\n      case 'scoped':\n        return this.resolveScoped<T>(key, registration);\n      default:\n        throw new Error(`Unknown lifecycle: ${registration.lifecycle}`);\n    }\n  }\n\n  /**\n   * Resolve um serviço (sync)\n   */\n  resolveSync<T>(identifier: ServiceIdentifier<T>): T {\n    const key = this.getServiceKey(identifier);\n    const existingInstance = this.instances.get(key);\n\n    if (existingInstance) {\n      existingInstance.lastAccessed = new Date();\n      return existingInstance.instance;\n    }\n\n    const registration = this.registrations.get(key);\n    if (!registration) {\n      throw new Error(`Service not registered: ${key}`);\n    }\n\n    if (registration.lifecycle !== 'singleton') {\n      throw new Error(`Sync resolution only supported for singletons: ${key}`);\n    }\n\n    return this.createInstance<T>(registration);\n  }\n\n  /**\n   * Verifica se um serviço está registrado\n   */\n  isRegistered<T>(identifier: ServiceIdentifier<T>): boolean {\n    const key = this.getServiceKey(identifier);\n    return this.registrations.has(key);\n  }\n\n  /**\n   * Dispose de todos os serviços\n   */\n  async dispose(): Promise<void> {\n    logger.info('Disposing DI Container...');\n\n    // Execute disposal queue\n    for (const disposalFn of this.disposalQueue) {\n      try {\n        await disposalFn();\n      } catch (error) {\n        logger.error('Error during service disposal', error);\n      }\n    }\n\n    // Dispose all instances\n    for (const [key, serviceInstance] of this.instances) {\n      try {\n        serviceInstance.state = ServiceLifecycleState.DISPOSING;\n        \n        if (this.isBaseService(serviceInstance.instance)) {\n          await serviceInstance.instance.dispose();\n        }\n        \n        serviceInstance.state = ServiceLifecycleState.DISPOSED;\n        logger.info(`Service disposed: ${key}`);\n      } catch (error) {\n        logger.error(`Error disposing service ${key}`, error);\n      }\n    }\n\n    this.instances.clear();\n    this.registrations.clear();\n    this.disposalQueue = [];\n    \n    logger.info('DI Container disposed');\n  }\n\n  /**\n   * Resolve singleton instance\n   */\n  private async resolveSingleton<T>(key: string, registration: ServiceRegistration<T>): Promise<T> {\n    let serviceInstance = this.instances.get(key);\n\n    if (!serviceInstance) {\n      const instance = this.createInstance<T>(registration);\n      \n      serviceInstance = {\n        instance,\n        registration,\n        state: ServiceLifecycleState.INITIALIZING,\n        createdAt: new Date(),\n        lastAccessed: new Date()\n      };\n\n      this.instances.set(key, serviceInstance);\n\n      // Initialize if it's a base service\n      if (this.isBaseService(instance)) {\n        try {\n          await instance.initialize();\n          serviceInstance.state = ServiceLifecycleState.READY;\n          logger.info(`Service initialized: ${key}`);\n        } catch (error) {\n          serviceInstance.state = ServiceLifecycleState.OFFLINE;\n          logger.error(`Service initialization failed: ${key}`, error);\n          throw error;\n        }\n      } else {\n        serviceInstance.state = ServiceLifecycleState.READY;\n      }\n    } else {\n      serviceInstance.lastAccessed = new Date();\n    }\n\n    return serviceInstance.instance;\n  }\n\n  /**\n   * Resolve transient instance (always new)\n   */\n  private resolveTransient<T>(registration: ServiceRegistration<T>): T {\n    const instance = this.createInstance<T>(registration);\n    \n    // Add to disposal queue if it's a base service\n    if (this.isBaseService(instance)) {\n      this.disposalQueue.push(async () => {\n        await instance.dispose();\n      });\n    }\n\n    return instance;\n  }\n\n  /**\n   * Resolve scoped instance (same within scope)\n   */\n  private resolveScoped<T>(key: string, registration: ServiceRegistration<T>): T {\n    // For now, treat scoped as singleton\n    // In a real implementation, this would be per-request or per-transaction\n    return this.resolveSingleton(key, registration) as T;\n  }\n\n  /**\n   * Create new instance of a service\n   */\n  private createInstance<T>(registration: ServiceRegistration<T>): T {\n    try {\n      if (registration.factory) {\n        return registration.factory();\n      }\n\n      // Resolve dependencies\n      const dependencies = this.resolveDependencies(registration.dependencies || []);\n      \n      return new registration.implementation(...dependencies);\n    } catch (error) {\n      logger.error(`Error creating instance for ${registration.identifier.name}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Resolve service dependencies\n   */\n  private resolveDependencies(dependencies: ServiceIdentifier<any>[]): any[] {\n    return dependencies.map(dep => {\n      try {\n        return this.resolveSync(dep);\n      } catch (error) {\n        logger.error(`Failed to resolve dependency: ${dep.name}`, error);\n        throw error;\n      }\n    });\n  }\n\n  /**\n   * Generate service key\n   */\n  private getServiceKey(identifier: ServiceIdentifier): string {\n    return `${identifier.name}${identifier.version ? `@${identifier.version}` : ''}`;\n  }\n\n  /**\n   * Check if instance implements IBaseService\n   */\n  private isBaseService(instance: any): instance is IBaseService {\n    return (\n      instance &&\n      typeof instance.initialize === 'function' &&\n      typeof instance.dispose === 'function' &&\n      typeof instance.getHealth === 'function' &&\n      typeof instance.getServiceName === 'function'\n    );\n  }\n\n  /**\n   * Get container statistics\n   */\n  getStats() {\n    return {\n      registeredServices: this.registrations.size,\n      activeInstances: this.instances.size,\n      services: Array.from(this.registrations.keys()),\n      instances: Array.from(this.instances.entries()).map(([key, instance]) => ({\n        key,\n        state: instance.state,\n        createdAt: instance.createdAt,\n        lastAccessed: instance.lastAccessed,\n        lifecycle: instance.registration.lifecycle\n      }))\n    };\n  }\n}\n\n// Global container instance\nexport const container = new DIContainerImpl(); "],"mappings":"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","ignoreList":[]}