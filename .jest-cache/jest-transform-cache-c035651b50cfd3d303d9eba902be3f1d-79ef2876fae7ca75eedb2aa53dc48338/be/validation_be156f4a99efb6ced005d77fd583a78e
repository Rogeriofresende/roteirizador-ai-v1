6191b38e4ca7b62bbfbc3ee8b96be09d
"use strict";

/**
 * ğŸ“‹ VALIDATION SCHEMAS
 * Comprehensive Zod schemas for all form validations
 */
/* istanbul ignore next */
function cov_68juvscrc() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/lib/validation.ts";
  var hash = "0005111ec3e80afa6f4c4046b24af7e894a4ffdd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/lib/validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 147
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "4": {
        start: {
          line: 10,
          column: 14
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "6": {
        start: {
          line: 28,
          column: 67
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "7": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "8": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "9": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 60
        }
      },
      "10": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "11": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "12": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "13": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "14": {
        start: {
          line: 108,
          column: 30
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "15": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 54
        }
      },
      "16": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "17": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "18": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 114,
          column: 85
        }
      },
      "19": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 49
        }
      },
      "20": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "21": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 78
        }
      },
      "22": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "23": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "24": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "25": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 42
        }
      },
      "26": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 28
        }
      },
      "27": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 145,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 21
          }
        },
        loc: {
          start: {
            line: 28,
            column: 67
          },
          end: {
            line: 32,
            column: 15
          }
        },
        line: 28
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 21
          }
        },
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 39
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 14
          },
          end: {
            line: 56,
            column: 15
          }
        },
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 60
          }
        },
        line: 56
      },
      "3": {
        name: "validateData",
        decl: {
          start: {
            line: 106,
            column: 9
          },
          end: {
            line: 106,
            column: 21
          }
        },
        loc: {
          start: {
            line: 106,
            column: 36
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 45
          }
        },
        loc: {
          start: {
            line: 113,
            column: 53
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 113
      },
      "5": {
        name: "createValidator",
        decl: {
          start: {
            line: 122,
            column: 9
          },
          end: {
            line: 122,
            column: 24
          }
        },
        loc: {
          start: {
            line: 122,
            column: 33
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 122
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 124,
            column: 18
          },
          end: {
            line: 124,
            column: 19
          }
        },
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 54
          }
        },
        line: 124
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 20
          }
        },
        loc: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 125
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 45
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 28,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 59
          },
          end: {
            line: 28,
            column: 62
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 114,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 53
          },
          end: {
            line: 114,
            column: 80
          }
        }, {
          start: {
            line: 114,
            column: 83
          },
          end: {
            line: 114,
            column: 85
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/lib/validation.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/lib/validation.ts"],
      sourcesContent: ["/**\n * \uD83D\uDCCB VALIDATION SCHEMAS\n * Comprehensive Zod schemas for all form validations\n */\n\nimport { z } from 'zod';\n\n// =============================================================================\n// COMMON VALIDATORS\n// =============================================================================\n\nexport const commonValidators = {\n  email: z\n    .string()\n    .min(1, 'E-mail \xE9 obrigat\xF3rio')\n    .email('Formato de e-mail inv\xE1lido')\n    .max(254, 'E-mail muito longo'),\n\n  password: z\n    .string()\n    .min(8, 'Senha deve ter pelo menos 8 caracteres')\n    .max(128, 'Senha muito longa')\n    .regex(/[A-Z]/, 'Senha deve conter pelo menos uma letra mai\xFAscula')\n    .regex(/[a-z]/, 'Senha deve conter pelo menos uma letra min\xFAscula')\n    .regex(/[0-9]/, 'Senha deve conter pelo menos um n\xFAmero')\n    .regex(/[^A-Za-z0-9]/, 'Senha deve conter pelo menos um caractere especial'),\n\n  nonEmptyString: (fieldName: string, minLength = 1, maxLength = 500) =>\n    z\n      .string()\n      .min(minLength, `${fieldName} \xE9 obrigat\xF3rio`)\n      .max(maxLength, `${fieldName} muito longo`)\n      .trim(),\n\n  apiKey: z\n    .string()\n    .min(10, 'API key deve ter pelo menos 10 caracteres')\n    .max(200, 'API key muito longa')\n    .regex(/^[A-Za-z0-9_-]+$/, 'API key cont\xE9m caracteres inv\xE1lidos'),\n};\n\n// =============================================================================\n// USER AUTHENTICATION SCHEMAS\n// =============================================================================\n\nexport const authSchemas = {\n  login: z.object({\n    email: commonValidators.email,\n    password: z.string().min(1, 'Senha \xE9 obrigat\xF3ria'),\n    rememberMe: z.boolean().optional(),\n  }),\n\n  signup: z.object({\n    name: commonValidators.nonEmptyString('Nome', 2, 100),\n    email: commonValidators.email,\n    password: commonValidators.password,\n    confirmPassword: z.string(),\n    acceptTerms: z\n      .boolean()\n      .refine(val => val === true, 'Voc\xEA deve aceitar os termos de uso'),\n  }).refine(\n    data => data.password === data.confirmPassword,\n    {\n      message: 'As senhas n\xE3o coincidem',\n      path: ['confirmPassword'],\n    }\n  ),\n};\n\n// =============================================================================\n// SCRIPT GENERATION SCHEMAS\n// =============================================================================\n\nexport const platformEnum = z.enum([\n  'youtube',\n  'instagram', \n  'tiktok',\n  'linkedin',\n  'twitter',\n  'facebook',\n  'podcast',\n  'outros'\n]);\n\nexport const categoryEnum = z.enum([\n  'educacional',\n  'entretenimento', \n  'negocio',\n  'tecnologia',\n  'saude',\n  'lifestyle',\n  'outros'\n]);\n\nexport const scriptSchemas = {\n  generation: z.object({\n    title: commonValidators.nonEmptyString('T\xEDtulo', 5, 200),\n    description: commonValidators.nonEmptyString('Descri\xE7\xE3o', 10, 1000),\n    platform: platformEnum,\n    category: categoryEnum,\n    duration: z\n      .number()\n      .min(15, 'Dura\xE7\xE3o m\xEDnima \xE9 15 segundos')\n      .max(3600, 'Dura\xE7\xE3o m\xE1xima \xE9 1 hora')\n      .int('Dura\xE7\xE3o deve ser um n\xFAmero inteiro'),\n    targetAudience: commonValidators.nonEmptyString('P\xFAblico-alvo', 5, 200),\n  }),\n\n  save: z.object({\n    title: commonValidators.nonEmptyString('T\xEDtulo', 1, 200),\n    content: commonValidators.nonEmptyString('Conte\xFAdo', 10, 10000),\n    platform: platformEnum,\n    category: categoryEnum,\n  }),\n};\n\n// =============================================================================\n// UTILITY FUNCTIONS\n// =============================================================================\n\nexport function validateData<T>(\n  schema: z.ZodSchema<T>,\n  data: unknown\n): { success: true; data: T } | { success: false; errors: string[] } {\n  try {\n    const validatedData = schema.parse(data);\n    return { success: true, data: validatedData };\n  } catch (error: unknown) {\n    if (error instanceof z.ZodError) {\n      const errors = error.issues.map(issue => {\n        const path = issue.path.length > 0 ? `${issue.path.join('.')}: ` : '';\n        return `${path}${issue.message}`;\n      });\n      return { success: false, errors };\n    }\n    return { success: false, errors: ['Erro de valida\xE7\xE3o desconhecido'] };\n  }\n}\n\nexport function createValidator<T>(schema: z.ZodSchema<T>) {\n  return {\n    validate: (data: unknown) => validateData(schema, data),\n    safeParse: (data: unknown) => {\n      try {\n        return schema.parse(data);\n      } catch {\n        return null;\n      }\n    },\n  };\n}\n\n// =============================================================================\n// EXPORT TYPES\n// =============================================================================\n\nexport type AuthLoginData = z.infer<typeof authSchemas.login>;\nexport type AuthSignupData = z.infer<typeof authSchemas.signup>;\nexport type ScriptGenerationData = z.infer<typeof scriptSchemas.generation>;\nexport type ScriptSaveData = z.infer<typeof scriptSchemas.save>;\n\n// Pre-built validators\nexport const validators = {\n  auth: {\n    login: createValidator(authSchemas.login),\n    signup: createValidator(authSchemas.signup),\n  },\n  script: {\n    generation: createValidator(scriptSchemas.generation),\n    save: createValidator(scriptSchemas.save),\n  },\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0005111ec3e80afa6f4c4046b24af7e894a4ffdd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_68juvscrc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_68juvscrc();
cov_68juvscrc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_68juvscrc().s[1]++;
exports.validators = exports.scriptSchemas = exports.categoryEnum = exports.platformEnum = exports.authSchemas = exports.commonValidators = void 0;
/* istanbul ignore next */
cov_68juvscrc().s[2]++;
exports.validateData = validateData;
/* istanbul ignore next */
cov_68juvscrc().s[3]++;
exports.createValidator = createValidator;
const zod_1 =
/* istanbul ignore next */
(cov_68juvscrc().s[4]++, require("zod"));
// =============================================================================
// COMMON VALIDATORS
// =============================================================================
/* istanbul ignore next */
cov_68juvscrc().s[5]++;
exports.commonValidators = {
  email: zod_1.z.string().min(1, 'E-mail Ã© obrigatÃ³rio').email('Formato de e-mail invÃ¡lido').max(254, 'E-mail muito longo'),
  password: zod_1.z.string().min(8, 'Senha deve ter pelo menos 8 caracteres').max(128, 'Senha muito longa').regex(/[A-Z]/, 'Senha deve conter pelo menos uma letra maiÃºscula').regex(/[a-z]/, 'Senha deve conter pelo menos uma letra minÃºscula').regex(/[0-9]/, 'Senha deve conter pelo menos um nÃºmero').regex(/[^A-Za-z0-9]/, 'Senha deve conter pelo menos um caractere especial'),
  nonEmptyString: (fieldName, minLength =
  /* istanbul ignore next */
  (cov_68juvscrc().b[0][0]++, 1), maxLength =
  /* istanbul ignore next */
  (cov_68juvscrc().b[1][0]++, 500)) => {
    /* istanbul ignore next */
    cov_68juvscrc().f[0]++;
    cov_68juvscrc().s[6]++;
    return zod_1.z.string().min(minLength, `${fieldName} Ã© obrigatÃ³rio`).max(maxLength, `${fieldName} muito longo`).trim();
  },
  apiKey: zod_1.z.string().min(10, 'API key deve ter pelo menos 10 caracteres').max(200, 'API key muito longa').regex(/^[A-Za-z0-9_-]+$/, 'API key contÃ©m caracteres invÃ¡lidos')
};
// =============================================================================
// USER AUTHENTICATION SCHEMAS
// =============================================================================
/* istanbul ignore next */
cov_68juvscrc().s[7]++;
exports.authSchemas = {
  login: zod_1.z.object({
    email: exports.commonValidators.email,
    password: zod_1.z.string().min(1, 'Senha Ã© obrigatÃ³ria'),
    rememberMe: zod_1.z.boolean().optional()
  }),
  signup: zod_1.z.object({
    name: exports.commonValidators.nonEmptyString('Nome', 2, 100),
    email: exports.commonValidators.email,
    password: exports.commonValidators.password,
    confirmPassword: zod_1.z.string(),
    acceptTerms: zod_1.z.boolean().refine(val => {
      /* istanbul ignore next */
      cov_68juvscrc().f[1]++;
      cov_68juvscrc().s[8]++;
      return val === true;
    }, 'VocÃª deve aceitar os termos de uso')
  }).refine(data => {
    /* istanbul ignore next */
    cov_68juvscrc().f[2]++;
    cov_68juvscrc().s[9]++;
    return data.password === data.confirmPassword;
  }, {
    message: 'As senhas nÃ£o coincidem',
    path: ['confirmPassword']
  })
};
// =============================================================================
// SCRIPT GENERATION SCHEMAS
// =============================================================================
/* istanbul ignore next */
cov_68juvscrc().s[10]++;
exports.platformEnum = zod_1.z.enum(['youtube', 'instagram', 'tiktok', 'linkedin', 'twitter', 'facebook', 'podcast', 'outros']);
/* istanbul ignore next */
cov_68juvscrc().s[11]++;
exports.categoryEnum = zod_1.z.enum(['educacional', 'entretenimento', 'negocio', 'tecnologia', 'saude', 'lifestyle', 'outros']);
/* istanbul ignore next */
cov_68juvscrc().s[12]++;
exports.scriptSchemas = {
  generation: zod_1.z.object({
    title: exports.commonValidators.nonEmptyString('TÃ­tulo', 5, 200),
    description: exports.commonValidators.nonEmptyString('DescriÃ§Ã£o', 10, 1000),
    platform: exports.platformEnum,
    category: exports.categoryEnum,
    duration: zod_1.z.number().min(15, 'DuraÃ§Ã£o mÃ­nima Ã© 15 segundos').max(3600, 'DuraÃ§Ã£o mÃ¡xima Ã© 1 hora').int('DuraÃ§Ã£o deve ser um nÃºmero inteiro'),
    targetAudience: exports.commonValidators.nonEmptyString('PÃºblico-alvo', 5, 200)
  }),
  save: zod_1.z.object({
    title: exports.commonValidators.nonEmptyString('TÃ­tulo', 1, 200),
    content: exports.commonValidators.nonEmptyString('ConteÃºdo', 10, 10000),
    platform: exports.platformEnum,
    category: exports.categoryEnum
  })
};
// =============================================================================
// UTILITY FUNCTIONS
// =============================================================================
function validateData(schema, data) {
  /* istanbul ignore next */
  cov_68juvscrc().f[3]++;
  cov_68juvscrc().s[13]++;
  try {
    const validatedData =
    /* istanbul ignore next */
    (cov_68juvscrc().s[14]++, schema.parse(data));
    /* istanbul ignore next */
    cov_68juvscrc().s[15]++;
    return {
      success: true,
      data: validatedData
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_68juvscrc().s[16]++;
    if (error instanceof zod_1.z.ZodError) {
      /* istanbul ignore next */
      cov_68juvscrc().b[2][0]++;
      const errors =
      /* istanbul ignore next */
      (cov_68juvscrc().s[17]++, error.issues.map(issue => {
        /* istanbul ignore next */
        cov_68juvscrc().f[4]++;
        const path =
        /* istanbul ignore next */
        (cov_68juvscrc().s[18]++, issue.path.length > 0 ?
        /* istanbul ignore next */
        (cov_68juvscrc().b[3][0]++, `${issue.path.join('.')}: `) :
        /* istanbul ignore next */
        (cov_68juvscrc().b[3][1]++, ''));
        /* istanbul ignore next */
        cov_68juvscrc().s[19]++;
        return `${path}${issue.message}`;
      }));
      /* istanbul ignore next */
      cov_68juvscrc().s[20]++;
      return {
        success: false,
        errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_68juvscrc().b[2][1]++;
    }
    cov_68juvscrc().s[21]++;
    return {
      success: false,
      errors: ['Erro de validaÃ§Ã£o desconhecido']
    };
  }
}
function createValidator(schema) {
  /* istanbul ignore next */
  cov_68juvscrc().f[5]++;
  cov_68juvscrc().s[22]++;
  return {
    validate: data => {
      /* istanbul ignore next */
      cov_68juvscrc().f[6]++;
      cov_68juvscrc().s[23]++;
      return validateData(schema, data);
    },
    safeParse: data => {
      /* istanbul ignore next */
      cov_68juvscrc().f[7]++;
      cov_68juvscrc().s[24]++;
      try {
        /* istanbul ignore next */
        cov_68juvscrc().s[25]++;
        return schema.parse(data);
      } catch (_a) {
        /* istanbul ignore next */
        cov_68juvscrc().s[26]++;
        return null;
      }
    }
  };
}
// Pre-built validators
/* istanbul ignore next */
cov_68juvscrc().s[27]++;
exports.validators = {
  auth: {
    login: createValidator(exports.authSchemas.login),
    signup: createValidator(exports.authSchemas.signup)
  },
  script: {
    generation: createValidator(exports.scriptSchemas.generation),
    save: createValidator(exports.scriptSchemas.save)
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,