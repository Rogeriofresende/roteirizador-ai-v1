{"version":3,"names":["cov_68juvscrc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","validateData","createValidator","zod_1","require","commonValidators","email","z","string","min","max","password","regex","nonEmptyString","fieldName","minLength","maxLength","trim","apiKey","authSchemas","login","object","rememberMe","boolean","optional","signup","confirmPassword","acceptTerms","refine","val","data","message","platformEnum","enum","categoryEnum","scriptSchemas","generation","title","description","platform","category","duration","number","int","targetAudience","save","content","schema","validatedData","parse","success","error","ZodError","errors","issues","map","issue","length","join","validate","safeParse","_a","validators","auth","script"],"sources":["/Users/rogerioresende/Desktop/Roteirar-ia/src/lib/validation.ts"],"sourcesContent":["/**\n * üìã VALIDATION SCHEMAS\n * Comprehensive Zod schemas for all form validations\n */\n\nimport { z } from 'zod';\n\n// =============================================================================\n// COMMON VALIDATORS\n// =============================================================================\n\nexport const commonValidators = {\n  email: z\n    .string()\n    .min(1, 'E-mail √© obrigat√≥rio')\n    .email('Formato de e-mail inv√°lido')\n    .max(254, 'E-mail muito longo'),\n\n  password: z\n    .string()\n    .min(8, 'Senha deve ter pelo menos 8 caracteres')\n    .max(128, 'Senha muito longa')\n    .regex(/[A-Z]/, 'Senha deve conter pelo menos uma letra mai√∫scula')\n    .regex(/[a-z]/, 'Senha deve conter pelo menos uma letra min√∫scula')\n    .regex(/[0-9]/, 'Senha deve conter pelo menos um n√∫mero')\n    .regex(/[^A-Za-z0-9]/, 'Senha deve conter pelo menos um caractere especial'),\n\n  nonEmptyString: (fieldName: string, minLength = 1, maxLength = 500) =>\n    z\n      .string()\n      .min(minLength, `${fieldName} √© obrigat√≥rio`)\n      .max(maxLength, `${fieldName} muito longo`)\n      .trim(),\n\n  apiKey: z\n    .string()\n    .min(10, 'API key deve ter pelo menos 10 caracteres')\n    .max(200, 'API key muito longa')\n    .regex(/^[A-Za-z0-9_-]+$/, 'API key cont√©m caracteres inv√°lidos'),\n};\n\n// =============================================================================\n// USER AUTHENTICATION SCHEMAS\n// =============================================================================\n\nexport const authSchemas = {\n  login: z.object({\n    email: commonValidators.email,\n    password: z.string().min(1, 'Senha √© obrigat√≥ria'),\n    rememberMe: z.boolean().optional(),\n  }),\n\n  signup: z.object({\n    name: commonValidators.nonEmptyString('Nome', 2, 100),\n    email: commonValidators.email,\n    password: commonValidators.password,\n    confirmPassword: z.string(),\n    acceptTerms: z\n      .boolean()\n      .refine(val => val === true, 'Voc√™ deve aceitar os termos de uso'),\n  }).refine(\n    data => data.password === data.confirmPassword,\n    {\n      message: 'As senhas n√£o coincidem',\n      path: ['confirmPassword'],\n    }\n  ),\n};\n\n// =============================================================================\n// SCRIPT GENERATION SCHEMAS\n// =============================================================================\n\nexport const platformEnum = z.enum([\n  'youtube',\n  'instagram', \n  'tiktok',\n  'linkedin',\n  'twitter',\n  'facebook',\n  'podcast',\n  'outros'\n]);\n\nexport const categoryEnum = z.enum([\n  'educacional',\n  'entretenimento', \n  'negocio',\n  'tecnologia',\n  'saude',\n  'lifestyle',\n  'outros'\n]);\n\nexport const scriptSchemas = {\n  generation: z.object({\n    title: commonValidators.nonEmptyString('T√≠tulo', 5, 200),\n    description: commonValidators.nonEmptyString('Descri√ß√£o', 10, 1000),\n    platform: platformEnum,\n    category: categoryEnum,\n    duration: z\n      .number()\n      .min(15, 'Dura√ß√£o m√≠nima √© 15 segundos')\n      .max(3600, 'Dura√ß√£o m√°xima √© 1 hora')\n      .int('Dura√ß√£o deve ser um n√∫mero inteiro'),\n    targetAudience: commonValidators.nonEmptyString('P√∫blico-alvo', 5, 200),\n  }),\n\n  save: z.object({\n    title: commonValidators.nonEmptyString('T√≠tulo', 1, 200),\n    content: commonValidators.nonEmptyString('Conte√∫do', 10, 10000),\n    platform: platformEnum,\n    category: categoryEnum,\n  }),\n};\n\n// =============================================================================\n// UTILITY FUNCTIONS\n// =============================================================================\n\nexport function validateData<T>(\n  schema: z.ZodSchema<T>,\n  data: unknown\n): { success: true; data: T } | { success: false; errors: string[] } {\n  try {\n    const validatedData = schema.parse(data);\n    return { success: true, data: validatedData };\n  } catch (error: unknown) {\n    if (error instanceof z.ZodError) {\n      const errors = error.issues.map(issue => {\n        const path = issue.path.length > 0 ? `${issue.path.join('.')}: ` : '';\n        return `${path}${issue.message}`;\n      });\n      return { success: false, errors };\n    }\n    return { success: false, errors: ['Erro de valida√ß√£o desconhecido'] };\n  }\n}\n\nexport function createValidator<T>(schema: z.ZodSchema<T>) {\n  return {\n    validate: (data: unknown) => validateData(schema, data),\n    safeParse: (data: unknown) => {\n      try {\n        return schema.parse(data);\n      } catch {\n        return null;\n      }\n    },\n  };\n}\n\n// =============================================================================\n// EXPORT TYPES\n// =============================================================================\n\nexport type AuthLoginData = z.infer<typeof authSchemas.login>;\nexport type AuthSignupData = z.infer<typeof authSchemas.signup>;\nexport type ScriptGenerationData = z.infer<typeof scriptSchemas.generation>;\nexport type ScriptSaveData = z.infer<typeof scriptSchemas.save>;\n\n// Pre-built validators\nexport const validators = {\n  auth: {\n    login: createValidator(authSchemas.login),\n    signup: createValidator(authSchemas.signup),\n  },\n  script: {\n    generation: createValidator(scriptSchemas.generation),\n    save: createValidator(scriptSchemas.save),\n  },\n}; "],"mappings":"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","ignoreList":[]}