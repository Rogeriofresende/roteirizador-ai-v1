b2b7f9ae2b6163e6e4e09e7f5cc03e8c
"use strict";

/**
 * Tipos de Autenticação - Sistema de Roles
 * Roteirar IA - Melhorias UX/UI Fase 1
 */
/* istanbul ignore next */
function cov_22cjc2i0br() {
  var path = "/Users/rogerioresende/Desktop/Roteirar-ia/src/types/auth.ts";
  var hash = "e03ee2a3843a7f0ec6df9cebf47ed85187150feb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/rogerioresende/Desktop/Roteirar-ia/src/types/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 178
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "4": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 49,
          column: 2
        }
      },
      "5": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "6": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "7": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "8": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "9": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "10": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "11": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 63
        }
      },
      "12": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 34
        }
      },
      "13": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "14": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "15": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 53
        }
      },
      "16": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "17": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "18": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 78,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 22
          }
        },
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 51
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        loc: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 57
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 31
          }
        },
        loc: {
          start: {
            line: 61,
            column: 40
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 53,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 53,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 11
          },
          end: {
            line: 58,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 46
          },
          end: {
            line: 58,
            column: 53
          }
        }, {
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 58,
            column: 62
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 52
          }
        }],
        line: 62
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/rogerioresende/Desktop/Roteirar-ia/src/types/auth.ts",
      mappings: ";AAAA;;;GAGG;;;AAmGH,oCAAoC;AACpC,qDAAqD;AACxC,QAAA,YAAY,GAAa;IACpC,uBAAuB;IACvB,yBAAyB;IACzB,uCAAuC;CACxC,CAAC;AAEF,8BAA8B;AAEjB,QAAA,wBAAwB,GAAoB;IACvD,WAAW;IACX,iBAAiB,EAAE,IAAI;IACvB,kBAAkB,EAAE,IAAI;IACxB,oBAAoB,EAAE,IAAI;IAC1B,gBAAgB,EAAE,IAAI;IAEtB,4BAA4B;IAC5B,qBAAqB,EAAE,KAAK;IAC5B,cAAc,EAAE,KAAK;IACrB,iBAAiB,EAAE,KAAK;IACxB,uBAAuB,EAAE,KAAK;IAC9B,wBAAwB,EAAE,KAAK;IAE/B,YAAY;IACZ,qBAAqB,EAAE,KAAK;IAC5B,iBAAiB,EAAE,IAAI;IACvB,gBAAgB,EAAE,IAAI;CACvB,CAAC;AAEW,QAAA,yBAAyB,GAAoB;IACxD,6BAA6B;IAC7B,iBAAiB,EAAE,IAAI;IACvB,kBAAkB,EAAE,IAAI;IACxB,oBAAoB,EAAE,IAAI;IAC1B,gBAAgB,EAAE,IAAI;IAEtB,0BAA0B;IAC1B,qBAAqB,EAAE,IAAI;IAC3B,cAAc,EAAE,IAAI;IACpB,iBAAiB,EAAE,IAAI;IACvB,uBAAuB,EAAE,IAAI;IAC7B,wBAAwB,EAAE,IAAI;IAE9B,sCAAsC;IACtC,qBAAqB,EAAE,IAAI;IAC3B,iBAAiB,EAAE,IAAI;IACvB,gBAAgB,EAAE,IAAI;CACvB,CAAC;AAEF,iCAAiC;AAE1B,MAAM,YAAY,GAAG,CAAC,KAAoB,EAAW,EAAE;IAC5D,IAAI,CAAC,KAAK;QAAE,OAAO,KAAK,CAAC;IACzB,OAAO,oBAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AACpD,CAAC,CAAC;AAHW,QAAA,YAAY,gBAGvB;AAEK,MAAM,WAAW,GAAG,CAAC,KAAoB,EAAY,EAAE;IAC5D,OAAO,IAAA,oBAAY,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;AAChD,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB;AAEK,MAAM,qBAAqB,GAAG,CAAC,IAAc,EAAmB,EAAE;IACvE,QAAQ,IAAI,EAAE,CAAC;QACb,KAAK,OAAO;YACV,OAAO,iCAAyB,CAAC;QACnC,KAAK,MAAM,CAAC;QACZ;YACE,OAAO,gCAAwB,CAAC;IACpC,CAAC;AACH,CAAC,CAAC;AARW,QAAA,qBAAqB,yBAQhC;AA+HF,kBAAe;IACb,YAAY,EAAZ,oBAAY;IACZ,wBAAwB,EAAxB,gCAAwB;IACxB,yBAAyB,EAAzB,iCAAyB;IACzB,YAAY,EAAZ,oBAAY;IACZ,WAAW,EAAX,mBAAW;IACX,qBAAqB,EAArB,6BAAqB;CACtB,CAAC",
      names: [],
      sources: ["/Users/rogerioresende/Desktop/Roteirar-ia/src/types/auth.ts"],
      sourcesContent: ["/**\n * Tipos de Autentica\xE7\xE3o - Sistema de Roles\n * Roteirar IA - Melhorias UX/UI Fase 1\n */\n\nimport type { User as FirebaseUser } from 'firebase/auth';\n\n// === ROLES E PERMISS\xD5ES ===\n\nexport type UserRole = 'user' | 'admin';\n\nexport interface UserPermissions {\n  // Permiss\xF5es de projetos\n  canCreateProjects: boolean;\n  canEditOwnProjects: boolean;\n  canDeleteOwnProjects: boolean;\n  canShareProjects: boolean;\n  \n  // Permiss\xF5es administrativas\n  canViewAdminDashboard: boolean;\n  canManageUsers: boolean;\n  canViewSystemLogs: boolean;\n  canModifySystemSettings: boolean;\n  canViewAdvancedAnalytics: boolean;\n  \n  // Permiss\xF5es especiais\n  canAccessBetaFeatures: boolean;\n  canExportProjects: boolean;\n  canUseAIFeatures: boolean;\n}\n\n// === USER INTERFACE ESTENDIDA ===\n\nexport interface ExtendedUser {\n  // Dados b\xE1sicos do Firebase\n  uid: string;\n  email: string | null;\n  displayName: string | null;\n  photoURL: string | null;\n  emailVerified: boolean;\n  \n  // Dados estendidos\n  role: UserRole;\n  permissions: UserPermissions;\n  \n  // Metadados\n  createdAt: Date;\n  lastLoginAt: Date;\n  lastActiveAt: Date;\n  \n  // Configura\xE7\xF5es\n  preferences: {\n    theme: 'light' | 'dark' | 'auto';\n    language: string;\n    notifications: boolean;\n    analyticsOptIn: boolean;\n  };\n  \n  // Subscription\n  subscription?: 'free' | 'pro' | 'enterprise';\n  \n  // Status\n  isActive: boolean;\n  isBlocked: boolean;\n  \n  // Admin espec\xEDfico\n  adminMetadata?: {\n    adminSince: Date;\n    lastAdminAction: Date;\n    adminNotes?: string;\n  };\n}\n\n// === AUTH CONTEXT TYPE ===\n\nexport interface AuthContextType {\n  // User state\n  currentUser: ExtendedUser | null;\n  firebaseUser: FirebaseUser | null;\n  loading: boolean;\n  isFirebaseEnabled: boolean;\n  \n  // Role helpers\n  isAdmin: boolean;\n  isUser: boolean;\n  hasRole: (role: UserRole) => boolean;\n  hasPermission: (permission: keyof UserPermissions) => boolean;\n  \n  // Auth actions\n  checkPermissions: () => UserPermissions;\n  refreshUserData: () => Promise<void>;\n  updateUserPreferences: (preferences: Partial<ExtendedUser['preferences']>) => Promise<void>;\n}\n\n// === ROLE CONFIGURATION ===\n\nexport interface RoleConfig {\n  admins: string[]; // Lista de emails de administradores\n  defaultPermissions: Record<UserRole, UserPermissions>;\n  permissionGroups: Record<string, Partial<UserPermissions>>;\n}\n\n// === ADMIN USERS CONFIGURATION ===\n// Lista de emails que t\xEAm permiss\xE3o de administrador\nexport const ADMIN_EMAILS: string[] = [\n  'admin@roteirar-ia.com',\n  'rogerio@roteirar-ia.com',\n  // Adicione outros emails de admin aqui\n];\n\n// === DEFAULT PERMISSIONS ===\n\nexport const DEFAULT_USER_PERMISSIONS: UserPermissions = {\n  // Projetos\n  canCreateProjects: true,\n  canEditOwnProjects: true,\n  canDeleteOwnProjects: true,\n  canShareProjects: true,\n  \n  // Admin (negado para users)\n  canViewAdminDashboard: false,\n  canManageUsers: false,\n  canViewSystemLogs: false,\n  canModifySystemSettings: false,\n  canViewAdvancedAnalytics: false,\n  \n  // Especiais\n  canAccessBetaFeatures: false,\n  canExportProjects: true,\n  canUseAIFeatures: true,\n};\n\nexport const DEFAULT_ADMIN_PERMISSIONS: UserPermissions = {\n  // Projetos (admin tem todas)\n  canCreateProjects: true,\n  canEditOwnProjects: true,\n  canDeleteOwnProjects: true,\n  canShareProjects: true,\n  \n  // Admin (todas liberadas)\n  canViewAdminDashboard: true,\n  canManageUsers: true,\n  canViewSystemLogs: true,\n  canModifySystemSettings: true,\n  canViewAdvancedAnalytics: true,\n  \n  // Especiais (admin tem acesso a tudo)\n  canAccessBetaFeatures: true,\n  canExportProjects: true,\n  canUseAIFeatures: true,\n};\n\n// === ROLE DETECTION HELPERS ===\n\nexport const isAdminEmail = (email: string | null): boolean => {\n  if (!email) return false;\n  return ADMIN_EMAILS.includes(email.toLowerCase());\n};\n\nexport const getUserRole = (email: string | null): UserRole => {\n  return isAdminEmail(email) ? 'admin' : 'user';\n};\n\nexport const getPermissionsForRole = (role: UserRole): UserPermissions => {\n  switch (role) {\n    case 'admin':\n      return DEFAULT_ADMIN_PERMISSIONS;\n    case 'user':\n    default:\n      return DEFAULT_USER_PERMISSIONS;\n  }\n};\n\n// === ROUTE PROTECTION TYPES ===\n\nexport interface RouteProtectionProps {\n  children: React.ReactElement;\n  requireAuth?: boolean;\n  requiredRole?: UserRole;\n  requiredPermissions?: (keyof UserPermissions)[];\n  fallback?: React.ReactElement;\n  redirectTo?: string;\n}\n\n// === ADMIN DASHBOARD TYPES ===\n\nexport interface AdminDashboardData {\n  userStats: {\n    totalUsers: number;\n    activeUsers: number;\n    newUsersToday: number;\n    adminUsers: number;\n  };\n  \n  systemStats: {\n    uptime: string;\n    responseTime: number;\n    errorRate: number;\n    lastDeployment: Date;\n  };\n  \n  projectStats: {\n    totalProjects: number;\n    projectsToday: number;\n    averageProjectsPerUser: number;\n    mostUsedPlatforms: Record<string, number>;\n  };\n  \n  performanceMetrics: {\n    avgLoadTime: number;\n    avgApiResponseTime: number;\n    errorLogs: number;\n    activeConnections: number;\n  };\n}\n\n// === USER MANAGEMENT TYPES ===\n\nexport interface UserManagementItem {\n  uid: string;\n  email: string;\n  displayName: string | null;\n  role: UserRole;\n  isActive: boolean;\n  isBlocked: boolean;\n  createdAt: Date;\n  lastLoginAt: Date;\n  projectCount: number;\n  \n  // Admin actions\n  actions: {\n    canBlock: boolean;\n    canUnblock: boolean;\n    canMakeAdmin: boolean;\n    canRemoveAdmin: boolean;\n    canDelete: boolean;\n  };\n}\n\nexport interface UserManagementFilters {\n  search?: string;\n  role?: UserRole | 'all';\n  status?: 'active' | 'blocked' | 'all';\n  sortBy: 'email' | 'createdAt' | 'lastLoginAt' | 'projectCount';\n  sortOrder: 'asc' | 'desc';\n  limit: number;\n  offset: number;\n}\n\n// === SYSTEM LOGS TYPES ===\n\nexport interface SystemLogEntry {\n  id: string;\n  timestamp: Date;\n  level: 'info' | 'warn' | 'error' | 'debug';\n  category: 'auth' | 'api' | 'database' | 'system' | 'user_action';\n  message: string;\n  details?: any;\n  userId?: string;\n  userEmail?: string;\n  ip?: string;\n  userAgent?: string;\n}\n\nexport interface SystemLogFilters {\n  level?: SystemLogEntry['level'][];\n  category?: SystemLogEntry['category'][];\n  dateRange?: {\n    start: Date;\n    end: Date;\n  };\n  search?: string;\n  userId?: string;\n  limit: number;\n  offset: number;\n}\n\n// === NOTIFICATION TYPES ===\n\nexport interface AdminNotification {\n  id: string;\n  type: 'user_registered' | 'system_error' | 'security_alert' | 'performance_issue';\n  title: string;\n  message: string;\n  data: unknown;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  isRead: boolean;\n  createdAt: Date;\n  actionRequired?: boolean;\n  actionUrl?: string;\n}\n\n// === EXPORT TYPES ===\n\nexport type {\n  FirebaseUser,\n};\n\nexport default {\n  ADMIN_EMAILS,\n  DEFAULT_USER_PERMISSIONS,\n  DEFAULT_ADMIN_PERMISSIONS,\n  isAdminEmail,\n  getUserRole,\n  getPermissionsForRole,\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e03ee2a3843a7f0ec6df9cebf47ed85187150feb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22cjc2i0br = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22cjc2i0br();
cov_22cjc2i0br().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22cjc2i0br().s[1]++;
exports.getPermissionsForRole = exports.getUserRole = exports.isAdminEmail = exports.DEFAULT_ADMIN_PERMISSIONS = exports.DEFAULT_USER_PERMISSIONS = exports.ADMIN_EMAILS = void 0;
// === ADMIN USERS CONFIGURATION ===
// Lista de emails que têm permissão de administrador
/* istanbul ignore next */
cov_22cjc2i0br().s[2]++;
exports.ADMIN_EMAILS = ['admin@roteirar-ia.com', 'rogerio@roteirar-ia.com'
// Adicione outros emails de admin aqui
];
// === DEFAULT PERMISSIONS ===
/* istanbul ignore next */
cov_22cjc2i0br().s[3]++;
exports.DEFAULT_USER_PERMISSIONS = {
  // Projetos
  canCreateProjects: true,
  canEditOwnProjects: true,
  canDeleteOwnProjects: true,
  canShareProjects: true,
  // Admin (negado para users)
  canViewAdminDashboard: false,
  canManageUsers: false,
  canViewSystemLogs: false,
  canModifySystemSettings: false,
  canViewAdvancedAnalytics: false,
  // Especiais
  canAccessBetaFeatures: false,
  canExportProjects: true,
  canUseAIFeatures: true
};
/* istanbul ignore next */
cov_22cjc2i0br().s[4]++;
exports.DEFAULT_ADMIN_PERMISSIONS = {
  // Projetos (admin tem todas)
  canCreateProjects: true,
  canEditOwnProjects: true,
  canDeleteOwnProjects: true,
  canShareProjects: true,
  // Admin (todas liberadas)
  canViewAdminDashboard: true,
  canManageUsers: true,
  canViewSystemLogs: true,
  canModifySystemSettings: true,
  canViewAdvancedAnalytics: true,
  // Especiais (admin tem acesso a tudo)
  canAccessBetaFeatures: true,
  canExportProjects: true,
  canUseAIFeatures: true
};
// === ROLE DETECTION HELPERS ===
/* istanbul ignore next */
cov_22cjc2i0br().s[5]++;
const isAdminEmail = email => {
  /* istanbul ignore next */
  cov_22cjc2i0br().f[0]++;
  cov_22cjc2i0br().s[6]++;
  if (!email) {
    /* istanbul ignore next */
    cov_22cjc2i0br().b[0][0]++;
    cov_22cjc2i0br().s[7]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_22cjc2i0br().b[0][1]++;
  }
  cov_22cjc2i0br().s[8]++;
  return exports.ADMIN_EMAILS.includes(email.toLowerCase());
};
/* istanbul ignore next */
cov_22cjc2i0br().s[9]++;
exports.isAdminEmail = isAdminEmail;
/* istanbul ignore next */
cov_22cjc2i0br().s[10]++;
const getUserRole = email => {
  /* istanbul ignore next */
  cov_22cjc2i0br().f[1]++;
  cov_22cjc2i0br().s[11]++;
  return (0, exports.isAdminEmail)(email) ?
  /* istanbul ignore next */
  (cov_22cjc2i0br().b[1][0]++, 'admin') :
  /* istanbul ignore next */
  (cov_22cjc2i0br().b[1][1]++, 'user');
};
/* istanbul ignore next */
cov_22cjc2i0br().s[12]++;
exports.getUserRole = getUserRole;
/* istanbul ignore next */
cov_22cjc2i0br().s[13]++;
const getPermissionsForRole = role => {
  /* istanbul ignore next */
  cov_22cjc2i0br().f[2]++;
  cov_22cjc2i0br().s[14]++;
  switch (role) {
    case 'admin':
      /* istanbul ignore next */
      cov_22cjc2i0br().b[2][0]++;
      cov_22cjc2i0br().s[15]++;
      return exports.DEFAULT_ADMIN_PERMISSIONS;
    case 'user':
      /* istanbul ignore next */
      cov_22cjc2i0br().b[2][1]++;
    default:
      /* istanbul ignore next */
      cov_22cjc2i0br().b[2][2]++;
      cov_22cjc2i0br().s[16]++;
      return exports.DEFAULT_USER_PERMISSIONS;
  }
};
/* istanbul ignore next */
cov_22cjc2i0br().s[17]++;
exports.getPermissionsForRole = getPermissionsForRole;
/* istanbul ignore next */
cov_22cjc2i0br().s[18]++;
exports.default = {
  ADMIN_EMAILS: exports.ADMIN_EMAILS,
  DEFAULT_USER_PERMISSIONS: exports.DEFAULT_USER_PERMISSIONS,
  DEFAULT_ADMIN_PERMISSIONS: exports.DEFAULT_ADMIN_PERMISSIONS,
  isAdminEmail: exports.isAdminEmail,
  getUserRole: exports.getUserRole,
  getPermissionsForRole: exports.getPermissionsForRole
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,